{"version":3,"file":"static/js/main.26695d7c.js","mappings":"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Q,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACZ,IAAOA,EAAQ,OACjB,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,MACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EA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","sources":["src/i18n/translations/cs.js","src/i18n/translations/en.js","src/i18n/translations/es.js","src/i18n/translations/zh.js","src/i18n/i18n.js","src/components/QuestionLanguageSwitcher.js","src/utils/assetDataService.js","src/utils/styleUtils.js","src/screens/BrowseScreen.js","src/data/mockData.js","src/utils/database.js","src/screens/ExamScreen.js","src/screens/FavoritesScreen.js","src/screens/HomeScreen.js","src/screens/MistakesScreen.js","src/screens/QuestionDetailScreen.js","src/screens/ResultScreen.js","src/utils/fixFavorites.js","src/utils/fixJson.js","src/screens/SettingsScreen.js","src/components/ProgressChart.js","src/screens/StudyProgressScreen.js","src/navigation/AppNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Czech translations\r\nconst cs = {\r\n  navigation: {\r\n    home: 'Domů',\r\n    browse: 'Procházet',\r\n    exam: 'Zkouška',\r\n    favorites: 'Oblíbené',\r\n    mistakes: 'Chyby',\r\n    settings: 'Nastavení',\r\n    question_detail: 'Detail otázky',\r\n    exam_result: 'Výsledek zkoušky'\r\n  },\r\n  home: {\r\n    title: 'Aplikace pro řidičský průkaz ČR',\r\n    subtitle: 'Připravte se na českou řidičskou zkoušku s naší komplexní příručkou',\r\n    startExam: 'Začít zkoušku',\r\n    examDescription: 'Začněte simulovanou zkoušku s 25 náhodnými otázkami',\r\n    browseTopic: 'Procházet otázky',\r\n    browseDescription: 'Prozkoumat všechny otázky podle kategorie',\r\n    reviewMistakes: 'Přehled chyb',\r\n    mistakesDescription: 'Procvičte si otázky, které jste zodpověděli špatně',\r\n    favorites: 'Oblíbené',\r\n    favoritesDescription: 'Přehled vašich uložených otázek',\r\n    studyStats: 'Statistiky studia',\r\n    examsTaken: 'Zkoušky',\r\n    questionsAnswered: 'Otázky',\r\n    accuracy: 'Přesnost'\r\n  },\r\n  browse: {\r\n    title: 'Procházet otázky',\r\n    allQuestions: 'Všechny otázky',\r\n    search: 'Hledat otázky',\r\n    categories: {\r\n      traffic_signs: 'Dopravní značky',\r\n      traffic_rules: 'Dopravní pravidla',\r\n      priority: 'Pravidla přednosti',\r\n      parking: 'Pravidla parkování',\r\n      speed_limits: 'Rychlostní limity',\r\n      highway: 'Pravidla dálnice',\r\n      penalties: 'Pokuty',\r\n      general: 'Obecné'\r\n    },\r\n    noQuestionsFound: 'Nebyly nalezeny žádné otázky odpovídající vašim kritériím'\r\n  },\r\n  exam: {\r\n    title: 'Řidičská zkouška',\r\n    subtitle: 'Otestujte své znalosti řízení',\r\n    start: 'Začít zkoušku',\r\n    description: 'Zkouška se skládá z 25 náhodných otázek z různých kategorií. Pro úspěšné složení potřebujete zodpovědět alespoň 20 správně.',\r\n    timeLimit: 'Časový limit: 30 minut',\r\n    questionCount: 'Otázka: {{current}} z {{total}}',\r\n    timeRemaining: 'Čas: {{minutes}}:{{seconds}}',\r\n    submit: 'Odeslat odpovědi',\r\n    next: 'Další',\r\n    previous: 'Předchozí',\r\n    finishExam: 'Dokončit zkoušku',\r\n    chooseMode: 'Vyberte režim zkoušky',\r\n    customExam: 'Vlastní zkouška',\r\n    questionCount: 'Počet otázek (5-50)',\r\n    timeLimit: 'Časový limit (minuty, 0 pro neomezený)',\r\n    cancel: 'Zrušit',\r\n    examPreparation: 'Informace o zkoušce',\r\n    examInfo: '• Česká teoretická zkouška má 25 otázek, potřebujete 20 správných odpovědí pro úspěšné složení\\n• Časový limit je 30 minut\\n• Prosím, absolvujte zkoušku v klidném prostředí\\n• Během zkoušky neukončujte aplikaci'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Vyberte odpověď',\r\n    checkAnswer: 'Zkontrolovat odpověď',\r\n    correct: 'Správně',\r\n    incorrect: 'Nesprávně',\r\n    explanation: 'Vysvětlení',\r\n    nextQuestion: 'Další otázka',\r\n    loading: 'Načítání otázky...'\r\n  },\r\n  result: {\r\n    title: 'Výsledky zkoušky',\r\n    passed: 'Gratulujeme! Úspěšně jste složili zkoušku!',\r\n    failed: 'Bohužel jste neuspěli.',\r\n    score: 'Skóre: {{correct}}/{{total}}',\r\n    requiredToPass: 'Požadováno ke složení: 20/25',\r\n    reviewIncorrect: 'Přehled nesprávných odpovědí',\r\n    retakeExam: 'Opakovat zkoušku',\r\n    backToHome: 'Zpět na úvod',\r\n    examDetails: 'Detaily otázek',\r\n    yourAnswer: 'Vaše odpověď:',\r\n    correctAnswer: 'Správná odpověď:',\r\n    viewExplanation: 'Zobrazit vysvětlení',\r\n    timeSpent: 'Strávený čas',\r\n    correctCount: 'Správně',\r\n    incorrectCount: 'Nesprávně'\r\n  },\r\n  favorites: {\r\n    title: 'Oblíbené otázky',\r\n    noFavorites: 'Zatím jste nepřidali žádné oblíbené položky',\r\n    browseToAdd: 'Procházejte otázky a klepnutím na ikonu srdce uložte důležité otázky',\r\n    browseCatalog: 'Procházet otázky',\r\n    removeFavorite: 'Odstranit z oblíbených',\r\n    addFavorite: 'Přidat do oblíbených',\r\n    edit: 'Upravit',\r\n    cancel: 'Zrušit',\r\n    delete: 'Smazat',\r\n    selectAll: 'Vybrat vše',\r\n    deselectAll: 'Zrušit výběr',\r\n    favoritesCount: '{{count}} uložených otázek',\r\n    viewDetails: 'Zobrazit detaily'\r\n  },\r\n  mistakes: {\r\n    title: 'Chybné otázky',\r\n    noMistakes: 'Zatím nemáte žádné chyby!',\r\n    practiceToContinue: 'Pokračujte v procvičování, otázky, které zodpovíte nesprávně, se objeví zde',\r\n    startPractice: 'Začít procvičování',\r\n    mistakesCount: '{{count}} chybných otázek',\r\n    sortNewest: 'Nejnovější',\r\n    sortOldest: 'Nejstarší',\r\n    clearAll: 'Vymazat vše',\r\n    clearConfirm: 'Opravdu chcete vymazat všechny záznamy o chybách? Tuto akci nelze vrátit zpět.',\r\n    viewExplanation: 'Zobrazit vysvětlení'\r\n  },\r\n  settings: {\r\n    title: 'Nastavení',\r\n    subtitle: 'Přizpůsobte si svou aplikaci',\r\n    language: 'Jazyk',\r\n    about: 'O aplikaci',\r\n    version: 'Verze',\r\n    resetData: 'Resetovat všechna data',\r\n    resetConfirm: 'Jste si jisti? Tímto smažete všechna uložená data a akci nelze vrátit zpět.',\r\n    resetSuccess: 'Všechna data byla resetována.',\r\n    languages: {\r\n      en: 'Angličtina',\r\n      zh: 'Čínština',\r\n      cs: 'Čeština',\r\n      es: 'Španělština'\r\n    },\r\n    appSettings: 'Nastavení aplikace',\r\n    dailyReminder: 'Denní připomenutí',\r\n    reminderDescription: 'Dostávat denní připomenutí ke studiu',\r\n    darkMode: 'Tmavý režim',\r\n    darkModeDescription: 'Použít noční režim pro ochranu očí',\r\n    appInfo: 'Informace o aplikaci',\r\n    rateApp: 'Ohodnotit aplikaci',\r\n    privacyPolicy: 'Zásady ochrany osobních údajů',\r\n    appVersion: 'Aplikace pro řidičský průkaz ČR v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Načítání...',\r\n    error: 'Chyba',\r\n    cancel: 'Zrušit',\r\n    confirm: 'Potvrdit',\r\n    save: 'Uložit',\r\n    delete: 'Smazat',\r\n    edit: 'Upravit',\r\n    done: 'Hotovo',\r\n    yes: 'Ano',\r\n    no: 'Ne'\r\n  }\r\n};\r\n\r\nexport default cs; ","// English translations\r\nconst en = {\r\n  navigation: {\r\n    home: 'Home',\r\n    browse: 'Browse',\r\n    exam: 'Exam',\r\n    favorites: 'Favorites',\r\n    mistakes: 'Mistakes',\r\n    settings: 'Settings',\r\n    question_detail: 'Question Detail',\r\n    exam_result: 'Exam Result',\r\n    study_progress: 'Study Progress'\r\n  },\r\n  home: {\r\n    title: 'Czech Driving License App',\r\n    subtitle: 'Prepare for your Czech driving test with our comprehensive guide',\r\n    startExam: 'Start Exam',\r\n    examDescription: 'Start a simulated driving test with 25 random questions',\r\n    browseTopic: 'Browse Questions',\r\n    browseDescription: 'Explore all questions by category',\r\n    reviewMistakes: 'Review Mistakes',\r\n    mistakesDescription: 'Practice the questions you got wrong',\r\n    favorites: 'Favorites',\r\n    favoritesDescription: 'Review your saved questions',\r\n    studyStats: 'Study Statistics',\r\n    examsTaken: 'Exams',\r\n    questionsAnswered: 'Questions',\r\n    accuracy: 'Accuracy'\r\n  },\r\n  browse: {\r\n    title: 'Browse Questions',\r\n    allQuestions: 'All Questions',\r\n    search: 'Search questions',\r\n    categories: {\r\n      traffic_signs: 'Traffic Signs',\r\n      traffic_rules: 'Traffic Rules',\r\n      priority: 'Priority Rules',\r\n      parking: 'Parking Rules',\r\n      speed_limits: 'Speed Limits',\r\n      highway: 'Highway Rules',\r\n      penalties: 'Penalties',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No questions found matching your criteria'\r\n  },\r\n  exam: {\r\n    title: 'Driving Test',\r\n    subtitle: 'Test your driving knowledge',\r\n    start: 'Start Test',\r\n    description: 'The test consists of 25 random questions from different categories. You need to answer at least 20 correctly to pass.',\r\n    timeLimit: 'Time Limit: 30 minutes',\r\n    questionCount: 'Question: {{current}} of {{total}}',\r\n    timeRemaining: 'Time: {{minutes}}:{{seconds}}',\r\n    submit: 'Submit Answers',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    finishExam: 'Finish Exam',\r\n    chooseMode: 'Choose Exam Mode',\r\n    customExam: 'Custom Exam',\r\n    questionCount: 'Question Count (5-50)',\r\n    timeLimit: 'Time Limit (minutes, 0 for unlimited)',\r\n    cancel: 'Cancel',\r\n    examPreparation: 'Exam Information',\r\n    examInfo: 'About Czech Driving Test',\r\n    examInfoLine1: 'The test has 25 questions, you need 20 correct answers to pass',\r\n    examInfoLine2: 'The time limit is 30 minutes',\r\n    examInfoLine3: 'Topics include traffic rules, signs, and safe driving',\r\n    examInfoLine4: 'This app provides a complete question bank and multilingual support',\r\n    fullExam: 'Full Exam',\r\n    practiceMode: 'Practice Mode',\r\n    quickTest: 'Quick Test',\r\n    exam: 'Exam'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Select an answer',\r\n    checkAnswer: 'Check Answer',\r\n    correct: 'Correct',\r\n    incorrect: 'Incorrect',\r\n    explanation: 'Explanation',\r\n    nextQuestion: 'Next Question',\r\n    loading: 'Loading question...'\r\n  },\r\n  result: {\r\n    title: 'Exam Results',\r\n    passed: 'Congratulations! You passed!',\r\n    failed: 'Unfortunately, you did not pass.',\r\n    score: 'Score: {{correct}}/{{total}}',\r\n    requiredToPass: 'Required to pass: 20/25',\r\n    reviewIncorrect: 'Review Incorrect Answers',\r\n    retakeExam: 'Retake Exam',\r\n    backToHome: 'Back to Home',\r\n    examDetails: 'Question Details',\r\n    yourAnswer: 'Your answer:',\r\n    correctAnswer: 'Correct answer:',\r\n    viewExplanation: 'View Explanation',\r\n    timeSpent: 'Time spent',\r\n    correctCount: 'Correct',\r\n    incorrectCount: 'Incorrect'\r\n  },\r\n  favorites: {\r\n    title: 'Favorite Questions',\r\n    noFavorites: 'You haven\\'t added any favorites yet',\r\n    browseToAdd: 'Browse questions and tap the heart icon to save important questions',\r\n    browseCatalog: 'Browse Questions',\r\n    removeFavorite: 'Remove from Favorites',\r\n    addFavorite: 'Add to Favorites',\r\n    edit: 'Edit',\r\n    cancel: 'Cancel',\r\n    delete: 'Delete',\r\n    selectAll: 'Select All',\r\n    deselectAll: 'Deselect All',\r\n    favoritesCount: '{{count}} questions saved',\r\n    viewDetails: 'View Details'\r\n  },\r\n  mistakes: {\r\n    title: 'Mistake Questions',\r\n    noMistakes: 'You haven\\'t made any mistakes yet!',\r\n    practiceToContinue: 'Continue practicing, questions you answer incorrectly will appear here',\r\n    startPractice: 'Start Practice',\r\n    mistakesCount: '{{count}} mistake questions',\r\n    sortNewest: 'Newest',\r\n    sortOldest: 'Oldest',\r\n    clearAll: 'Clear All',\r\n    clearConfirm: 'Are you sure you want to clear all mistake records? This cannot be undone.',\r\n    viewExplanation: 'View Explanation'\r\n  },\r\n  progress: {\r\n    title: 'Study Progress',\r\n    totalExams: 'Total Exams',\r\n    totalQuestions: 'Total Questions',\r\n    averageAccuracy: 'Avg. Accuracy',\r\n    recentActivity: 'Recent Activity',\r\n    noHistory: 'No study history yet',\r\n    startExam: 'Take an exam to start tracking your progress',\r\n    clearHistory: 'Clear History',\r\n    clearProgressConfirm: 'Are you sure you want to clear all study progress? This cannot be undone.',\r\n    clearProgressSuccess: 'Study progress has been cleared',\r\n    clearProgressError: 'Failed to clear study progress',\r\n    questions: 'Questions',\r\n    correct: 'Correct',\r\n    accuracy: 'Accuracy',\r\n    accuracyTrend: 'Accuracy Trend',\r\n    questionStats: 'Question Statistics',\r\n    notEnoughData: 'At least 2 exam records needed to show trend',\r\n    noData: 'No data available'\r\n  },\r\n  settings: {\r\n    title: 'Settings',\r\n    subtitle: 'Personalize your app experience',\r\n    language: 'Language',\r\n    about: 'About',\r\n    version: 'Version',\r\n    resetData: 'Reset All Data',\r\n    resetConfirm: 'Are you sure? This will delete all your saved data and cannot be undone.',\r\n    resetSuccess: 'All data has been reset.',\r\n    languages: {\r\n      en: 'English',\r\n      zh: 'Chinese',\r\n      cs: 'Czech',\r\n      es: 'Spanish'\r\n    },\r\n    appSettings: 'App Settings',\r\n    dailyReminder: 'Daily Reminder',\r\n    reminderDescription: 'Receive daily study reminders',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDescription: 'Use night mode to protect your eyes',\r\n    appInfo: 'App Information',\r\n    rateApp: 'Rate App',\r\n    privacyPolicy: 'Privacy Policy',\r\n    appVersion: 'Czech Driving License App v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Loading...',\r\n    error: 'Error',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    save: 'Save',\r\n    delete: 'Delete',\r\n    edit: 'Edit',\r\n    done: 'Done',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    success: 'Success'\r\n  }\r\n};\r\n\r\nexport default en; ","// Spanish translations\r\nconst es = {\r\n  navigation: {\r\n    home: 'Inicio',\r\n    browse: 'Explorar',\r\n    exam: 'Examen',\r\n    favorites: 'Favoritos',\r\n    mistakes: 'Errores',\r\n    settings: 'Ajustes',\r\n    question_detail: 'Detalle de pregunta',\r\n    exam_result: 'Resultado del examen'\r\n  },\r\n  home: {\r\n    title: 'App de Licencia de Conducir Checa',\r\n    subtitle: 'Prepárate para tu examen de conducir checo con nuestra guía completa',\r\n    startExam: 'Iniciar Examen',\r\n    examDescription: 'Comienza un examen simulado con 25 preguntas aleatorias',\r\n    browseTopic: 'Explorar Preguntas',\r\n    browseDescription: 'Explora todas las preguntas por categoría',\r\n    reviewMistakes: 'Revisar Errores',\r\n    mistakesDescription: 'Practica las preguntas que respondiste incorrectamente',\r\n    favorites: 'Favoritos',\r\n    favoritesDescription: 'Revisa tus preguntas guardadas',\r\n    studyStats: 'Estadísticas de Estudio',\r\n    examsTaken: 'Exámenes',\r\n    questionsAnswered: 'Preguntas',\r\n    accuracy: 'Precisión'\r\n  },\r\n  browse: {\r\n    title: 'Explorar Preguntas',\r\n    allQuestions: 'Todas las Preguntas',\r\n    search: 'Buscar preguntas',\r\n    categories: {\r\n      traffic_signs: 'Señales de Tráfico',\r\n      traffic_rules: 'Normas de Tráfico',\r\n      priority: 'Reglas de Prioridad',\r\n      parking: 'Reglas de Estacionamiento',\r\n      speed_limits: 'Límites de Velocidad',\r\n      highway: 'Reglas de Autopista',\r\n      penalties: 'Sanciones',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No se encontraron preguntas que coincidan con tus criterios'\r\n  },\r\n  exam: {\r\n    title: 'Examen de Conducir',\r\n    subtitle: 'Pon a prueba tus conocimientos de conducción',\r\n    start: 'Iniciar Examen',\r\n    description: 'El examen consta de 25 preguntas aleatorias de diferentes categorías. Necesitas responder correctamente al menos 20 para aprobar.',\r\n    timeLimit: 'Límite de tiempo: 30 minutos',\r\n    questionCount: 'Pregunta: {{current}} de {{total}}',\r\n    timeRemaining: 'Tiempo: {{minutes}}:{{seconds}}',\r\n    submit: 'Enviar Respuestas',\r\n    next: 'Siguiente',\r\n    previous: 'Anterior',\r\n    finishExam: 'Finalizar Examen',\r\n    chooseMode: 'Elegir Modo de Examen',\r\n    customExam: 'Examen Personalizado',\r\n    questionCount: 'Número de preguntas (5-50)',\r\n    timeLimit: 'Límite de tiempo (minutos, 0 para ilimitado)',\r\n    cancel: 'Cancelar',\r\n    examPreparation: 'Información del Examen',\r\n    examInfo: '• El examen teórico checo tiene 25 preguntas, necesitas 20 respuestas correctas para aprobar\\n• El límite de tiempo es de 30 minutos\\n• Por favor, realiza el examen en un ambiente tranquilo\\n• No salgas de la aplicación durante el examen'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Selecciona una respuesta',\r\n    checkAnswer: 'Comprobar Respuesta',\r\n    correct: 'Correcto',\r\n    incorrect: 'Incorrecto',\r\n    explanation: 'Explicación',\r\n    nextQuestion: 'Siguiente Pregunta',\r\n    loading: 'Cargando pregunta...'\r\n  },\r\n  result: {\r\n    title: 'Resultados del Examen',\r\n    passed: '¡Felicidades! ¡Has aprobado!',\r\n    failed: 'Lamentablemente, no has aprobado.',\r\n    score: 'Puntuación: {{correct}}/{{total}}',\r\n    requiredToPass: 'Necesario para aprobar: 20/25',\r\n    reviewIncorrect: 'Revisar Respuestas Incorrectas',\r\n    retakeExam: 'Volver a Hacer el Examen',\r\n    backToHome: 'Volver al Inicio',\r\n    examDetails: 'Detalles de Preguntas',\r\n    yourAnswer: 'Tu respuesta:',\r\n    correctAnswer: 'Respuesta correcta:',\r\n    viewExplanation: 'Ver Explicación',\r\n    timeSpent: 'Tiempo empleado',\r\n    correctCount: 'Correctas',\r\n    incorrectCount: 'Incorrectas'\r\n  },\r\n  favorites: {\r\n    title: 'Preguntas Favoritas',\r\n    noFavorites: 'Aún no has añadido ningún favorito',\r\n    browseToAdd: 'Explora preguntas y toca el icono de corazón para guardar preguntas importantes',\r\n    browseCatalog: 'Explorar Preguntas',\r\n    removeFavorite: 'Eliminar de Favoritos',\r\n    addFavorite: 'Añadir a Favoritos',\r\n    edit: 'Editar',\r\n    cancel: 'Cancelar',\r\n    delete: 'Eliminar',\r\n    selectAll: 'Seleccionar Todo',\r\n    deselectAll: 'Deseleccionar Todo',\r\n    favoritesCount: '{{count}} preguntas guardadas',\r\n    viewDetails: 'Ver Detalles'\r\n  },\r\n  mistakes: {\r\n    title: 'Preguntas Erróneas',\r\n    noMistakes: '¡Aún no has cometido ningún error!',\r\n    practiceToContinue: 'Continúa practicando, las preguntas que respondas incorrectamente aparecerán aquí',\r\n    startPractice: 'Comenzar Práctica',\r\n    mistakesCount: '{{count}} preguntas erróneas',\r\n    sortNewest: 'Más recientes',\r\n    sortOldest: 'Más antiguas',\r\n    clearAll: 'Borrar Todo',\r\n    clearConfirm: '¿Estás seguro de que quieres borrar todos los registros de errores? Esta acción no se puede deshacer.',\r\n    viewExplanation: 'Ver Explicación'\r\n  },\r\n  settings: {\r\n    title: 'Ajustes',\r\n    subtitle: 'Personaliza tu experiencia en la aplicación',\r\n    language: 'Idioma',\r\n    about: 'Acerca de',\r\n    version: 'Versión',\r\n    resetData: 'Resetear Todos los Datos',\r\n    resetConfirm: '¿Estás seguro? Esto eliminará todos tus datos guardados y no se puede deshacer.',\r\n    resetSuccess: 'Todos los datos han sido reseteados.',\r\n    languages: {\r\n      en: 'Inglés',\r\n      zh: 'Chino',\r\n      cs: 'Checo',\r\n      es: 'Español'\r\n    },\r\n    appSettings: 'Ajustes de la Aplicación',\r\n    dailyReminder: 'Recordatorio Diario',\r\n    reminderDescription: 'Recibir recordatorios diarios de estudio',\r\n    darkMode: 'Modo Oscuro',\r\n    darkModeDescription: 'Usar modo nocturno para proteger tus ojos',\r\n    appInfo: 'Información de la Aplicación',\r\n    rateApp: 'Valorar Aplicación',\r\n    privacyPolicy: 'Política de Privacidad',\r\n    appVersion: 'App de Licencia de Conducir Checa v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Cargando...',\r\n    error: 'Error',\r\n    cancel: 'Cancelar',\r\n    confirm: 'Confirmar',\r\n    save: 'Guardar',\r\n    delete: 'Eliminar',\r\n    edit: 'Editar',\r\n    done: 'Hecho',\r\n    yes: 'Sí',\r\n    no: 'No'\r\n  }\r\n};\r\n\r\nexport default es; ","// 中文翻译\r\nconst zh = {\r\n  navigation: {\r\n    home: '首页',\r\n    browse: '浏览',\r\n    exam: '考试',\r\n    favorites: '收藏',\r\n    mistakes: '错题',\r\n    settings: '设置',\r\n    question_detail: '题目详情',\r\n    exam_result: '考试结果',\r\n    study_progress: '学习进度'\r\n  },\r\n  home: {\r\n    title: '捷克驾考宝典',\r\n    subtitle: '全面帮助您准备捷克驾驶考试',\r\n    startExam: '开始考试',\r\n    examDescription: '开始模拟驾照考试，共30道随机题目',\r\n    browseTopic: '浏览题库',\r\n    browseDescription: '按类别查看所有考题',\r\n    reviewMistakes: '复习错题',\r\n    mistakesDescription: '练习之前答错的问题',\r\n    favorites: '我的收藏',\r\n    favoritesDescription: '复习保存的题目',\r\n    studyStats: '学习统计',\r\n    examsTaken: '考试次数',\r\n    questionsAnswered: '已答题目',\r\n    accuracy: '正确率'\r\n  },\r\n  browse: {\r\n    title: '浏览题库',\r\n    allQuestions: '所有题目',\r\n    search: '搜索题目',\r\n    categories: {\r\n      traffic_signs: '交通标志',\r\n      traffic_rules: '交通规则',\r\n      priority: '优先通行权',\r\n      parking: '停车规则',\r\n      speed_limits: '速度限制',\r\n      highway: '高速公路',\r\n      penalties: '违章处罚',\r\n      general: '一般问题'\r\n    },\r\n    noQuestionsFound: '没有找到匹配的题目'\r\n  },\r\n  exam: {\r\n    title: '驾照考试',\r\n    subtitle: '测试您的驾照知识',\r\n    start: '开始考试',\r\n    description: '考试包括25道来自不同类别的随机题目。要通过考试，至少需要答对20题。',\r\n    timeLimit: '时间限制：30分钟',\r\n    questionCount: '问题: {{current}}/{{total}}',\r\n    timeRemaining: '时间: {{minutes}}:{{seconds}}',\r\n    submit: '提交答案',\r\n    next: '下一题',\r\n    previous: '上一题',\r\n    finishExam: '完成考试',\r\n    chooseMode: '选择考试模式',\r\n    customExam: '自定义考试',\r\n    questionCount: '题目数量 (5-50)',\r\n    timeLimit: '时间限制 (分钟，0为无限制)',\r\n    cancel: '取消',\r\n    examPreparation: '考试须知',\r\n    examInfo: '关于捷克驾照考试',\r\n    examInfoLine1: '考试包含25道选择题，答对至少20题才能通过',\r\n    examInfoLine2: '考试时间为30分钟',\r\n    examInfoLine3: '考试内容包括交通规则、标志和安全驾驶',\r\n    examInfoLine4: '本应用提供完整的题库和多语言支持',\r\n    fullExam: '完整模拟',\r\n    practiceMode: '练习模式',\r\n    quickTest: '快速测试',\r\n    exam: '考试'\r\n  },\r\n  question: {\r\n    selectAnswer: '选择答案',\r\n    checkAnswer: '检查答案',\r\n    correct: '正确',\r\n    incorrect: '错误',\r\n    explanation: '解释',\r\n    nextQuestion: '下一题',\r\n    loading: '加载题目中...'\r\n  },\r\n  result: {\r\n    title: '考试结果',\r\n    passed: '恭喜，考试通过！',\r\n    failed: '很遗憾，考试未通过',\r\n    score: '得分: {{correct}}/{{total}}',\r\n    requiredToPass: '通过要求: 20/25',\r\n    reviewIncorrect: '复习错题',\r\n    retakeExam: '重新考试',\r\n    backToHome: '返回首页',\r\n    examDetails: '题目详情',\r\n    yourAnswer: '您的回答:',\r\n    correctAnswer: '正确答案:',\r\n    viewExplanation: '查看解析',\r\n    timeSpent: '用时',\r\n    correctCount: '正确',\r\n    incorrectCount: '错误'\r\n  },\r\n  favorites: {\r\n    title: '收藏题目',\r\n    noFavorites: '您还没有添加任何收藏题目',\r\n    browseToAdd: '浏览题库时点击心形图标来收藏重要题目',\r\n    browseCatalog: '浏览题库',\r\n    removeFavorite: '取消收藏',\r\n    addFavorite: '添加收藏',\r\n    edit: '编辑',\r\n    cancel: '取消',\r\n    delete: '删除',\r\n    selectAll: '全选',\r\n    deselectAll: '取消全选',\r\n    favoritesCount: '已收藏 {{count}} 个题目',\r\n    viewDetails: '查看详情'\r\n  },\r\n  mistakes: {\r\n    title: '错题记录',\r\n    noMistakes: '您还没有任何错题记录!',\r\n    practiceToContinue: '继续刷题，答错的题目将自动记录在这里',\r\n    startPractice: '开始做题',\r\n    mistakesCount: '共有 {{count}} 道错题',\r\n    sortNewest: '最新',\r\n    sortOldest: '最早',\r\n    clearAll: '清空',\r\n    clearConfirm: '确定要清空所有错题记录吗？此操作不可恢复。',\r\n    viewExplanation: '查看解析'\r\n  },\r\n  progress: {\r\n    title: '学习进度',\r\n    totalExams: '考试总数',\r\n    totalQuestions: '题目总数',\r\n    averageAccuracy: '平均正确率',\r\n    recentActivity: '最近活动',\r\n    noHistory: '暂无学习记录',\r\n    startExam: '参加考试开始记录您的学习进度',\r\n    clearHistory: '清除历史',\r\n    clearProgressConfirm: '确定要清除所有学习进度记录吗？此操作不可恢复。',\r\n    clearProgressSuccess: '学习进度已清除',\r\n    clearProgressError: '清除学习进度失败',\r\n    questions: '题目',\r\n    correct: '正确',\r\n    accuracy: '正确率',\r\n    accuracyTrend: '正确率趋势',\r\n    questionStats: '答题统计',\r\n    notEnoughData: '至少需要2次考试记录才能显示趋势图',\r\n    noData: '暂无数据'\r\n  },\r\n  settings: {\r\n    title: '设置',\r\n    subtitle: '个性化您的应用体验',\r\n    language: '语言设置',\r\n    about: '关于应用',\r\n    version: '版本号',\r\n    resetData: '重置所有数据',\r\n    resetConfirm: '确定吗？这将删除您保存的所有数据，且无法恢复。',\r\n    resetSuccess: '所有数据已重置。',\r\n    languages: {\r\n      en: '英语',\r\n      zh: '中文',\r\n      cs: '捷克语',\r\n      es: '西班牙语'\r\n    },\r\n    appSettings: '应用设置',\r\n    dailyReminder: '每日提醒',\r\n    reminderDescription: '接收每日学习提醒',\r\n    darkMode: '暗黑模式',\r\n    darkModeDescription: '使用夜间模式保护眼睛',\r\n    appInfo: '应用信息',\r\n    rateApp: '评分应用',\r\n    privacyPolicy: '隐私政策',\r\n    appVersion: '捷克驾考宝典 v1.0.0'\r\n  },\r\n  common: {\r\n    loading: '加载中...',\r\n    error: '错误',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n    save: '保存',\r\n    delete: '删除',\r\n    edit: '编辑',\r\n    done: '完成',\r\n    yes: '是',\r\n    no: '否',\r\n    success: '成功'\r\n  }\r\n};\r\n\r\nexport default zh; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport cs from './translations/cs';\r\nimport en from './translations/en';\r\nimport es from './translations/es';\r\nimport zh from './translations/zh';\r\n\r\n// 标记初始化状态\r\nlet isInitialized = false;\r\n\r\n// 初始化i18n\r\nconst initI18n = async () => {\r\n  if (isInitialized) {\r\n    console.log('i18n already initialized, skipping');\r\n    return;\r\n  }\r\n\r\n  // 尝试从存储中获取用户语言设置\r\n  let userLanguage = 'zh'; // 默认语言\r\n  try {\r\n    const storedLanguage = await AsyncStorage.getItem('userLanguage');\r\n    if (storedLanguage) {\r\n      userLanguage = storedLanguage;\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load language setting', error);\r\n  }\r\n\r\n  await i18n\r\n    .use(initReactI18next)\r\n    .init({\r\n      resources: {\r\n        en: { translation: en },\r\n        zh: { translation: zh },\r\n        cs: { translation: cs },\r\n        es: { translation: es }\r\n      },\r\n      lng: userLanguage,\r\n      fallbackLng: 'zh',\r\n      interpolation: {\r\n        escapeValue: false\r\n      },\r\n      compatibilityJSON: 'v3'\r\n    });\r\n\r\n  // 标记为已初始化\r\n  isInitialized = true;\r\n  return i18n;\r\n};\r\n\r\n/**\r\n * 检查i18n是否已初始化\r\n * @returns {boolean}\r\n */\r\nexport const isI18nInitialized = () => {\r\n  return isInitialized;\r\n};\r\n\r\n// 导出已经初始化的i18n实例，方便直接使用\r\nexport { i18n };\r\n\r\nexport default initI18n; ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\n/**\r\n * 题目语言切换组件\r\n * @param {Object} props\r\n * @param {string} props.currentLanguage - 当前选择的语言代码\r\n * @param {Function} props.onChangeLanguage - 切换语言的回调函数\r\n */\r\nconst QuestionLanguageSwitcher = ({ currentLanguage, onChangeLanguage }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  const languages = [\r\n    { code: 'zh', name: '中文', icon: 'language-outline' },\r\n    { code: 'en', name: 'EN', icon: 'language-outline' },\r\n    { code: 'cs', name: 'CZ', icon: 'language-outline' },\r\n    { code: 'es', name: 'ES', icon: 'language-outline' }\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {languages.map((lang) => (\r\n        <TouchableOpacity\r\n          key={lang.code}\r\n          style={[\r\n            styles.languageButton,\r\n            currentLanguage === lang.code && styles.activeLanguageButton\r\n          ]}\r\n          onPress={() => onChangeLanguage(lang.code)}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.languageText,\r\n              currentLanguage === lang.code && styles.activeLanguageText\r\n            ]}\r\n          >\r\n            {lang.name}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n    paddingHorizontal: 8,\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    borderRadius: 20,\r\n    alignSelf: 'center',\r\n  },\r\n  languageButton: {\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 16,\r\n    marginHorizontal: 4,\r\n  },\r\n  activeLanguageButton: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  languageText: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  activeLanguageText: {\r\n    color: '#ffffff',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default QuestionLanguageSwitcher; ","// 交通信号图标映射，与信号文件名关联\r\n// 预定义一个完整的交通信号图标对象\r\nconst trafficSignalImages = {\r\n  1: require('../../assets/signals/signal1.png'),\r\n  2: require('../../assets/signals/signal2.png'),\r\n  3: require('../../assets/signals/signal3.png'),\r\n  4: require('../../assets/signals/signal4.png'),\r\n  5: require('../../assets/signals/signal5.png'),\r\n  6: require('../../assets/signals/signal6.png'),\r\n  7: require('../../assets/signals/signal7.png'),\r\n  8: require('../../assets/signals/signal8.png'),\r\n  9: require('../../assets/signals/signal9.png'),\r\n  10: require('../../assets/signals/signal10.png'),\r\n  11: require('../../assets/signals/signal11.png'),\r\n  12: require('../../assets/signals/signal12.png'),\r\n  13: require('../../assets/signals/signal13.png'),\r\n  14: require('../../assets/signals/signal14.png'),\r\n  15: require('../../assets/signals/signal15.png'),\r\n  16: require('../../assets/signals/signal16.png'),\r\n  17: require('../../assets/signals/signal17.png'),\r\n  18: require('../../assets/signals/signal18.png'),\r\n  19: require('../../assets/signals/signal19.png'),\r\n  20: require('../../assets/signals/signal20.png'),\r\n  21: require('../../assets/signals/signal21.png'),\r\n  22: require('../../assets/signals/signal22.png'),\r\n  23: require('../../assets/signals/signal23.png'),\r\n  24: require('../../assets/signals/signal24.png'),\r\n  25: require('../../assets/signals/signal25.png'),\r\n  26: require('../../assets/signals/signal26.png'),\r\n  27: require('../../assets/signals/signal27.png'),\r\n  28: require('../../assets/signals/signal28.png'),\r\n  29: require('../../assets/signals/signal29.png'),\r\n  30: require('../../assets/signals/signal30.png'),\r\n  31: require('../../assets/signals/signal31.png'),\r\n  32: require('../../assets/signals/signal32.png'),\r\n  33: require('../../assets/signals/signal33.png'),\r\n  34: require('../../assets/signals/signal34.png'),\r\n  35: require('../../assets/signals/signal35.png'),\r\n  36: require('../../assets/signals/signal36.png'),\r\n  37: require('../../assets/signals/signal37.png'),\r\n  38: require('../../assets/signals/signal38.png'),\r\n  39: require('../../assets/signals/signal39.png'),\r\n  40: require('../../assets/signals/signal40.png'),\r\n  41: require('../../assets/signals/signal41.png'),\r\n  42: require('../../assets/signals/signal42.png'),\r\n  43: require('../../assets/signals/signal43.png'),\r\n  44: require('../../assets/signals/signal44.png'),\r\n  45: require('../../assets/signals/signal45.png'),\r\n  46: require('../../assets/signals/signal46.png'),\r\n  47: require('../../assets/signals/signal47.png'),\r\n  48: require('../../assets/signals/signal48.png'),\r\n  49: require('../../assets/signals/signal49.png'),\r\n  50: require('../../assets/signals/signal50.png'),\r\n  51: require('../../assets/signals/signal51.png'),\r\n  52: require('../../assets/signals/signal52.png'),\r\n  53: require('../../assets/signals/signal53.png'),\r\n};\r\n\r\n// 在文件开头添加图片映射\r\n// 预加载所有实际存在的图片\r\nconst imageAssets = {\r\n    '1': require('../../assets/images/image1.png'),\r\n  '2': require('../../assets/images/image2.png'),\r\n  '3': require('../../assets/images/image3.png'),\r\n  '4': require('../../assets/images/image4.png'),\r\n  '5': require('../../assets/images/image5.png'),\r\n  '6': require('../../assets/images/image6.png'),\r\n  '7': require('../../assets/images/image7.png'),\r\n  '8': require('../../assets/images/image8.png'),\r\n  '9': require('../../assets/images/image9.png'),\r\n  '20': require('../../assets/images/image20.png'),\r\n  '21': require('../../assets/images/image21.png'),\r\n  '22': require('../../assets/images/image22.png'),\r\n  '23': require('../../assets/images/image23.png'),\r\n  '24': require('../../assets/images/image24.png'),\r\n  '25': require('../../assets/images/image25.png'),\r\n  '26': require('../../assets/images/image26.png'),\r\n  '27': require('../../assets/images/image27.png'),\r\n  '28': require('../../assets/images/image28.png'),\r\n  '29': require('../../assets/images/image29.png'),\r\n  '30': require('../../assets/images/image30.png'),\r\n  '31': require('../../assets/images/image31.png'),\r\n  '32': require('../../assets/images/image32.png'),\r\n  '33': require('../../assets/images/image33.png'),\r\n  '34': require('../../assets/images/image34.png'),\r\n  '35': require('../../assets/images/image35.png'),\r\n  '36': require('../../assets/images/image36.png'),\r\n  '37': require('../../assets/images/image37.png'),\r\n  '38': require('../../assets/images/image38.png'),\r\n  '39': require('../../assets/images/image39.png'),\r\n  '40': require('../../assets/images/image40.png'),\r\n  '41': require('../../assets/images/image41.png'),\r\n  '42': require('../../assets/images/image42.png'),\r\n  '43': require('../../assets/images/image43.png'),\r\n  '44': require('../../assets/images/image44.png'),\r\n  '45': require('../../assets/images/image45.png'),\r\n  '46': require('../../assets/images/image46.png'),\r\n  '47': require('../../assets/images/image47.png'),\r\n  '48': require('../../assets/images/image48.png'),\r\n  '49': require('../../assets/images/image49.png'),\r\n  '50': require('../../assets/images/image50.png'),\r\n  '51': require('../../assets/images/image51.png'),\r\n  '52': require('../../assets/images/image52.png'),\r\n  '53': require('../../assets/images/image53.png'),\r\n  '54': require('../../assets/images/image54.png'),\r\n  '55': require('../../assets/images/image55.png'),\r\n  '56': require('../../assets/images/image56.png'),\r\n  '57': require('../../assets/images/image57.png'),\r\n  '58': require('../../assets/images/image58.png'),\r\n  '59': require('../../assets/images/image59.png'),\r\n  '60': require('../../assets/images/image60.png'),\r\n  '61': require('../../assets/images/image61.png'),\r\n  '62': require('../../assets/images/image62.png'),\r\n  '63': require('../../assets/images/image63.png'),\r\n  '64': require('../../assets/images/image64.png'),\r\n  '65': require('../../assets/images/image65.png'),\r\n  '66': require('../../assets/images/image66.png'),\r\n  '67': require('../../assets/images/image67.png'),\r\n  '68': require('../../assets/images/image68.png'),\r\n  '69': require('../../assets/images/image69.png'),\r\n  '70': require('../../assets/images/image70.png'),\r\n  '71': require('../../assets/images/image71.png'),\r\n  '72': require('../../assets/images/image72.png'),\r\n  '73': require('../../assets/images/image73.png'),\r\n  '74': require('../../assets/images/image74.png'),\r\n  '75': require('../../assets/images/image75.png'),\r\n  '76': require('../../assets/images/image76.png'),\r\n  '77': require('../../assets/images/image77.png'),\r\n  '78': require('../../assets/images/image78.png'),\r\n  '79': require('../../assets/images/image79.png'),\r\n  '80': require('../../assets/images/image80.png'),\r\n  '81': require('../../assets/images/image81.png'),\r\n  '82': require('../../assets/images/image82.png'),\r\n  '83': require('../../assets/images/image83.png'),\r\n  '84': require('../../assets/images/image84.png'),\r\n  '85': require('../../assets/images/image85.png'),\r\n  '86': require('../../assets/images/image86.png'),\r\n  '87': require('../../assets/images/image87.png'),\r\n  '88': require('../../assets/images/image88.png'),\r\n  '89': require('../../assets/images/image89.png'),\r\n  '90': require('../../assets/images/image90.png'),\r\n  '91': require('../../assets/images/image91.png'),\r\n  '92': require('../../assets/images/image92.png'),\r\n  '93': require('../../assets/images/image93.png'),\r\n  '94': require('../../assets/images/image94.png'),\r\n  '95': require('../../assets/images/image95.png'),\r\n  '96': require('../../assets/images/image96.png'),\r\n  '97': require('../../assets/images/image97.png'),\r\n  '98': require('../../assets/images/image98.png'),\r\n  '99': require('../../assets/images/image99.png'),\r\n    '100': require('../../assets/images/image100.png'),\r\n  '101': require('../../assets/images/image101.png'),\r\n  '102': require('../../assets/images/image102.png'),\r\n  '103': require('../../assets/images/image103.png'),\r\n  '104': require('../../assets/images/image104.png'),\r\n  '105': require('../../assets/images/image105.png'),\r\n  '106': require('../../assets/images/image106.png'),\r\n  '107': require('../../assets/images/image107.png'),\r\n  '108': require('../../assets/images/image108.png'),\r\n  '109': require('../../assets/images/image109.png'),\r\n  '110': require('../../assets/images/image110.png'),\r\n  '111': require('../../assets/images/image111.png'),\r\n  '112': require('../../assets/images/image112.png'),\r\n  '113': require('../../assets/images/image113.png'),\r\n  '114': require('../../assets/images/image114.png'),\r\n  '115': require('../../assets/images/image115.png'),\r\n  '116': require('../../assets/images/image116.png'),\r\n  '117': require('../../assets/images/image117.png'),\r\n  '118': require('../../assets/images/image118.png'),\r\n  '119': require('../../assets/images/image119.png'),\r\n  '120': require('../../assets/images/image120.png'),\r\n  '121': require('../../assets/images/image121.png'),\r\n  '122': require('../../assets/images/image122.png'),\r\n  '123': require('../../assets/images/image123.png'),\r\n  '124': require('../../assets/images/image124.png'),\r\n  '125': require('../../assets/images/image125.png'),\r\n  '126': require('../../assets/images/image126.png'),\r\n  '127': require('../../assets/images/image127.png'),\r\n  '128': require('../../assets/images/image128.png'),\r\n  '129': require('../../assets/images/image129.png'),\r\n  '130': require('../../assets/images/image130.png'),\r\n  '131': require('../../assets/images/image131.png'),\r\n  '132': require('../../assets/images/image132.png'),\r\n  '133': require('../../assets/images/image133.png'),\r\n  '134': require('../../assets/images/image134.png'),\r\n  '135': require('../../assets/images/image135.png'),\r\n  '136': require('../../assets/images/image136.png'),\r\n  '137': require('../../assets/images/image137.png'),\r\n  '138': require('../../assets/images/image138.png'),\r\n  '139': require('../../assets/images/image139.png'),\r\n  '140': require('../../assets/images/image140.png'),\r\n  '141': require('../../assets/images/image141.png'),\r\n  '142': require('../../assets/images/image142.png'),\r\n  '143': require('../../assets/images/image143.png'),\r\n  '144': require('../../assets/images/image144.png'),\r\n  '145': require('../../assets/images/image145.png'),\r\n  '146': require('../../assets/images/image146.png'),\r\n  '147': require('../../assets/images/image147.png'),\r\n  '148': require('../../assets/images/image148.png'),\r\n  '149': require('../../assets/images/image149.png'),\r\n  '150': require('../../assets/images/image150.png'),\r\n  '151': require('../../assets/images/image151.png'),\r\n  '152': require('../../assets/images/image152.png'),\r\n  '153': require('../../assets/images/image153.png'),\r\n  '154': require('../../assets/images/image154.png'),\r\n  '155': require('../../assets/images/image155.png'),\r\n  '156': require('../../assets/images/image156.png'),\r\n  '157': require('../../assets/images/image157.png'),\r\n  '158': require('../../assets/images/image158.png'),\r\n  '159': require('../../assets/images/image159.png'),\r\n  '160': require('../../assets/images/image160.png'),\r\n  '161': require('../../assets/images/image161.png'),\r\n  '162': require('../../assets/images/image162.png'),\r\n  '163': require('../../assets/images/image163.png'),\r\n  '164': require('../../assets/images/image164.png'),\r\n  '165': require('../../assets/images/image165.png'),\r\n  '166': require('../../assets/images/image166.png'),\r\n  '167': require('../../assets/images/image167.png'),\r\n  '168': require('../../assets/images/image168.png'),\r\n  '169': require('../../assets/images/image169.png'),\r\n  '170': require('../../assets/images/image170.png'),\r\n  '171': require('../../assets/images/image171.png'),\r\n  '172': require('../../assets/images/image172.png'),\r\n  '173': require('../../assets/images/image173.png'),\r\n  '174': require('../../assets/images/image174.png'),\r\n  '175': require('../../assets/images/image175.png'),\r\n  '176': require('../../assets/images/image176.png'),\r\n  '177': require('../../assets/images/image177.png'),\r\n  '178': require('../../assets/images/image178.png'),\r\n  '179': require('../../assets/images/image179.png'),\r\n  '180': require('../../assets/images/image180.png'),\r\n  '181': require('../../assets/images/image181.png'),\r\n  '182': require('../../assets/images/image182.png'),\r\n  '183': require('../../assets/images/image183.png'),\r\n  '184': require('../../assets/images/image184.png'),\r\n  '185': require('../../assets/images/image185.png'),\r\n  '186': require('../../assets/images/image186.png'),\r\n  '187': require('../../assets/images/image187.png'),\r\n  '188': require('../../assets/images/image188.png'),\r\n  '189': require('../../assets/images/image189.png'),\r\n  '190': require('../../assets/images/image190.png'),\r\n  '191': require('../../assets/images/image191.png'),\r\n  '192': require('../../assets/images/image192.png'),\r\n  '193': require('../../assets/images/image193.png'),\r\n  '194': require('../../assets/images/image194.png'),\r\n  '195': require('../../assets/images/image195.png'),\r\n  '196': require('../../assets/images/image196.png'),\r\n  '197': require('../../assets/images/image197.png'),\r\n  '198': require('../../assets/images/image198.png'),\r\n  '199': require('../../assets/images/image199.png'),\r\n  '200': require('../../assets/images/image200.png'),\r\n  '201': require('../../assets/images/image201.png'),\r\n  '202': require('../../assets/images/image202.png'),\r\n  '203': require('../../assets/images/image203.png'),\r\n  '204': require('../../assets/images/image204.png'),\r\n  '205': require('../../assets/images/image205.png'),\r\n  '206': require('../../assets/images/image206.png'),\r\n};\r\n\r\n// Add static mapping for assets/image2/*.jpg\r\nconst image2Assets = {\r\n  'tramwaycrossing.jpg': require('../../assets/image2/tramwaycrossing.jpg'),\r\n  'tramway.jpg': require('../../assets/image2/tramway.jpg'),\r\n  'driveonleft.jpg': require('../../assets/image2/driveonleft.jpg'),\r\n  'lowflyingaircraft.jpg': require('../../assets/image2/lowflyingaircraft.jpg'),\r\n  'fallingrocks.jpg': require('../../assets/image2/fallingrocks.jpg'),\r\n  'tunnel.jpg': require('../../assets/image2/tunnel.jpg'),\r\n  'pedestriancrossing.jpg': require('../../assets/image2/pedestriancrossing.jpg'),\r\n  'crosswinds.jpg': require('../../assets/image2/crosswinds.jpg'),\r\n  'deer.jpg': require('../../assets/image2/deer.jpg'),\r\n  'sheep.jpg': require('../../assets/image2/sheep.jpg'),\r\n  'turnleftahead.jpg': require('../../assets/image2/turnleftahead.jpg'),\r\n  'cattle.jpg': require('../../assets/image2/cattle.jpg'),\r\n  'horses.jpg': require('../../assets/image2/horses.jpg'),\r\n  'bewarechildren.jpg': require('../../assets/image2/bewarechildren.jpg'),\r\n  'schoolcrossingahead.jpg': require('../../assets/image2/schoolcrossingahead.jpg'),\r\n  'schoolahead.jpg': require('../../assets/image2/schoolahead.jpg'),\r\n  'trafficsignal.jpg': require('../../assets/image2/trafficsignal.jpg'),\r\n  'motorwayahead.jpg': require('../../assets/image2/motorwayahead.jpg'),\r\n  'etoll.jpg': require('../../assets/image2/etoll.jpg'),\r\n  'coin-basket.jpg': require('../../assets/image2/coin-basket.jpg'),\r\n  'unprotectedwater.jpg': require('../../assets/image2/unprotectedwater.jpg'),\r\n  'crossroads.jpg': require('../../assets/image2/crossroads.jpg'),\r\n  'seriesofbumps.jpg': require('../../assets/image2/seriesofbumps.jpg'),\r\n  'sharpdepression.jpg': require('../../assets/image2/sharpdepression.jpg'),\r\n  'turnright.jpg': require('../../assets/image2/turnright.jpg'),\r\n  'sharprise.jpg': require('../../assets/image2/sharprise.jpg'),\r\n  'automaticlevelcrossing.jpg': require('../../assets/image2/automaticlevelcrossing.jpg'),\r\n  'stopredlights.jpg': require('../../assets/image2/stopredlights.jpg'),\r\n  'railway.jpg': require('../../assets/image2/railway.jpg'),\r\n  'guardedlevelcrossing.jpg': require('../../assets/image2/guardedlevelcrossing.jpg'),\r\n  'faultbrakingsystem.jpg': require('../../assets/image2/faultbrakingsystem.jpg'),\r\n  'unguardedlevelcrossing.jpg': require('../../assets/image2/unguardedlevelcrossing.jpg'),\r\n  'overheadcables.jpg': require('../../assets/image2/overheadcables.jpg'),\r\n  'clearing.jpg': require('../../assets/image2/clearing.jpg'),\r\n  'sharpascent.jpg': require('../../assets/image2/sharpascent.jpg'),\r\n  'sharpdescent.jpg': require('../../assets/image2/sharpdescent.jpg'),\r\n  'turnleft.jpg': require('../../assets/image2/turnleft.jpg'),\r\n  'carriagewayends.jpg': require('../../assets/image2/carriagewayends.jpg'),\r\n  'focuscrosswinds.jpg': require('../../assets/image2/focuscrosswinds.jpg'),\r\n  'roaddivides.jpg': require('../../assets/image2/roaddivides.jpg'),\r\n  'roadnarrow.jpg': require('../../assets/image2/roadnarrow.jpg'),\r\n  'roadnarrowleft.jpg': require('../../assets/image2/roadnarrowleft.jpg'),\r\n  'sharpchangeright.jpg': require('../../assets/image2/sharpchangeright.jpg'),\r\n  'seriesdangerousbends.jpg': require('../../assets/image2/seriesdangerousbends.jpg'),\r\n  'seriesdangerouscorners.jpg': require('../../assets/image2/seriesdangerouscorners.jpg'),\r\n  'dangerousbend.jpg': require('../../assets/image2/dangerousbend.jpg'),\r\n  'dangerouscorner.jpg': require('../../assets/image2/dangerouscorner.jpg'),\r\n  'straightahead.jpg': require('../../assets/image2/straightahead.jpg'),\r\n  'miniroundaboutahead.jpg': require('../../assets/image2/miniroundaboutahead.jpg'),\r\n  'revcounter.jpg': require('../../assets/image2/revcounter.jpg'),\r\n  'roundaboutahead.jpg': require('../../assets/image2/roundaboutahead.jpg'),\r\n  'mergingdiverging.jpg': require('../../assets/image2/mergingdiverging.jpg'),\r\n  'directionalindicator.jpg': require('../../assets/image2/directionalindicator.jpg'),\r\n  'lowoillevel.jpg': require('../../assets/image2/lowoillevel.jpg'),\r\n  'highbeam.jpg': require('../../assets/image2/highbeam.jpg'),\r\n  'batterynotcharging.jpg': require('../../assets/image2/batterynotcharging.jpg'),\r\n  'trafficmergeleft.jpg': require('../../assets/image2/trafficmergeleft.jpg'),\r\n  'tdualcarriageway.jpg': require('../../assets/image2/tdualcarriageway.jpg'),\r\n  'dualcarriagewayahead.jpg': require('../../assets/image2/dualcarriagewayahead.jpg'),\r\n  'tmajor.jpg': require('../../assets/image2/tmajor.jpg'),\r\n  'majorahead.jpg': require('../../assets/image2/majorahead.jpg'),\r\n  'yequal.jpg': require('../../assets/image2/yequal.jpg'),\r\n  'tjunction.jpg': require('../../assets/image2/tjunction.jpg'),\r\n  'staggeredequal.jpg': require('../../assets/image2/staggeredequal.jpg'),\r\n  'mainbearleft.jpg': require('../../assets/image2/mainbearleft.jpg'),\r\n  'junctionlesser.jpg': require('../../assets/image2/junctionlesser.jpg'),\r\n  'tramlaneright.jpg': require('../../assets/image2/tramlaneright.jpg'),\r\n  'tramlaneleft.jpg': require('../../assets/image2/tramlaneleft.jpg'),\r\n  'contraflowbuslane.jpg': require('../../assets/image2/contraflowbuslane.jpg'),\r\n  'buslaneright.jpg': require('../../assets/image2/buslaneright.jpg'),\r\n  'buslaneaheadright.jpg': require('../../assets/image2/buslaneaheadright.jpg'),\r\n  'buslaneleft.jpg': require('../../assets/image2/buslaneleft.jpg'),\r\n  'buslane.jpg': require('../../assets/image2/buslane.jpg'),\r\n  'yield.jpg': require('../../assets/image2/yield.jpg'),\r\n  'buslanetime.jpg': require('../../assets/image2/buslanetime.jpg'),\r\n  'maxheight.jpg': require('../../assets/image2/maxheight.jpg'),\r\n  '5axel.jpg': require('../../assets/image2/5axel.jpg'),\r\n  'max10tonnes.jpg': require('../../assets/image2/max10tonnes.jpg'),\r\n  '3tonnemax.jpg': require('../../assets/image2/3tonnemax.jpg'),\r\n  'pedestrianisedstreet.jpg': require('../../assets/image2/pedestrianisedstreet.jpg'),\r\n  'wetskiddy.jpg': require('../../assets/image2/wetskiddy.jpg'),\r\n  'stopcrossing.jpg': require('../../assets/image2/stopcrossing.jpg'),\r\n  'sharedtrack.jpg': require('../../assets/image2/sharedtrack.jpg'),\r\n  'cycletrack.jpg': require('../../assets/image2/cycletrack.jpg'),\r\n  'carjunction3.jpg': require('../../assets/image2/carjunction3.jpg'),\r\n  'carjunction2.jpg': require('../../assets/image2/carjunction2.jpg'),\r\n  'carsituation54.jpg': require('../../assets/image2/carsituation54.jpg'),\r\n  'taxirank.jpg': require('../../assets/image2/taxirank.jpg'),\r\n  'carsituation53.jpg': require('../../assets/image2/carsituation53.jpg'),\r\n  'carsituation52.jpg': require('../../assets/image2/carsituation52.jpg'),\r\n  'carsituation51.jpg': require('../../assets/image2/carsituation51.jpg'),\r\n  'carsituation50.jpg': require('../../assets/image2/carsituation50.jpg'),\r\n  'carsituation49.jpg': require('../../assets/image2/carsituation49.jpg'),\r\n  'carsituation48.jpg': require('../../assets/image2/carsituation48.jpg'),\r\n  'carsituation47.jpg': require('../../assets/image2/carsituation47.jpg'),\r\n  'carsituation46.jpg': require('../../assets/image2/carsituation46.jpg'),\r\n  'carsituation45.jpg': require('../../assets/image2/carsituation45.jpg'),\r\n  'carsituation44.jpg': require('../../assets/image2/carsituation44.jpg'),\r\n  'diskparking.jpg': require('../../assets/image2/diskparking.jpg'),\r\n  'carsituation43.jpg': require('../../assets/image2/carsituation43.jpg'),\r\n};\r\n\r\n/**\r\n * 获取问题的翻译版本\r\n * @param {Object} question - 题目对象\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Object} 处理后的题目对象\r\n */\r\nconst getQuestionTranslation = (question, language = 'zh') => {\r\n  try {\r\n    if (!question) {\r\n      throw new Error('题目对象为空');\r\n    }\r\n    \r\n    // 如果问题有翻译字段且包含请求的语言\r\n    if (question.translations && question.translations[language]) {\r\n      const translation = question.translations[language];\r\n      \r\n      // 验证翻译数据的完整性\r\n      if (!translation.question || !translation.answers || !Array.isArray(translation.answers)) {\r\n        throw new Error(`语言 ${language} 的翻译数据不完整`);\r\n      }\r\n      \r\n      // 创建一个新的问题对象，保留原始问题的属性\r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有请求语言的翻译，尝试使用中文版本\r\n    if (language !== 'zh' && question.translations && question.translations.zh) {\r\n      console.warn(`未找到语言 ${language} 的翻译，使用中文版本`);\r\n      const translation = question.translations.zh;\r\n      \r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有任何翻译，抛出错误\r\n    throw new Error(`题目 ${question.id || '未知'} 没有可用的翻译`);\r\n  } catch (error) {\r\n    console.error('获取题目翻译时出错:', error, question);\r\n    // 返回一个带有错误信息的题目对象\r\n    return {\r\n      ...question,\r\n      question: `[翻译错误] ${error.message}`,\r\n      answers: question.answers || [],\r\n      hasError: true\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 加载题目数据集\r\n * @param {number} setNumber - 题目集编号\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 题目数组\r\n */\r\nexport const loadQuestionSet = async (setNumber = 0, language = 'zh') => {\r\n  try {\r\n    // 动态导入JSON数据\r\n    let questionSet;\r\n    \r\n    try {\r\n      if (setNumber === 0) {\r\n        questionSet = await import('../../assets/data/setofquestions0.json');\r\n      } else if (setNumber === 1) {\r\n        questionSet = await import('../../assets/data/setofquestions1.json');\r\n      } else if (setNumber === 2) {\r\n        questionSet = await import('../../assets/data/setofquestions2.json');\r\n      } else {\r\n        // 默认加载第2集的修复版本\r\n        questionSet = await import('../../assets/data/setofquestions3.json');\r\n      }\r\n      console.log(`加载题库 ${setNumber}`);\r\n    } catch (error) {\r\n      console.warn(`加载题集 ${setNumber} 失败，使用默认题集2: ${error.message}`);\r\n    }\r\n    \r\n    // 确保我们有可用的数据\r\n    if (!questionSet) {\r\n      throw new Error(`题库 ${setNumber} 数据为空`);\r\n    }\r\n    \r\n    const questions = Array.isArray(questionSet.default) ? questionSet.default : questionSet;\r\n    \r\n    // 处理题目中的图片引用并应用翻译\r\n    return questions.map(question => {\r\n      // 获取翻译后的问题\r\n      const translatedQuestion = getQuestionTranslation(question, language);\r\n      \r\n      // 确保answers字段格式正确\r\n      if (translatedQuestion.answers) {\r\n        translatedQuestion.options = translatedQuestion.answers.map((ans, idx) => ({\r\n          id: String.fromCharCode(65 + idx), // A, B, C...\r\n          text: ans.text,\r\n          isCorrect: ans.correct\r\n        }));\r\n      }\r\n      \r\n      // 如果有picture属性，提取信号ID\r\n      if (translatedQuestion.picture) {\r\n        const signalMatch = translatedQuestion.picture.match(/signal(\\d+)/i);\r\n        if (signalMatch && signalMatch[1]) {\r\n          const signalId = parseInt(signalMatch[1], 10);\r\n          if (trafficSignalImages[signalId]) {\r\n            translatedQuestion.signalImage = trafficSignalImages[signalId];\r\n          }\r\n        } else if (translatedQuestion.picture.includes('images/image')) {\r\n          // 处理普通图片路径，如 \"images/image47.png\"\r\n          try {\r\n            const imageMatch = translatedQuestion.picture.match(/images\\/image(\\d+)\\.png/i);\r\n            if (imageMatch && imageMatch[1]) {\r\n              const imageNumber = imageMatch[1];\r\n              // 使用预加载的图片资源\r\n              if (imageAssets[imageNumber]) {\r\n                translatedQuestion.signalImage = imageAssets[imageNumber];\r\n                console.log(`加载图片: image${imageNumber}.png`);\r\n              } else {\r\n                console.warn(`未预加载图片: image${imageNumber}.png`);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn(`无法加载图片: ${translatedQuestion.picture}`, error);\r\n          }\r\n        } else if (translatedQuestion.picture.includes('image2/')) {\r\n          // 处理 image2 目录下的 jpg 资源，如 \"image2/motorwayend.jpg\"\r\n          try {\r\n            const fileName = translatedQuestion.picture.split('/').pop();\r\n            if (fileName && image2Assets[fileName]) {\r\n              translatedQuestion.signalImage = image2Assets[fileName];\r\n              console.log(`加载图片: image2/${fileName}`);\r\n            } else {\r\n              console.warn(`未预加载图片: image2/${fileName}`);\r\n            }\r\n          } catch (error) {\r\n            console.warn(`无法加载图片: ${translatedQuestion.picture}`, error);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 确保所有必要的字段都存在\r\n      return {\r\n        ...translatedQuestion,\r\n        id: translatedQuestion.id || `temp_${setNumber}_${Math.random().toString(36).substr(2, 9)}`,\r\n        category: translatedQuestion.category || 'general',\r\n        answers: translatedQuestion.answers || [],\r\n        options: translatedQuestion.options || []\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error(`Failed to load question set ${setNumber}:`, error);\r\n    throw error; // 抛出错误以便上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 加载所有题目数据集\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 合并后的题目数组\r\n */\r\nexport const loadAllQuestionSets = async (language = 'zh') => {\r\n  try {\r\n    const sets = [];\r\n    const errors = [];\r\n    \r\n    // 只尝试加载已知存在的题目集\r\n    const availableSets = [0, 1, 2, 3];\r\n    \r\n    for (const setNumber of availableSets) {\r\n      try {\r\n        console.log(`尝试加载题集 ${setNumber}...`);\r\n        const set = await loadQuestionSet(setNumber, language);\r\n        \r\n        if (set && Array.isArray(set)) {\r\n          console.log(`成功加载题集 ${setNumber}, 共 ${set.length} 题`);\r\n          sets.push(...set);\r\n        } else {\r\n          console.warn(`题集 ${setNumber} 加载成功但格式无效`);\r\n          errors.push(`题目集 ${setNumber} 格式无效`);\r\n        }\r\n      } catch (e) {\r\n        console.error(`题目集 ${setNumber} 加载失败:`, e.message);\r\n        errors.push(`题目集 ${setNumber} 加载失败: ${e.message}`);\r\n        // 继续加载其他题集，不中断流程\r\n      }\r\n    }\r\n    \r\n    // 如果至少加载了一个题集\r\n    if (sets.length > 0) {\r\n      console.log(`总共加载了 ${sets.length} 道题目`);\r\n      \r\n      if (errors.length > 0) {\r\n        // 记录错误但不阻止应用运行\r\n        console.warn('加载过程中出现以下错误:', errors.join('; '));\r\n      }\r\n      \r\n      return sets;\r\n    }\r\n    \r\n    // 如果一个题集都没加载成功，尝试返回一个最小题集\r\n    console.error('没有成功加载任何题集，使用备用题集');\r\n    \r\n    try {\r\n      const backupQuestions = await import('../../assets/data/setofquestions3.json');\r\n      const questions = Array.isArray(backupQuestions.default) ? backupQuestions.default : backupQuestions;\r\n      return questions;\r\n    } catch (backupError) {\r\n      // 如果连备用选项都失败了，抛出累积的错误\r\n      throw new Error(`无法加载任何题库: ${errors.join('; ')}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('加载所有题目集时出错:', error);\r\n    throw error; // 让上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 获取交通信号图标\r\n * @param {number} signalId - 信号ID\r\n * @returns {object} 图标资源\r\n */\r\nexport const getTrafficSignalImage = (signalId) => {\r\n  return trafficSignalImages[signalId] || null;\r\n};\r\n\r\n/**\r\n * 根据类别获取题目\r\n * @param {string} category - 题目类别\r\n * @param {string} language - 语言代码\r\n * @returns {Promise<Array>} 过滤后的题目数组\r\n */\r\nexport const getQuestionsByCategory = async (category, language = 'zh') => {\r\n  const allQuestions = await loadAllQuestionSets(language);\r\n  \r\n  if (!category || category === 'all') {\r\n    return allQuestions;\r\n  }\r\n  \r\n  return allQuestions.filter(q => q.category === category);\r\n};\r\n\r\n/**\r\n * 获取所有可用的题目分类\r\n * @returns {Promise<Array>} 分类数组\r\n */\r\nexport const getAllCategories = async () => {\r\n  try {\r\n    const questions = await loadAllQuestionSets();\r\n    \r\n    if (!Array.isArray(questions) || questions.length === 0) {\r\n      console.warn('获取分类时发现题目数据为空或无效');\r\n      return ['general']; // 返回默认分类\r\n    }\r\n    \r\n    // 使用Set去重\r\n    const categories = Array.from(new Set(\r\n      questions\r\n        .filter(q => q && q.category) // 过滤掉没有分类的题目\r\n        .map(q => q.category)\r\n    ));\r\n    \r\n    // 如果没有找到任何分类，返回一个默认值\r\n    if (categories.length === 0) {\r\n      console.warn('未找到任何分类，使用默认分类');\r\n      return ['general'];\r\n    }\r\n    \r\n    return categories;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    return ['general']; // 出错时返回默认分类，避免应用崩溃\r\n  }\r\n};\r\n\r\n/**\r\n * 获取中文分类名称\r\n * @param {string} category - 原始类别名\r\n * @returns {string} 中文分类名\r\n */\r\nexport const getChineseCategoryName = (category) => {\r\n  const categoryMap = {\r\n    'traffic_signs': '交通标志',\r\n    'rules': '交通规则',\r\n    'safety': '安全常识',\r\n    'vehicle': '车辆知识',\r\n    'emergency': '应急处理',\r\n    'all': '所有题目'\r\n  };\r\n  \r\n  return categoryMap[category] || category;\r\n};\r\n\r\nexport default {\r\n  loadQuestionSet,\r\n  loadAllQuestionSets,\r\n  getTrafficSignalImage,\r\n  getQuestionsByCategory,\r\n  getAllCategories,\r\n  getChineseCategoryName,\r\n  getQuestionTranslation\r\n};","/**\r\n * 样式工具函数\r\n * \r\n * 这个文件提供了帮助处理样式相关问题的工具函数\r\n */\r\n\r\n\r\n/**\r\n * 创建跨平台兼容的阴影样式\r\n * @param {Object} options - 阴影选项\r\n * @param {string} options.color - 阴影颜色\r\n * @param {Object} options.offset - 阴影偏移 { width, height }\r\n * @param {number} options.opacity - 阴影不透明度\r\n * @param {number} options.radius - 阴影半径\r\n * @param {number} options.elevation - Android 高度 (可选)\r\n * @returns {Object} 跨平台兼容的样式对象\r\n */\r\nexport const createShadow = ({\r\n  color = '#000',\r\n  offset = { width: 0, height: 2 },\r\n  opacity = 0.1,\r\n  radius = 3,\r\n  elevation = 3\r\n} = {}) => {\r\n  // 使用boxShadow，不再区分平台\r\n  const { width, height } = offset;\r\n  return {\r\n    // 对于所有平台都使用boxShadow\r\n    boxShadow: `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`,\r\n    // 对于Android仍保留elevation\r\n    elevation: elevation\r\n  };\r\n};\r\n\r\n/**\r\n * 根据平台返回正确的图像props\r\n * 解决了style.resizeMode和style.tintColor废弃的警告\r\n * \r\n * @param {Object} imageStyle 原始图像样式对象\r\n * @returns {Object} 处理后的样式和props对象\r\n */\r\nexport const getImageProps = (imageStyle = {}) => {\r\n  const { resizeMode, tintColor, ...otherStyles } = imageStyle;\r\n  \r\n  // 创建一个新的props对象\r\n  const imageProps = {\r\n    style: otherStyles,\r\n  };\r\n  \r\n  // 如果存在resizeMode，将其提升为组件的props\r\n  if (resizeMode) {\r\n    imageProps.resizeMode = resizeMode;\r\n  }\r\n  \r\n  // 如果存在tintColor，将其提升为组件的props\r\n  if (tintColor) {\r\n    imageProps.tintColor = tintColor;\r\n  }\r\n  \r\n  return imageProps;\r\n};\r\n\r\n/**\r\n * 修复带shadow属性的样式对象，将其转换为boxShadow\r\n * @param {Object} styles - 原始样式对象\r\n * @returns {Object} - 修复后的样式对象\r\n */\r\nexport const fixDeprecatedShadow = (styles = {}) => {\r\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius, ...otherStyles } = styles;\r\n  \r\n  // 如果没有shadow相关属性，直接返回原样式\r\n  if (!shadowColor && !shadowOffset && !shadowOpacity && !shadowRadius) {\r\n    return styles;\r\n  }\r\n  \r\n  // 提取shadow属性值，设置默认值\r\n  const color = shadowColor || '#000';\r\n  const offset = shadowOffset || { width: 0, height: 2 };\r\n  const opacity = shadowOpacity || 0.1;\r\n  const radius = shadowRadius || 3;\r\n  const { width, height } = offset;\r\n  \r\n  // 创建boxShadow\r\n  const boxShadow = `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`;\r\n  \r\n  // 返回修复后的样式\r\n  return {\r\n    ...otherStyles,\r\n    boxShadow\r\n  };\r\n};\r\n\r\nexport default {\r\n  getImageProps,\r\n  createShadow,\r\n  fixDeprecatedShadow\r\n};","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, SafeAreaView, StatusBar, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst BrowseScreen = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n  const [error, setError] = useState('');\r\n\r\n  // 提取fetchData为组件级函数\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // 加载所有题目集\r\n      let allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\r\n      \r\n      // 数据验证，确保即使返回无效数据也不崩溃\r\n      if (!Array.isArray(allQuestions)) {\r\n        console.error('题目数据无效，返回空数组');\r\n        allQuestions = [];\r\n      }\r\n      \r\n      // 确保所有题目都有一个有效的ID\r\n      allQuestions = allQuestions\r\n        .filter(q => q && q.id) // 过滤掉没有id的题目\r\n        .map(q => ({\r\n          ...q,\r\n          id: q.id.toString() // 确保ID是字符串类型\r\n        }));\r\n      \r\n      // 记录加载信息\r\n      console.log(`成功加载 ${allQuestions.length} 道题目`);\r\n      setQuestions(allQuestions);\r\n      \r\n      try {\r\n        // 获取所有类别\r\n        const allCategories = await assetDataService.getAllCategories();\r\n        \r\n        // 转换类别格式\r\n        const formattedCategories = [\r\n          { id: 'all', title: '所有题目' },\r\n          ...allCategories.map(cat => ({\r\n            id: cat,\r\n            title: assetDataService.getChineseCategoryName(cat)\r\n          }))\r\n        ];\r\n        \r\n        setCategories(formattedCategories);\r\n      } catch (categoryError) {\r\n        console.error('加载类别失败:', categoryError);\r\n        // 添加默认类别避免崩溃\r\n        setCategories([{ id: 'all', title: '所有题目' }]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('加载题目时出错:', error);\r\n      // 显示用户友好的错误消息\r\n      setError('加载题库失败，请尝试重新启动应用');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    fetchData();\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [t]);\r\n\r\n  // 过滤题目\r\n  const getFilteredQuestions = () => {\r\n    let filtered = selectedCategory === 'all'\r\n      ? questions\r\n      : questions.filter(q => q.category === selectedCategory);\r\n    \r\n    // 应用搜索过滤\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      filtered = filtered.filter(q => \r\n        q.question.toLowerCase().includes(query) || \r\n        (q.id && q.id.toString().includes(query))\r\n      );\r\n    }\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    if (!question || !question.id) {\r\n      console.error('Cannot navigate: Question or question ID is missing', question);\r\n      Alert.alert('错误', '无法查看题目详情，题目ID不存在');\r\n      return;\r\n    }\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderCategoryItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.categoryButton,\r\n        selectedCategory === item.id && styles.categoryButtonActive\r\n      ]}\r\n      onPress={() => setSelectedCategory(item.id)}\r\n    >\r\n      <Text \r\n        style={[\r\n          styles.categoryButtonText,\r\n          selectedCategory === item.id && styles.categoryButtonTextActive\r\n        ]}\r\n      >\r\n        {item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderQuestionItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionCard}\r\n        onPress={() => handleQuestionPress(item)}\r\n        activeOpacity={0.7}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Ionicons name=\"bookmark-outline\" size={14} color=\"#4c669f\" style={{marginRight: 4}} />\r\n            <Text style={styles.categoryLabel}>\r\n              {assetDataService.getChineseCategoryName(item.category)}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.idContainer}>\r\n            <Ionicons name=\"id-card-outline\" size={14} color=\"#666\" style={{marginRight: 4}} />\r\n            <Text style={styles.questionId}>#{item.id}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <Text style={styles.questionText}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.cardFooter}>\r\n          <TouchableOpacity style={styles.iconButton}>\r\n            <Ionicons name=\"heart-outline\" size={22} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          <View style={styles.footerRight}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n              <Ionicons name=\"chevron-forward\" size={16} color=\"#4c669f\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题库中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  // 添加错误处理界面\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle\" size={60} color=\"#e74c3c\" />\r\n        <Text style={styles.errorTitle}>加载失败</Text>\r\n        <Text style={styles.errorMessage}>{error}</Text>\r\n        <TouchableOpacity \r\n          style={styles.retryButton}\r\n          onPress={() => {\r\n            setError('');\r\n            setLoading(true);\r\n            fetchData();\r\n          }}\r\n        >\r\n          <Text style={styles.retryButtonText}>重试</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const filteredQuestions = getFilteredQuestions();\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>浏览题库</Text>\r\n        <Text style={styles.subtitle}>共 {questions.length} 道题目</Text>\r\n      </View>\r\n\r\n      <QuestionLanguageSwitcher \r\n        currentLanguage={currentLanguage} \r\n        onChangeLanguage={handleLanguageChange} \r\n      />\r\n\r\n      <View style={styles.searchContainer}>\r\n        <Ionicons name=\"search\" size={20} color=\"#999\" style={styles.searchIcon} />\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"搜索题目关键词...\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n          placeholderTextColor=\"#999\"\r\n        />\r\n        {searchQuery !== '' && (\r\n          <TouchableOpacity onPress={() => setSearchQuery('')} style={styles.clearButton}>\r\n            <Ionicons name=\"close-circle\" size={20} color=\"#999\" />\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.categoriesContainer}>\r\n        <Text style={styles.sectionTitle}>分类筛选</Text>\r\n        <FlatList\r\n          horizontal\r\n          data={categories}\r\n          renderItem={renderCategoryItem}\r\n          keyExtractor={(item) => item.id}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.categoriesList}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.resultsContainer}>\r\n        <Text style={styles.resultCount}>\r\n          {filteredQuestions.length} 道{selectedCategory !== 'all' ? assetDataService.getChineseCategoryName(selectedCategory) : ''}题目\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={filteredQuestions}\r\n        renderItem={renderQuestionItem}\r\n        keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n        contentContainerStyle={styles.questionsList}\r\n        showsVerticalScrollIndicator={true}\r\n        ListEmptyComponent={() => (\r\n          <View style={styles.emptyContainer}>\r\n            <Ionicons name=\"search\" size={responsiveFontSize(50)} color=\"#ddd\" />\r\n            <Text style={styles.emptyText}>\r\n              没有找到符合条件的题目\r\n            </Text>\r\n            <TouchableOpacity \r\n              style={styles.resetButton} \r\n              onPress={() => {\r\n                setSelectedCategory('all');\r\n                setSearchQuery('');\r\n              }}\r\n            >\r\n              <Text style={styles.resetButtonText}>重置筛选条件</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginTop: responsiveHeight(0.5),\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(1),\r\n    borderRadius: 10,\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  searchIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: responsiveHeight(5),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n  },\r\n  clearButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(4),\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoriesContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingTop: responsiveHeight(1),\r\n    paddingBottom: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 3,\r\n    elevation: 2,\r\n  },\r\n  categoriesList: {\r\n    paddingHorizontal: responsiveWidth(3),\r\n  },\r\n  categoryButton: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1),\r\n    marginHorizontal: responsiveWidth(1),\r\n    borderRadius: 20,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  categoryButtonActive: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  categoryButtonText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  categoryButtonTextActive: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsContainer: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  resultCount: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  questionsList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  questionCard: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryLabel: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionId: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginVertical: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(1),\r\n    paddingTop: responsiveHeight(1),\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  iconButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  footerRight: {\r\n    flexDirection: 'row',\r\n  },\r\n  viewButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f0f5ff',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 15,\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n    marginRight: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  resetButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  resetButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorTitle: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  errorMessage: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  retryButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  idContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default BrowseScreen; ","// 驾照考试模拟数据\r\nexport const questions = [\r\n  {\r\n    id: '1',\r\n    category: '交通法规',\r\n    question: '在道路上驾驶机动车怎样选择行车道?',\r\n    options: [\r\n      { id: 'A', text: '根据交通标志、标线选择行车道' },\r\n      { id: 'B', text: '根据车速选择行车道' },\r\n      { id: 'C', text: '按照车型选择行车道' },\r\n      { id: 'D', text: '按照自己习惯选择行车道' }\r\n    ],\r\n    correctAnswer: 'A',\r\n    explanation: '在道路上驾驶机动车应根据交通标志、标线选择行车道，这样才能保证行车安全和道路通畅。',\r\n    imageUrl: null,\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '2',\r\n    category: '交通法规',\r\n    question: '驾驶机动车在进出隧道时应注意什么?',\r\n    options: [\r\n      { id: 'A', text: '开启前照灯' },\r\n      { id: 'B', text: '关闭前照灯' },\r\n      { id: 'C', text: '保持安全车距' },\r\n      { id: 'D', text: '以上都是' }\r\n    ],\r\n    correctAnswer: 'D',\r\n    explanation: '驾驶机动车在进出隧道时应开启前照灯，保持安全车距，注意行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '3',\r\n    category: '安全常识',\r\n    question: '行车中遇到对向来车占道行驶时，应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '紧靠道路中心行驶' },\r\n      { id: 'B', text: '向右占道行驶' },\r\n      { id: 'C', text: '靠右减速避让' },\r\n      { id: 'D', text: '加速从左侧通过' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '当遇到对向来车占道行驶时，应当靠右减速避让，确保行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '4',\r\n    category: '交通法规',\r\n    question: '这个标志是何含义？',\r\n    options: [\r\n      { id: 'A', text: '禁止通行' },\r\n      { id: 'B', text: '减速让行' },\r\n      { id: 'C', text: '停车让行' },\r\n      { id: 'D', text: '注意危险' }\r\n    ],\r\n    correctAnswer: 'B',\r\n    explanation: '此标志为减速让行标志，提醒驾驶员减速慢行，注意让行。',\r\n    imageUrl: 'https://example.com/signs/yield.jpg',\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '安全常识',\r\n    question: '驾驶机动车遇到沙尘暴天气时应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '加速驶离沙尘区' },\r\n      { id: 'B', text: '开启前照灯行驶' },\r\n      { id: 'C', text: '开启危险报警闪光灯，就近选择安全地点停车' },\r\n      { id: 'D', text: '以正常速度行驶' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '遇到沙尘暴天气时，能见度低，应开启危险报警闪光灯，就近选择安全地点停车，等天气好转后再行驶。',\r\n    imageUrl: null,\r\n    difficulty: '困难'\r\n  }\r\n]; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport { Platform } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n// 模拟数据\r\nimport { questions } from '../data/mockData';\r\n\r\n// 判断是否是Web平台\r\nconst isWeb = Platform.OS === 'web';\r\n\r\n// 获取数据库连接\r\nconst getDatabase = () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage模拟数据库\r\n    return null;\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    return SQLite.openDatabase('driving_license.db');\r\n  }\r\n};\r\n\r\n// 初始化数据库\r\nexport const initDatabase = async () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage存储数据\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      if (!storedQuestions) {\r\n        // 如果没有存储过题目数据，则存储模拟数据\r\n        await AsyncStorage.setItem('questions', JSON.stringify(questions));\r\n      }\r\n      \r\n      // 初始化收藏和错题记录\r\n      const favorites = await AsyncStorage.getItem('favorites');\r\n      if (!favorites) {\r\n        await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      }\r\n      \r\n      const mistakes = await AsyncStorage.getItem('mistakes');\r\n      if (!mistakes) {\r\n        await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize web database:', error);\r\n    }\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    const db = getDatabase();\r\n    \r\n    // 创建题目表\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS questions (\r\n          id TEXT PRIMARY KEY,\r\n          category TEXT,\r\n          question TEXT,\r\n          options TEXT,\r\n          correctAnswer TEXT,\r\n          explanation TEXT,\r\n          imageUrl TEXT,\r\n          difficulty TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建收藏表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS favorites (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT UNIQUE,\r\n          timestamp INTEGER\r\n        );`\r\n      );\r\n      \r\n      // 创建错题表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS mistakes (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT,\r\n          userAnswer TEXT,\r\n          timestamp INTEGER,\r\n          UNIQUE(questionId)\r\n        );`\r\n      );\r\n      \r\n      // 创建考试记录表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS exam_results (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          score REAL,\r\n          timeSpent INTEGER,\r\n          totalQuestions INTEGER,\r\n          correctCount INTEGER,\r\n          incorrectCount INTEGER,\r\n          answeredQuestions INTEGER,\r\n          unansweredQuestions INTEGER,\r\n          isPassed INTEGER,\r\n          details TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建学习进度表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS study_progress (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          questionsAnswered INTEGER,\r\n          correctAnswers INTEGER,\r\n          timeSpent INTEGER\r\n        );`\r\n      );\r\n    }, error => {\r\n      console.error('Error creating tables:', error);\r\n    }, () => {\r\n      // 检查是否需要插入初始数据\r\n      checkAndInsertInitialData(db);\r\n    });\r\n  }\r\n};\r\n\r\n// 检查并插入初始数据\r\nconst checkAndInsertInitialData = (db) => {\r\n  db.transaction(tx => {\r\n    tx.executeSql(\r\n      'SELECT COUNT(*) as count FROM questions;',\r\n      [],\r\n      (_, { rows }) => {\r\n        const count = rows._array[0].count;\r\n        if (count === 0) {\r\n          // 如果没有数据，插入模拟数据\r\n          insertMockData(db);\r\n        }\r\n      }\r\n    );\r\n  }, error => {\r\n    console.error('Error checking initial data:', error);\r\n  });\r\n};\r\n\r\n// 插入模拟数据\r\nconst insertMockData = (db) => {\r\n  db.transaction(tx => {\r\n    questions.forEach(question => {\r\n      tx.executeSql(\r\n        `INSERT INTO questions (id, category, question, options, correctAnswer, explanation, imageUrl, difficulty)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?);`,\r\n        [\r\n          question.id,\r\n          question.category,\r\n          question.question,\r\n          JSON.stringify(question.options),\r\n          question.correctAnswer,\r\n          question.explanation,\r\n          question.imageUrl,\r\n          question.difficulty\r\n        ]\r\n      );\r\n    });\r\n  }, error => {\r\n    console.error('Error inserting mock data:', error);\r\n  }, () => {\r\n    console.log('Mock data inserted successfully');\r\n  });\r\n};\r\n\r\n// 获取所有题目\r\nexport const getAllQuestions = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      return storedQuestions ? JSON.parse(storedQuestions) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions;',\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 按类别获取题目\r\nexport const getQuestionsByCategory = async (category) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return category === 'all' \r\n        ? allQuestions \r\n        : allQuestions.filter(q => q.category === category);\r\n    } catch (error) {\r\n      console.error('Failed to get questions by category from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      const query = category === 'all' \r\n        ? 'SELECT * FROM questions;' \r\n        : 'SELECT * FROM questions WHERE category = ?;';\r\n      const params = category === 'all' ? [] : [category];\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          query,\r\n          params,\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取随机题目\r\nexport const getRandomQuestions = async (count = 25) => {\r\n  const allQuestions = await getAllQuestions();\r\n  \r\n  // 随机打乱题目顺序\r\n  const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\r\n  \r\n  // 返回指定数量的题目\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\n// 获取题目详情\r\nexport const getQuestionById = async (id) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return allQuestions.find(q => q.id === id) || null;\r\n    } catch (error) {\r\n      console.error('Failed to get question by id from web storage:', error);\r\n      return null;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions WHERE id = ?;',\r\n          [id],\r\n          (_, { rows }) => {\r\n            if (rows.length > 0) {\r\n              const question = rows._array[0];\r\n              question.options = JSON.parse(question.options);\r\n              resolve(question);\r\n            } else {\r\n              resolve(null);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取完整题目信息（包括收藏状态和错题记录）\r\nexport const getCompleteQuestion = async (id) => {\r\n  try {\r\n    // 从所有题目中找到匹配的题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    const question = allQuestions.find(q => q.id.toString() === id.toString());\r\n    \r\n    if (!question) {\r\n      return null;\r\n    }\r\n    \r\n    // 获取收藏状态\r\n    const isFavorite = await isQuestionFavorited(id);\r\n    \r\n    // 转换答案格式\r\n    const formattedQuestion = {\r\n      ...question,\r\n      options: question.answers.map((ans, index) => ({\r\n        id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n        text: ans.text,\r\n        isCorrect: ans.correct\r\n      })),\r\n      isFavorite: isFavorite\r\n    };\r\n    \r\n    return formattedQuestion;\r\n  } catch (error) {\r\n    console.error('Error getting complete question:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 添加收藏\r\nexport const addToFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('addToFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  const now = Date.now();\r\n  console.log(`Adding question ID ${questionId} to favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否已收藏\r\n      const existingIndex = favorites.findIndex(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      if (existingIndex >= 0) {\r\n        console.log(`Question ${questionId} already in favorites`);\r\n        return true;\r\n      }\r\n      \r\n      // 添加新收藏\r\n      favorites.push({\r\n        id: `fav_${questionId}_${now}`,\r\n        questionId: questionId.toString(),\r\n        dateAdded: now,\r\n        timestamp: now\r\n      });\r\n      \r\n      console.log(`Saving favorites with new item: ${favorites.length} items total`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(favorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to add to favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 检查是否已收藏\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 如果未收藏，则添加\r\n              tx.executeSql(\r\n                'INSERT INTO favorites (questionId, timestamp) VALUES (?, ?);',\r\n                [questionId.toString(), now],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            } else {\r\n              // 已收藏，直接返回成功\r\n              resolve(true);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 移除收藏\r\nexport const removeFromFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeFromFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Removing question ID ${questionId} from favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 过滤掉指定的收藏\r\n      const updatedFavorites = favorites.filter(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = fId !== qId;\r\n        if (!result) {\r\n          console.log(`Found favorite to remove: ${fId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated favorites: from ${favorites.length} to ${updatedFavorites.length}`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove from favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          () => resolve(true),\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 检查是否已收藏\r\nexport const isQuestionFavorited = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('isQuestionFavorited: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否存在匹配的收藏\r\n      const found = favorites.some(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      console.log(`Question ${questionId} is${found ? '' : ' not'} favorited`);\r\n      return found;\r\n    } catch (error) {\r\n      console.error('Failed to check favorite status in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            resolve(rows.length > 0);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有收藏题目\r\nexport const getFavoriteQuestions = async () => {\r\n  console.log('Getting favorite questions');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 1. 获取收藏列表\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      console.log(`Found ${favorites.length} favorites in storage`);\r\n      \r\n      // 没有收藏，直接返回空数组\r\n      if (favorites.length === 0) {\r\n        return [];\r\n      }\r\n      \r\n      // 2. 加载所有题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets();\r\n      console.log(`Loaded ${allQuestions.length} questions to match with favorites`);\r\n      \r\n      // 3. 匹配收藏的题目\r\n      const favoriteQuestions = [];\r\n      \r\n      for (const favorite of favorites) {\r\n        const questionId = favorite.questionId || favorite.id;\r\n        if (!questionId) continue;\r\n        \r\n        // 查找对应的题目\r\n        const question = allQuestions.find(q => {\r\n          return q.id && q.id.toString() === questionId.toString();\r\n        });\r\n        \r\n        if (question) {\r\n          // 处理日期\r\n          let dateAdded;\r\n          try {\r\n            dateAdded = new Date(favorite.dateAdded || favorite.timestamp || Date.now());\r\n          } catch (e) {\r\n            dateAdded = new Date();\r\n          }\r\n          \r\n          favoriteQuestions.push({\r\n            ...question,\r\n            id: question.id,\r\n            question: question.question,\r\n            category: question.category,\r\n            dateAdded: dateAdded,\r\n            timestamp: favorite.timestamp || Date.now()\r\n          });\r\n        }\r\n      }\r\n      \r\n      console.log(`Returning ${favoriteQuestions.length} matched favorite questions`);\r\n      return favoriteQuestions;\r\n    } catch (error) {\r\n      console.error('Failed to get favorite questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT q.*, f.timestamp as dateAdded \r\n          FROM questions q\r\n          INNER JOIN favorites f ON q.id = f.questionId\r\n          ORDER BY f.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => {\r\n              // 转换日期\r\n              let dateAdded;\r\n              try {\r\n                dateAdded = new Date(item.dateAdded);\r\n              } catch (e) {\r\n                dateAdded = new Date();\r\n              }\r\n              \r\n              return {\r\n                ...item,\r\n                options: item.options ? JSON.parse(item.options) : [],\r\n                dateAdded: dateAdded\r\n              };\r\n            });\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录错题\r\nexport const recordMistake = async (questionId, userAnswer) => {\r\n  const now = new Date().toISOString();\r\n  const mistakeId = `mistake_${questionId}_${Date.now()}`;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      \r\n      // 检查是否已存在该错题\r\n      const existingIndex = mistakes.findIndex(m => m.questionId === questionId);\r\n      \r\n      if (existingIndex >= 0) {\r\n        // 更新已有错题记录\r\n        mistakes[existingIndex].attempts += 1;\r\n        mistakes[existingIndex].lastAttempt = now;\r\n        mistakes[existingIndex].userAnswer = userAnswer;\r\n      } else {\r\n        // 添加新错题记录\r\n        mistakes.push({\r\n          id: mistakeId,\r\n          questionId,\r\n          attempts: 1,\r\n          lastAttempt: now,\r\n          userAnswer,\r\n          timestamp: Date.now()\r\n        });\r\n      }\r\n      \r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(mistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 检查是否已存在该错题\r\n        tx.executeSql(\r\n          'SELECT * FROM mistakes WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 添加新错题记录\r\n              tx.executeSql(\r\n                'INSERT INTO mistakes (id, questionId, attempts, lastAttempt, userAnswer) VALUES (?, ?, ?, ?, ?);',\r\n                [mistakeId, questionId, 1, now, userAnswer],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            } else {\r\n              // 更新已有错题记录\r\n              tx.executeSql(\r\n                'UPDATE mistakes SET attempts = attempts + 1, lastAttempt = ?, userAnswer = ? WHERE questionId = ?;',\r\n                [now, userAnswer, questionId],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 将getMistakes函数定义放在前面，确保正确导出\r\nexport const getMistakes = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const mistakesData = await AsyncStorage.getItem('mistakes');\r\n      return mistakesData ? JSON.parse(mistakesData) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get mistake questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT m.questionId, m.userAnswer, m.timestamp FROM mistakes m \r\n           ORDER BY m.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            resolve(rows._array);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取错题记录 (保留此函数作为兼容)\r\nexport const getMistakeQuestions = getMistakes;\r\n\r\n/**\r\n * 删除单个错题记录\r\n * @param {string} questionId - 题目ID\r\n * @returns {Promise}\r\n */\r\nexport const removeMistake = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeMistake: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Attempting to remove mistake with ID: ${questionId}`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Current mistakes count: ${mistakes.length}`);\r\n      \r\n      // 过滤掉指定的错题\r\n      const updatedMistakes = mistakes.filter(m => {\r\n        // 确保正确比较字符串形式的ID\r\n        const mId = m.questionId?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = mId !== qId;\r\n        if (!result) {\r\n          console.log(`Found mistake to remove: ${mId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated mistakes count: ${updatedMistakes.length}`);\r\n      \r\n      // 更新存储\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(updatedMistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM mistakes WHERE questionId = ?;',\r\n          [questionId.toString()],\r\n          (_, { rowsAffected }) => {\r\n            console.log(`Removed ${rowsAffected} mistake records for ID: ${questionId}`);\r\n            resolve(rowsAffected > 0);\r\n          },\r\n          (_, error) => {\r\n            console.error(`SQL error removing mistake ${questionId}:`, error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有错题记录\r\n * @returns {Promise}\r\n */\r\nexport const clearMistakes = async () => {\r\n  console.log('清空所有错题记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有错题数量以便记录\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Clearing ${mistakes.length} mistakes from web storage`);\r\n      \r\n      // 清空错题\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      \r\n      // 验证是否成功清空\r\n      const afterClear = await AsyncStorage.getItem('mistakes');\r\n      const afterMistakes = afterClear ? JSON.parse(afterClear) : null;\r\n      console.log('After clear:', afterMistakes);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes in web storage:', error);\r\n      throw error; // 抛出错误以便上层处理\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前错题数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM mistakes;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} mistakes from database`);\r\n          \r\n          // 然后清空错题表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM mistakes;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} mistake records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing mistakes:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有数据（用于重置应用）\r\nexport const resetDatabase = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      // 保留题目数据，但清空收藏和错题记录\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to reset web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 清空收藏和错题表\r\n        tx.executeSql('DELETE FROM favorites;');\r\n        tx.executeSql('DELETE FROM mistakes;');\r\n      }, error => {\r\n        console.error('Error resetting database:', error);\r\n        reject(error);\r\n      }, () => {\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录学习进度\r\nexport const recordStudyProgress = async (data) => {\r\n  const { questionsAnswered, correctCount, examType, date = new Date().toISOString() } = data;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有进度记录\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      let progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 添加新记录\r\n      progress.push({\r\n        id: Date.now().toString(),\r\n        date,\r\n        questionsAnswered,\r\n        correctCount,\r\n        examType,\r\n        accuracy: questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0\r\n      });\r\n      \r\n      // 保存更新后的进度记录\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify(progress));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 检查表是否存在，不存在则创建\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `CREATE TABLE IF NOT EXISTS study_progress (\r\n            id TEXT PRIMARY KEY,\r\n            date TEXT,\r\n            questionsAnswered INTEGER,\r\n            correctCount INTEGER,\r\n            examType TEXT,\r\n            accuracy REAL\r\n          );`\r\n        );\r\n      }, error => {\r\n        console.error('Error creating study_progress table:', error);\r\n        reject(error);\r\n      }, () => {\r\n        // 插入新记录\r\n        db.transaction(tx => {\r\n          const id = Date.now().toString();\r\n          const accuracy = questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0;\r\n          \r\n          tx.executeSql(\r\n            `INSERT INTO study_progress (id, date, questionsAnswered, correctCount, examType, accuracy)\r\n            VALUES (?, ?, ?, ?, ?, ?);`,\r\n            [id, date, questionsAnswered, correctCount, examType, accuracy],\r\n            (_, result) => {\r\n              resolve(true);\r\n            },\r\n            (_, error) => {\r\n              console.error('Error inserting study progress:', error);\r\n              reject(error);\r\n              return false;\r\n            }\r\n          );\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取学习进度统计\r\nexport const getStudyProgressStats = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      const progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 获取考试记录\r\n      const examResultsData = await AsyncStorage.getItem('examResults');\r\n      const examResults = examResultsData ? JSON.parse(examResultsData) : [];\r\n      \r\n      // 计算总计数据\r\n      const totalExams = examResults.length;\r\n      const totalQuestions = examResults.reduce((sum, item) => sum + (item.totalQuestions || 0), 0);\r\n      const totalCorrect = examResults.reduce((sum, item) => sum + (item.correctCount || 0), 0);\r\n      const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n      \r\n      return {\r\n        totalExams,\r\n        totalQuestions,\r\n        totalCorrect,\r\n        averageAccuracy,\r\n        progressHistory: progress.slice(-7) // 最近7条记录\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to get study progress from web storage:', error);\r\n      return {\r\n        totalExams: 0,\r\n        totalQuestions: 0,\r\n        totalCorrect: 0,\r\n        averageAccuracy: 0,\r\n        progressHistory: []\r\n      };\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        // 获取考试记录总计\r\n        tx.executeSql(\r\n          `SELECT \r\n            COUNT(*) as totalExams,\r\n            SUM(totalQuestions) as totalQuestions,\r\n            SUM(correctCount) as totalCorrect\r\n          FROM exam_results;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const stats = rows._array[0];\r\n            const totalExams = stats.totalExams || 0;\r\n            const totalQuestions = stats.totalQuestions || 0;\r\n            const totalCorrect = stats.totalCorrect || 0;\r\n            const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n            \r\n            // 获取最近的7条学习记录\r\n            tx.executeSql(\r\n              `SELECT * FROM study_progress ORDER BY date DESC LIMIT 7;`,\r\n              [],\r\n              (_, { rows }) => {\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: rows._array\r\n                });\r\n              },\r\n              (_, error) => {\r\n                console.error('Error getting study progress history:', error);\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: []\r\n                });\r\n              }\r\n            );\r\n          },\r\n          (_, error) => {\r\n            console.error('Error getting study stats:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清除学习进度记录\r\nexport const clearStudyProgress = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM study_progress;',\r\n          [],\r\n          (_, result) => {\r\n            resolve(true);\r\n          },\r\n          (_, error) => {\r\n            console.error('Error clearing study progress:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 保存考试结果\r\nexport const saveExamResult = (examResult) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // 获取现有的考试结果\r\n        let examResults = [];\r\n        try {\r\n          const storedResults = await AsyncStorage.getItem('examResults');\r\n          if (storedResults) {\r\n            examResults = JSON.parse(storedResults);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing exam results:', error);\r\n        }\r\n        \r\n        // 添加新的考试结果\r\n        const newExamResult = {\r\n          ...examResult,\r\n          id: Date.now() // 生成唯一ID\r\n        };\r\n        examResults.push(newExamResult);\r\n        \r\n        // 保存更新后的结果\r\n        await AsyncStorage.setItem('examResults', JSON.stringify(examResults));\r\n        \r\n        // 更新学习进度\r\n        await updateStudyProgress(\r\n          examResult.answeredQuestions,\r\n          examResult.correctCount,\r\n          examResult.timeSpent\r\n        );\r\n        \r\n        resolve({ insertId: Date.now() });\r\n      } catch (error) {\r\n        console.error('Failed to save exam result to web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const {\r\n        date,\r\n        score,\r\n        timeSpent,\r\n        totalQuestions,\r\n        correctCount,\r\n        incorrectCount,\r\n        answeredQuestions,\r\n        unansweredQuestions,\r\n        isPassed,\r\n        questionResults\r\n      } = examResult;\r\n      \r\n      // 将详细题目结果序列化为JSON字符串\r\n      const detailsJson = JSON.stringify(questionResults || {});\r\n      \r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `INSERT INTO exam_results (\r\n            date, score, timeSpent, totalQuestions, correctCount, \r\n            incorrectCount, answeredQuestions, unansweredQuestions, \r\n            isPassed, details\r\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n          [\r\n            date, \r\n            score, \r\n            timeSpent, \r\n            totalQuestions, \r\n            correctCount, \r\n            incorrectCount, \r\n            answeredQuestions, \r\n            unansweredQuestions, \r\n            isPassed ? 1 : 0, \r\n            detailsJson\r\n          ],\r\n          (_, result) => {\r\n            // 同时更新学习进度表\r\n            updateStudyProgress(\r\n              answeredQuestions, \r\n              correctCount,\r\n              timeSpent\r\n            );\r\n            resolve(result);\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有考试记录\r\nexport const getExamResults = () => {\r\n  const db = getDatabase();\r\n  return new Promise((resolve, reject) => {\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        'SELECT * FROM exam_results ORDER BY date DESC',\r\n        [],\r\n        (_, { rows }) => {\r\n          // 将结果转换为JavaScript对象\r\n          const results = rows._array.map(row => ({\r\n            ...row,\r\n            isPassed: row.isPassed === 1,\r\n            details: JSON.parse(row.details || '{}')\r\n          }));\r\n          resolve(results);\r\n        },\r\n        (_, error) => { reject(error); }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\n// 更新学习进度\r\nexport const updateStudyProgress = (questionsAnswered, correctAnswers, timeSpent) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n        \r\n        // 获取现有的学习进度\r\n        let studyProgress = [];\r\n        try {\r\n          const storedProgress = await AsyncStorage.getItem('studyProgress');\r\n          if (storedProgress) {\r\n            studyProgress = JSON.parse(storedProgress);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing study progress:', error);\r\n        }\r\n        \r\n        // 查找当天的记录\r\n        const todayIndex = studyProgress.findIndex(item => item.date === date);\r\n        \r\n        if (todayIndex >= 0) {\r\n          // 更新现有记录\r\n          studyProgress[todayIndex].questionsAnswered += questionsAnswered;\r\n          studyProgress[todayIndex].correctAnswers += correctAnswers;\r\n          studyProgress[todayIndex].timeSpent += timeSpent;\r\n        } else {\r\n          // 添加新记录\r\n          studyProgress.push({\r\n            date,\r\n            questionsAnswered,\r\n            correctAnswers,\r\n            timeSpent,\r\n            id: Date.now()\r\n          });\r\n        }\r\n        \r\n        // 保存更新后的进度\r\n        await AsyncStorage.setItem('studyProgress', JSON.stringify(studyProgress));\r\n        resolve({ rowsAffected: 1 });\r\n      } catch (error) {\r\n        console.error('Failed to update study progress in web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    const db = getDatabase();\r\n    return new Promise((resolve, reject) => {\r\n      const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n      \r\n      // 首先尝试更新当天的记录\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `UPDATE study_progress SET \r\n            questionsAnswered = questionsAnswered + ?,\r\n            correctAnswers = correctAnswers + ?,\r\n            timeSpent = timeSpent + ?\r\n            WHERE date = ?`,\r\n          [questionsAnswered, correctAnswers, timeSpent, date],\r\n          (_, result) => {\r\n            // 如果没有更新任何记录，则插入新记录\r\n            if (result.rowsAffected === 0) {\r\n              tx.executeSql(\r\n                `INSERT INTO study_progress (\r\n                  date, questionsAnswered, correctAnswers, timeSpent\r\n                ) VALUES (?, ?, ?, ?)`,\r\n                [date, questionsAnswered, correctAnswers, timeSpent],\r\n                (_, insertResult) => { resolve(insertResult); },\r\n                (_, error) => { reject(error); }\r\n              );\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有考试记录\r\nexport const clearExamHistory = async () => {\r\n  console.log('清空所有考试历史记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有考试记录以便记录日志\r\n      const storedResults = await AsyncStorage.getItem('examResults');\r\n      const examResults = storedResults ? JSON.parse(storedResults) : [];\r\n      console.log(`Clearing ${examResults.length} exam results from web storage`);\r\n      \r\n      // 清空考试记录\r\n      await AsyncStorage.setItem('examResults', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前记录数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM exam_results;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} exam records from database`);\r\n          \r\n          // 然后清空表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM exam_results;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} exam records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing exam history:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}; ","import { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\nimport assetDataService from '../utils/assetDataService';\nimport { recordMistake, saveExamResult, updateStudyProgress } from '../utils/database';\nimport { getImageProps } from '../utils/styleUtils';\n\n// 获取设备尺寸\nconst { width, height } = Dimensions.get('window');\nconst isSmallDevice = width < 375;\nconst isMediumDevice = width >= 375 && width < 768;\n\n// 响应式尺寸工具函数\nconst responsiveWidth = percentage => (width * percentage) / 100;\nconst responsiveHeight = percentage => (height * percentage) / 100;\nconst responsiveFontSize = size => {\n  const baseFactor = Math.min(width, height) / 375;\n  // 针对小屏幕设备额外缩小字体\n  const scaleFactor = isSmallDevice ? baseFactor * 0.85 : \n                      isMediumDevice ? baseFactor * 0.9 : baseFactor;\n  return Math.round(size * scaleFactor);\n};\n\n// 考试配置\nconst EXAM_CONFIG = {\n  TOTAL_QUESTIONS: 20,           // 考试总题数\n  TIME_LIMIT: 45 * 60,           // 考试时间限制（秒）\n  PASS_SCORE_PERCENTAGE: 70,     // 通过分数线(百分比)\n};\n\nconst ExamScreen = ({ navigation }) => {\n  const { t, i18n } = useTranslation();\n  \n  // 状态管理\n  const [loading, setLoading] = useState(true);\n  const [examStarted, setExamStarted] = useState(false);\n  const [examFinished, setExamFinished] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [remainingTime, setRemainingTime] = useState(EXAM_CONFIG.TIME_LIMIT);\n  const [results, setResults] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\n  const timerRef = useRef(null);\n\n  // 加载题目\n  useEffect(() => {\n    const loadQuestions = async () => {\n      try {\n        setLoading(true);\n        \n        // 加载所有题目数据，使用当前语言\n        const allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\n        \n        // 获取所有类别\n        const allCategories = await assetDataService.getAllCategories();\n        \n        // 构建类别选项\n        const categoryItems = [\n          { id: 'all', title: '所有题目' },\n          ...allCategories.map(cat => ({\n            id: cat,\n            title: assetDataService.getChineseCategoryName(cat)\n          }))\n        ];\n        \n        setCategories(categoryItems);\n        setQuestions(allQuestions);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading exam questions:', error);\n        setLoading(false);\n      }\n    };\n    \n    loadQuestions();\n    \n    // 组件卸载时清除定时器\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [currentLanguage]); // 添加currentLanguage作为依赖，当语言改变时重新加载题目\n\n  // 处理语言切换\n  const handleLanguageChange = async (language) => {\n    // 更新当前语言\n    setCurrentLanguage(language);\n    i18n.changeLanguage(language);\n    \n    // 如果正在考试中，仅重新加载当前题目的翻译\n    if (examStarted && !examFinished) {\n      try {\n        setLoading(true);\n        \n        // 获取当前考试题目的翻译版本\n        const updatedQuestions = questions.map(q => {\n          // 使用assetDataService获取对应语言的题目\n          if (q.translations && q.translations[language]) {\n            const translation = q.translations[language];\n            return {\n              ...q,\n              question: translation.question,\n              answers: translation.answers,\n              options: translation.answers.map((ans, idx) => ({\n                id: String.fromCharCode(65 + idx), // A, B, C...\n                text: ans.text,\n                isCorrect: ans.correct\n              }))\n            };\n          }\n          // 如果没有对应语言的翻译，保持原样\n          return q;\n        });\n        \n        setQuestions(updatedQuestions);\n      } catch (error) {\n        console.error('Error updating question translations:', error);\n        Alert.alert(\n          '语言切换失败',\n          '更新题目翻译时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      // 如果不在考试中，重新加载所有题目\n      try {\n        setLoading(true);\n        const allQuestions = await assetDataService.loadAllQuestionSets(language);\n        setQuestions(allQuestions);\n      } catch (error) {\n        console.error('Error loading questions for new language:', error);\n        Alert.alert(\n          '加载失败',\n          '加载新语言的题目时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  \n  // 开始考试\n  const startExam = async () => {\n    // 根据类别筛选题目\n    let filteredQuestions = questions;\n    if (selectedCategory !== 'all') {\n      filteredQuestions = questions.filter(q => q.category === selectedCategory);\n    }\n    \n    // 随机选择题目\n    const shuffled = [...filteredQuestions].sort(() => 0.5 - Math.random());\n    const selected = shuffled.slice(0, EXAM_CONFIG.TOTAL_QUESTIONS);\n    \n    // 格式化题目数据\n    const formattedQuestions = selected.map((q, index) => ({\n      ...q,\n      examId: index + 1,\n      options: q.answers.map((ans, idx) => ({\n        id: String.fromCharCode(65 + idx), // A, B, C...\n        text: ans.text,\n        isCorrect: ans.correct\n      }))\n    }));\n    \n    // 如果题目不足，提示错误\n    if (formattedQuestions.length < EXAM_CONFIG.TOTAL_QUESTIONS) {\n      Alert.alert(\n        '题目不足',\n        `当前类别下只有 ${formattedQuestions.length} 道题目，无法开始考试。`,\n        [{ text: '确定', style: 'cancel' }]\n      );\n      return;\n    }\n    \n    // 初始化考试\n    setQuestions(formattedQuestions);\n    setCurrentIndex(0);\n      setAnswers({});\n    setRemainingTime(EXAM_CONFIG.TIME_LIMIT);\n    setExamStarted(true);\n      setExamFinished(false);\n    \n    // 开始计时器\n    timerRef.current = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev <= 1) {\n          // 时间到，结束考试\n          clearInterval(timerRef.current);\n          finishExam();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // 选择答案\n  const selectAnswer = (questionId, optionId) => {\n    const newAnswers = {\n      ...answers,\n      [questionId]: optionId\n    };\n    setAnswers(newAnswers);\n  };\n\n  // 完成考试\n  const finishExam = async () => {\n    try {\n      console.log('Finishing exam...');\n      \n      if (!questions || questions.length === 0) {\n        console.error('No questions available');\n        Alert.alert('错误', '没有加载到题目数据，无法提交考试');\n        return;\n      }\n      \n      // 先设置状态，立即开始转换到结果界面\n      setExamFinished(true);\n      setExamStarted(false);\n      \n      // 停止计时\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        console.log('Timer stopped');\n      }\n      \n      // 计算结果\n      const answeredQuestions = Object.keys(answers).length;\n      let correctCount = 0;\n      let mistakesCount = 0;\n      const questionResults = {};\n      \n      // 创建一个批量处理错题的数组\n      const mistakesToRecord = [];\n      \n      questions.forEach((question, index) => {\n        if (!question || !question.id) {\n          console.warn(`Invalid question at index ${index}:`, question);\n          return;\n        }\n        \n        const userAnswer = answers[question.id];\n        let correctAnswer = 'A'; // 默认值\n        \n        // 检查题目选项是否存在\n        if (question.options && Array.isArray(question.options)) {\n          const correctOption = question.options.find(opt => opt.isCorrect);\n          if (correctOption) {\n            correctAnswer = correctOption.id;\n          } else {\n            console.warn(`No correct answer found for question ${question.id}`);\n          }\n        } else {\n          console.warn(`Question ${question.id} has invalid options`);\n        }\n        \n        const isCorrect = userAnswer === correctAnswer;\n        \n        if (isCorrect) {\n          correctCount++;\n        } else if (userAnswer) {\n          // 添加到错题列表，稍后批量处理\n          mistakesCount++;\n          mistakesToRecord.push({\n            id: question.id,\n            userAnswer: userAnswer\n          });\n        }\n        \n        questionResults[question.id] = {\n          userAnswer,\n          correctAnswer,\n          isCorrect\n        };\n      });\n      \n      // 记录错题\n      if (mistakesToRecord.length > 0) {\n        console.log(`Recording ${mistakesToRecord.length} mistakes...`);\n        try {\n          // 使用Promise.all批量处理所有错题\n          const mistakePromises = mistakesToRecord.map(mistake => \n            recordMistake(mistake.id, mistake.userAnswer)\n              .catch(e => console.error(`Failed to record mistake for question ${mistake.id}:`, e))\n          );\n          \n          // 等待所有错题记录完成\n          await Promise.all(mistakePromises);\n          console.log('All mistakes recorded successfully');\n        } catch (e) {\n          console.error('Error batch recording mistakes:', e);\n        }\n      }\n      \n      const score = questions.length > 0 ? (correctCount / questions.length) * 100 : 0;\n      const timeSpent = EXAM_CONFIG.TIME_LIMIT - remainingTime;\n      const isPassed = score >= EXAM_CONFIG.PASS_SCORE_PERCENTAGE;\n      \n      // 保存结果\n      const examResult = {\n        date: new Date().toISOString(),\n      score,\n        timeSpent,\n        totalQuestions: questions.length,\n        correctCount,\n        incorrectCount: mistakesCount,\n        answeredQuestions,\n        unansweredQuestions: questions.length - answeredQuestions,\n        isPassed,\n        questionResults\n      };\n      \n      console.log('Exam result calculated');\n      \n      // 设置结果状态\n      setResults(examResult);\n      \n      // 保存到数据库\n      try {\n        await saveExamResult(examResult);\n        console.log('Exam result saved to database');\n      } catch (error) {\n        console.error('Failed to save exam result:', error);\n        // 即使保存失败也继续显示结果\n      }\n      \n      // 更新学习进度\n      try {\n        await updateStudyProgress(answeredQuestions, correctCount, timeSpent);\n        console.log('Study progress updated');\n      } catch (error) {\n        console.error('Failed to update study progress:', error);\n      }\n        \n      console.log('Exam finished successfully, showing results');\n    } catch (error) {\n      console.error('Error in finishExam:', error);\n      Alert.alert(\n        '错误',\n        '提交考试结果时发生错误，请重试: ' + error.message,\n        [{ text: '确定', style: 'default' }]\n      );\n    }\n  };\n\n  // 返回首页\n  const goToHome = () => {\n    // 导航到首页并传递考试结果参数\n    if (results) {\n      navigation.navigate('Home', {\n        examCompleted: true,\n        examResults: {\n          score: Math.round(results.score),\n          correctCount: results.correctCount,\n          incorrectCount: results.incorrectCount,\n          date: new Date().toISOString()\n        }\n      });\n    } else {\n      navigation.navigate('Home');\n    }\n  };\n\n  // 查看错题\n  const viewMistakes = () => {\n    navigation.navigate('Mistakes');\n  };\n\n  // 重新考试\n  const restartExam = () => {\n    setExamStarted(false);\n    setExamFinished(false);\n    setAnswers({});\n    setResults(null);\n  };\n\n  // 格式化时间\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // 渲染当前题目\n  const renderCurrentQuestion = () => {\n    const question = questions[currentIndex];\n    if (!question) return null;\n    \n    const userAnswer = answers[question.id];\n    \n    return (\n      <View style={styles.questionContainer}>\n        <View style={styles.questionHeader}>\n          <Text style={styles.questionNumber}>\n            题目 {currentIndex + 1}/{questions.length}\n            </Text>\n            <View style={styles.timerContainer}>\n            <Ionicons name=\"time-outline\" size={responsiveFontSize(18)} color=\"#f57c00\" />\n            <Text style={styles.timerText}>{formatTime(remainingTime)}</Text>\n            </View>\n          </View>\n          \n        {/* 添加语言切换器 */}\n        <QuestionLanguageSwitcher \n          currentLanguage={currentLanguage} \n          onChangeLanguage={handleLanguageChange} \n        />\n        \n        <ScrollView style={styles.questionScrollView} showsVerticalScrollIndicator={true}>\n          <Text style={styles.questionText}>{question.question}</Text>\n          \n          {question.signalImage && (\n            <View style={styles.imageContainer}>\n              <Image \n                source={question.signalImage} \n                style={styles.questionImage}\n                {...getImageProps()}\n              />\n            </View>\n          )}\n          \n          <View style={styles.optionsContainer}>\n            {question.options.map((option) => (\n              <TouchableOpacity\n                key={option.id}\n                style={[\n                  styles.optionButton,\n                  userAnswer === option.id && styles.selectedOption,\n                  examFinished && option.isCorrect && styles.correctOption,\n                  examFinished && userAnswer === option.id && !option.isCorrect && styles.incorrectOption\n                ]}\n                onPress={() => !examFinished && selectAnswer(question.id, option.id)}\n                disabled={examFinished}\n              >\n                <Text style={styles.optionLetter}>{option.id}</Text>\n                <Text style={styles.optionText}>{option.text}</Text>\n                \n                {examFinished && (\n                  option.isCorrect ? (\n                    <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(20)} color=\"#4caf50\" style={styles.resultIcon} />\n                  ) : (\n                    userAnswer === option.id && (\n                      <Ionicons name=\"close-circle\" size={responsiveFontSize(20)} color=\"#f44336\" style={styles.resultIcon} />\n                    )\n                  )\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n          \n          <View style={styles.navigationContainer}>\n            <TouchableOpacity\n              style={[styles.navButton, currentIndex === 0 && styles.disabledButton]} \n              onPress={() => {\n                if (currentIndex > 0) setCurrentIndex(currentIndex - 1);\n              }}\n              disabled={currentIndex === 0}\n            >\n              <Ionicons name=\"chevron-back\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              <Text style={styles.navButtonText}>\n                上一题\n              </Text>\n            </TouchableOpacity>\n            \n            {currentIndex < questions.length - 1 ? (\n              <TouchableOpacity\n                style={styles.navButton} \n                onPress={() => setCurrentIndex(currentIndex + 1)}\n              >\n                <Text style={styles.navButtonText}>下一题</Text>\n                <Ionicons name=\"chevron-forward\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                style={[styles.navButton, styles.submitButton]} \n                onPress={finishExam}\n              >\n                <Text style={styles.submitButtonText}>交卷</Text>\n                <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(22)} color=\"#fff\" />\n              </TouchableOpacity>\n            )}\n          </View>\n          \n          {/* 添加足够的底部间距，确保按钮完全可见 */}\n          <View style={{ height: 100 }} />\n        </ScrollView>\n        \n        <View style={styles.progressContainer}>\n          <FlatList\n            horizontal\n            data={questions}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item, index }) => (\n              <TouchableOpacity \n                style={[\n                  styles.progressItem, \n                  index === currentIndex && styles.activeProgressItem,\n                  answers[item.id] && styles.answeredProgressItem\n                ]}\n                onPress={() => setCurrentIndex(index)}\n              >\n                <Text \n                  style={[\n                    styles.progressItemText,\n                    index === currentIndex && styles.activeProgressItemText,\n                    answers[item.id] && styles.answeredProgressItemText\n                  ]}\n                >\n                  {index + 1}\n                </Text>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={styles.progressList}\n          />\n        </View>\n      </View>\n    );\n  };\n  \n  // 渲染考试结果\n  const renderExamResults = () => {\n    if (!results) {\n      console.error('No results available to render');\n    return (\n        <View style={styles.errorContainer}>\n          <Ionicons name=\"alert-circle\" size={responsiveFontSize(50)} color=\"#F44336\" />\n          <Text style={styles.errorText}>考试结果加载失败</Text>\n          <TouchableOpacity style={styles.actionButton} onPress={goToHome}>\n            <Text style={styles.actionButtonText}>返回首页</Text>\n          </TouchableOpacity>\n      </View>\n    );\n  }\n    \n    const {\n      score,\n      timeSpent,\n      totalQuestions,\n      correctCount,\n      incorrectCount,\n      answeredQuestions,\n      unansweredQuestions,\n      isPassed\n    } = results;\n    \n    console.log('Rendering exam results:', { score, isPassed });\n  \n  return (\n      <ScrollView style={styles.resultsScrollView} contentContainerStyle={styles.resultsContent}>\n        <View style={styles.examFinishedBanner}>\n          <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(30)} color=\"#fff\" />\n          <Text style={styles.examFinishedText}>考试已完成</Text>\n        </View>\n        \n        <View style={styles.resultHeader}>\n          <LinearGradient\n            colors={isPassed ? ['#43a047', '#2e7d32'] : ['#e53935', '#c62828']}\n            style={styles.resultBanner}\n          >\n            <Text style={styles.resultText}>\n              {isPassed ? '考试通过' : '考试未通过'}\n            </Text>\n            <View style={styles.scoreCircle}>\n              <Text style={styles.scoreValue}>{Math.round(score)}%</Text>\n            </View>\n          </LinearGradient>\n          \n          <View style={styles.resultStats}>\n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{formatTime(timeSpent)}</Text>\n                <Text style={styles.statLabel}>耗时</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{totalQuestions}</Text>\n                <Text style={styles.statLabel}>总题数</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{answeredQuestions}</Text>\n                <Text style={styles.statLabel}>已答题</Text>\n              </View>\n            </View>\n            \n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#4CAF50' }]}>{correctCount}</Text>\n                <Text style={styles.statLabel}>答对</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#F44336' }]}>{incorrectCount}</Text>\n                <Text style={styles.statLabel}>答错</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#FFC107' }]}>{unansweredQuestions}</Text>\n                <Text style={styles.statLabel}>未答</Text>\n              </View>\n            </View>\n          </View>\n            </View>\n            \n        <View style={styles.resultMessage}>\n          <Text style={styles.messageText}>\n            {isPassed \n              ? '恭喜您通过了考试！您可以查看错题，继续练习提高成绩。' \n              : '很遗憾，您未通过考试。建议查看错题，继续练习，再次尝试。'}\n          </Text>\n        </View>\n        \n        {incorrectCount > 0 && (\n          <View style={styles.mistakesInfoCard}>\n            <View style={styles.mistakesInfoHeader}>\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(22)} color=\"#1976D2\" />\n              <Text style={styles.mistakesInfoTitle}>错题已自动收录</Text>\n            </View>\n            <Text style={styles.mistakesInfoText}>\n              本次考试中的 {incorrectCount} 道错题已被自动收录到错题本，您可以随时通过\"错题本\"进行复习和练习。\n            </Text>\n          </View>\n        )}\n        \n        <View style={styles.resultActions}>\n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={viewMistakes}\n              >\n            <Ionicons name=\"alert-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\n            <Text style={styles.actionButtonText}>查看错题</Text>\n              </TouchableOpacity>\n          \n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={restartExam}\n          >\n            <Ionicons name=\"refresh\" size={responsiveFontSize(20)} color=\"#4CAF50\" />\n            <Text style={styles.actionButtonText}>再考一次</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide, styles.primaryButton]} \n            onPress={goToHome}\n          >\n            <Ionicons name=\"home\" size={responsiveFontSize(20)} color=\"#fff\" />\n            <Text style={[styles.actionButtonText, { color: '#fff' }]}>返回首页</Text>\n              </TouchableOpacity>\n            </View>\n      </ScrollView>\n    );\n  };\n\n  // 渲染类别选择\n  const renderCategoryItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.categoryButton,\n        selectedCategory === item.id && styles.categoryButtonActive\n      ]}\n      onPress={() => setSelectedCategory(item.id)}\n    >\n      <Text \n        style={[\n          styles.categoryButtonText,\n          selectedCategory === item.id && styles.categoryButtonTextActive\n        ]}\n      >\n        {item.title}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  // 渲染考试准备界面\n  const renderExamPreparation = () => {\n    return (\n      <View style={styles.prepContainer}>\n        <View style={styles.examInfoCard}>\n          <Text style={styles.examTitle}>驾照理论考试</Text>\n          <Text style={styles.examDescription}>\n            本次考试共{EXAM_CONFIG.TOTAL_QUESTIONS}道题，时间限制{Math.floor(EXAM_CONFIG.TIME_LIMIT / 60)}分钟，\n            通过分数线为{EXAM_CONFIG.PASS_SCORE_PERCENTAGE}%。请选择考试类别，准备好后点击\"开始考试\"按钮。\n          </Text>\n          \n          <View style={styles.categoriesContainer}>\n            <Text style={styles.sectionTitle}>选择考试类别</Text>\n            <FlatList\n              horizontal\n              data={categories}\n              renderItem={renderCategoryItem}\n              keyExtractor={(item) => item.id}\n              showsHorizontalScrollIndicator={false}\n              contentContainerStyle={styles.categoriesList}\n            />\n          </View>\n          \n          <View style={styles.examRules}>\n            <Text style={styles.ruleTitle}>考试须知：</Text>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>题目为随机选择，每次考试题目不同</Text>\n        </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>可任意切换题目顺序作答</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>达到时间限制后将自动交卷</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>考试记录将被保存，可在首页查看</Text>\n            </View>\n          </View>\n        </View>\n        \n        <TouchableOpacity \n          style={styles.startButton}\n          onPress={startExam}\n        >\n          <Text style={styles.startButtonText}>开始考试</Text>\n          <Ionicons name=\"arrow-forward-circle\" size={responsiveFontSize(20)} color=\"#fff\" />\n        </TouchableOpacity>\n    </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\n        <Text style={styles.loadingText}>加载考试中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\n      \n      {!examStarted && !examFinished && renderExamPreparation()}\n      {examStarted && !examFinished && renderCurrentQuestion()}\n      {examFinished && renderExamResults()}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  prepContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n    justifyContent: 'center',\n  },\n  examInfoCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    padding: responsiveWidth(5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examTitle: {\n    fontSize: responsiveFontSize(20),\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: responsiveHeight(2),\n  },\n  examDescription: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n    marginBottom: responsiveHeight(3),\n    lineHeight: responsiveFontSize(20),\n    textAlign: 'center',\n  },\n  categoriesContainer: {\n    marginVertical: responsiveHeight(2),\n  },\n  sectionTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  categoriesList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  categoryButton: {\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    marginRight: responsiveWidth(2),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  categoryButtonActive: {\n    backgroundColor: '#4c669f',\n  },\n  categoryButtonText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  categoryButtonTextActive: {\n    color: '#fff',\n    fontWeight: '500',\n  },\n  examRules: {\n    marginTop: responsiveHeight(2),\n  },\n  ruleTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  ruleItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1),\n  },\n  ruleText: {\n    fontSize: responsiveFontSize(14),\n    color: '#555',\n    marginLeft: responsiveWidth(2),\n  },\n  startButton: {\n    backgroundColor: '#4CAF50',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: responsiveHeight(1.8),\n    borderRadius: 10,\n    marginTop: responsiveHeight(4),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    marginRight: responsiveWidth(2),\n  },\n  // 考试界面样式\n  questionContainer: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  questionHeader: {\n    backgroundColor: '#4c669f',\n    padding: responsiveWidth(4),\n    paddingTop: Platform.OS === 'android' ? (StatusBar.currentHeight + responsiveHeight(1)) : responsiveHeight(1),\n    paddingBottom: responsiveHeight(2),\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  questionNumber: {\n    color: '#fff',\n    fontSize: responsiveFontSize(15),\n    fontWeight: 'bold',\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    paddingHorizontal: responsiveWidth(3),\n    paddingVertical: responsiveHeight(0.5),\n    borderRadius: 20,\n  },\n  timerText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(1),\n    fontSize: responsiveFontSize(14),\n  },\n  questionText: {\n    fontSize: responsiveFontSize(16),\n    color: '#333',\n    fontWeight: '500',\n    lineHeight: responsiveFontSize(24),\n    padding: responsiveWidth(4),\n  },\n  imageContainer: {\n    alignItems: 'center',\n    marginBottom: responsiveHeight(2),\n    backgroundColor: '#f9f9f9',\n    margin: responsiveWidth(4),\n    padding: responsiveWidth(2),\n    borderRadius: 8,\n  },\n  questionImage: {\n    width: responsiveWidth(65),\n    height: responsiveWidth(65),\n  },\n  optionsContainer: {\n    padding: responsiveWidth(4),\n    paddingTop: 0,\n  },\n  optionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveWidth(3.5),\n    borderRadius: 10,\n    marginBottom: responsiveHeight(1.5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  selectedOption: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n    borderWidth: 1,\n  },\n  correctOption: {\n    backgroundColor: '#d3f2d3',\n    borderColor: '#4caf50',\n    borderWidth: 1,\n  },\n  incorrectOption: {\n    backgroundColor: '#f2d3d3',\n    borderColor: '#f44336',\n    borderWidth: 1,\n  },\n  optionLetter: {\n    fontSize: responsiveFontSize(14),\n    fontWeight: 'bold',\n    color: '#666',\n    marginRight: responsiveWidth(3),\n  },\n  optionText: {\n    fontSize: responsiveFontSize(15),\n    color: '#333',\n    flex: 1,\n    lineHeight: responsiveFontSize(22),\n  },\n  resultIcon: {\n    marginLeft: responsiveWidth(2),\n  },\n  navigationContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: responsiveWidth(4),\n    paddingTop: responsiveHeight(2),\n  },\n  navButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  disabledButton: {\n    backgroundColor: '#f5f5f5',\n  },\n  navButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n  },\n  disabledButtonText: {\n    color: '#ccc',\n  },\n  submitButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: responsiveWidth(5),\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginRight: responsiveWidth(2),\n  },\n  progressContainer: {\n    paddingHorizontal: responsiveWidth(5),\n    paddingBottom: responsiveHeight(2),\n  },\n  progressList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  progressItem: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n    borderRadius: responsiveWidth(5),\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: responsiveWidth(2),\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  activeProgressItem: {\n    backgroundColor: '#4c669f',\n    borderColor: '#3b5998',\n  },\n  answeredProgressItem: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n  },\n  progressItemText: {\n    fontSize: responsiveFontSize(12),\n    fontWeight: '500',\n    color: '#666',\n  },\n  activeProgressItemText: {\n    color: '#fff',\n  },\n  answeredProgressItemText: {\n    color: '#4c669f',\n  },\n  // 结果页样式\n  resultsContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n  },\n  resultsScrollView: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  resultsContent: {\n    padding: responsiveWidth(5),\n    paddingBottom: responsiveHeight(5),\n  },\n  resultHeader: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    overflow: 'hidden',\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  resultBanner: {\n    padding: responsiveHeight(3),\n    alignItems: 'center',\n  },\n  resultText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n    marginBottom: responsiveHeight(2),\n    textAlign: 'center',\n  },\n  scoreCircle: {\n    width: responsiveWidth(25),\n    height: responsiveWidth(25),\n    borderRadius: responsiveWidth(12.5),\n    backgroundColor: 'rgba(255,255,255,0.3)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreValue: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n  },\n  resultStats: {\n    padding: responsiveWidth(5),\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: responsiveHeight(2),\n  },\n  statItem: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  statLabel: {\n    fontSize: responsiveFontSize(12),\n    color: '#666',\n    marginTop: responsiveHeight(0.5),\n  },\n  resultMessage: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  messageText: {\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: responsiveFontSize(24),\n  },\n  resultActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveHeight(1.5),\n    borderRadius: 10,\n    margin: responsiveWidth(1),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n    minWidth: responsiveWidth(28),\n  },\n  actionButtonWide: {\n    minWidth: responsiveWidth(42),\n    marginVertical: responsiveHeight(1),\n  },\n  actionButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginLeft: responsiveWidth(2),\n  },\n  questionScrollView: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: responsiveWidth(4),\n    marginBottom: 10,\n  },\n  bottomPadding: {\n    height: responsiveHeight(2),\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  mistakesInfoCard: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  mistakesInfoHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1.5),\n  },\n  mistakesInfoTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginLeft: responsiveWidth(2),\n  },\n  mistakesInfoText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  primaryButton: {\n    backgroundColor: '#4CAF50',\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  examFinishedBanner: {\n    padding: responsiveHeight(2),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4c669f',\n    borderRadius: 10,\n    marginBottom: responsiveHeight(2),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examFinishedText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(2),\n  },\n});\n\nexport default ExamScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, FlatList, SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { getFavoriteQuestions, removeFromFavorites } from '../utils/database';\r\n\r\n// 模拟收藏数据\r\nconst DUMMY_FAVORITES = [\r\n  {\r\n    id: '1',\r\n    category: '交通规则',\r\n    question: '在捷克，汽车应该在道路的哪一侧行驶？',\r\n    dateAdded: new Date('2023-05-10')\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '交通标志',\r\n    question: '红色三角形内有感叹号的标志表示什么？',\r\n    dateAdded: new Date('2023-05-15')\r\n  },\r\n  {\r\n    id: '9',\r\n    category: '优先通行权',\r\n    question: '在没有交通信号灯的十字路口，谁有优先通行权？',\r\n    dateAdded: new Date('2023-05-20')\r\n  }\r\n];\r\n\r\nconst FavoritesScreen = () => {\r\n  const { t } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  // 加载收藏数据的函数\r\n  const loadFavorites = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading favorites...');\r\n      const data = await getFavoriteQuestions();\r\n      console.log(`Loaded ${data.length} favorite items`);\r\n      \r\n      // 处理日期格式\r\n      const processedData = data.map(item => {\r\n        // 确保dateAdded是Date对象\r\n        let dateAdded;\r\n        try {\r\n          dateAdded = item.dateAdded instanceof Date ? \r\n            item.dateAdded : \r\n            new Date(item.dateAdded || item.timestamp || Date.now());\r\n        } catch (e) {\r\n          console.error('Error parsing date:', e);\r\n          dateAdded = new Date();\r\n        }\r\n        \r\n        return {\r\n          ...item,\r\n          dateAdded: dateAdded\r\n        };\r\n      });\r\n      \r\n      setFavorites(processedData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error);\r\n      setLoading(false);\r\n      setFavorites([]); // 出错时设置为空数组\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFavorites();\r\n    \r\n    // 添加监听器，以便在从问题详情页返回时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadFavorites);\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  // 进入/退出编辑模式\r\n  const toggleEditMode = () => {\r\n    setIsEditing(!isEditing);\r\n    setSelectedItems([]);\r\n  };\r\n  \r\n  // 选择/取消选择项目\r\n  const toggleSelectItem = (id) => {\r\n    if (selectedItems.includes(id)) {\r\n      setSelectedItems(selectedItems.filter(itemId => itemId !== id));\r\n    } else {\r\n      setSelectedItems([...selectedItems, id]);\r\n    }\r\n  };\r\n  \r\n  // 删除选中的收藏\r\n  const deleteSelected = async () => {\r\n    try {\r\n      // 从收藏列表中移除选中项目\r\n      for (const itemId of selectedItems) {\r\n        await removeFromFavorites(itemId);\r\n      }\r\n      // 重新加载收藏数据\r\n      await loadFavorites();\r\n      setSelectedItems([]);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Failed to delete selected favorites:', error);\r\n    }\r\n  };\r\n  \r\n  // 全选/取消全选\r\n  const toggleSelectAll = () => {\r\n    if (selectedItems.length === favorites.length) {\r\n      setSelectedItems([]);\r\n    } else {\r\n      setSelectedItems(favorites.map(item => item.id));\r\n    }\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderFavoriteItem = ({ item }) => {\r\n    // 确保日期格式化正确\r\n    let dateString = '';\r\n    try {\r\n      dateString = item.dateAdded instanceof Date ? \r\n        item.dateAdded.toLocaleDateString() : \r\n        new Date(item.dateAdded || Date.now()).toLocaleDateString();\r\n    } catch (e) {\r\n      console.error('Error formatting date:', e);\r\n      dateString = new Date().toLocaleDateString();\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.favoriteItem,\r\n          isEditing && selectedItems.includes(item.id) && styles.selectedItem\r\n        ]}\r\n        onPress={() => {\r\n          if (isEditing) {\r\n            toggleSelectItem(item.id);\r\n          } else {\r\n            handleQuestionPress(item);\r\n          }\r\n        }}\r\n        onLongPress={toggleEditMode}\r\n      >\r\n        {isEditing && (\r\n          <TouchableOpacity \r\n            style={styles.checkboxContainer} \r\n            onPress={() => toggleSelectItem(item.id)}\r\n          >\r\n            <Ionicons \r\n              name={selectedItems.includes(item.id) ? \"checkbox\" : \"square-outline\"} \r\n              size={24} \r\n              color={selectedItems.includes(item.id) ? \"#0066cc\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={styles.favoriteContent}>\r\n          <View style={styles.favoriteHeader}>\r\n            <Text style={styles.favoriteCategory}>{item.category}</Text>\r\n            <Text style={styles.favoriteDate}>{dateString}</Text>\r\n          </View>\r\n          <Text style={styles.favoriteQuestion}>{item.question}</Text>\r\n          <View style={styles.favoriteActions}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text style={styles.title}>{t('favorites.title')}</Text>\r\n          <Text style={styles.subtitle}>已收藏 {favorites.length} 个题目</Text>\r\n        </View>\r\n        {favorites.length > 0 && (\r\n          <View style={styles.headerButtons}>\r\n            {isEditing ? (\r\n              <>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleSelectAll}\r\n                >\r\n                  <Text style={styles.headerButtonText}>\r\n                    {selectedItems.length === favorites.length ? '取消全选' : '全选'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={[styles.headerButton, styles.deleteButton]} \r\n                  onPress={deleteSelected}\r\n                  disabled={selectedItems.length === 0}\r\n                >\r\n                  <Text style={[styles.headerButtonText, styles.deleteButtonText]}>\r\n                    删除\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleEditMode}\r\n                >\r\n                  <Text style={styles.headerButtonText}>取消</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            ) : (\r\n              <TouchableOpacity \r\n                style={styles.headerButton} \r\n                onPress={toggleEditMode}\r\n              >\r\n                <Text style={styles.headerButtonText}>编辑</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {favorites.length > 0 ? (\r\n        <FlatList\r\n          data={favorites}\r\n          renderItem={renderFavoriteItem}\r\n          keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      ) : (\r\n        <View style={styles.emptyContainer}>\r\n          <Ionicons name=\"heart-outline\" size={80} color=\"#bdbdbd\" />\r\n          <Text style={styles.emptyText}>{t('favorites.noFavorites')}</Text>\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  subtitle: {\r\n    fontSize: 15,\r\n    color: '#666',\r\n  },\r\n  headerButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  headerButton: {\r\n    marginLeft: 10,\r\n    padding: 5,\r\n  },\r\n  headerButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 15,\r\n  },\r\n  deleteButton: {\r\n    marginHorizontal: 10,\r\n  },\r\n  deleteButtonText: {\r\n    color: '#F44336',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  favoriteItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 2,\r\n    elevation: 1,\r\n  },\r\n  selectedItem: {\r\n    backgroundColor: '#f0f8ff',\r\n  },\r\n  checkboxContainer: {\r\n    marginRight: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  favoriteContent: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n  },\r\n  favoriteHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8,\r\n  },\r\n  favoriteCategory: {\r\n    color: '#0066cc',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  favoriteDate: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n  },\r\n  favoriteQuestion: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  favoriteActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f8ff',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n  },\r\n  viewButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 14,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 32,\r\n  },\r\n  emptyText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default FavoritesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Dimensions, Image, Platform, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { getFavoriteQuestions, getMistakes, getStudyProgressStats } from '../utils/database';\r\nimport { createShadow } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n// 计算响应式尺寸\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375; // 基于iPhone 8尺寸计算比例\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  // 确保所有hooks在顶层，并且顺序固定\r\n  const { t } = useTranslation();\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    averageAccuracy: 0\r\n  });\r\n  const [favoritesCount, setFavoritesCount] = useState(0);\r\n  const [mistakesCount, setMistakesCount] = useState(0);\r\n\r\n  // 主要功能入口 - 不使用t函数的方式定义，避免hooks依赖问题\r\n  const features = [\r\n    {\r\n      id: 'browse',\r\n      icon: 'list',\r\n      screen: 'Browse',\r\n      color: '#4286f4'\r\n    },\r\n    {\r\n      id: 'exam',\r\n      icon: 'school',\r\n      screen: 'Exam',\r\n      color: '#2ecc71'\r\n    },\r\n    {\r\n      id: 'favorites',\r\n      icon: 'heart',\r\n      screen: 'Favorites',\r\n      color: '#e74c3c',\r\n      badge: favoritesCount\r\n    },\r\n    {\r\n      id: 'mistakes',\r\n      icon: 'close-circle',\r\n      screen: 'Mistakes',\r\n      color: '#f39c12',\r\n      badge: mistakesCount\r\n    }\r\n  ];\r\n\r\n  // 加载学习统计数据\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    \r\n    const loadStats = async () => {\r\n      try {\r\n        const progressStats = await getStudyProgressStats();\r\n        if (isMounted) {\r\n          setStats({\r\n            totalExams: progressStats.totalExams,\r\n            totalQuestions: progressStats.totalQuestions,\r\n            averageAccuracy: progressStats.averageAccuracy\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load study stats:', error);\r\n      }\r\n    };\r\n    \r\n    const loadFavoritesCount = async () => {\r\n      try {\r\n        const favorites = await getFavoriteQuestions();\r\n        if (isMounted) {\r\n          setFavoritesCount(favorites.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load favorites count:', error);\r\n      }\r\n    };\r\n    \r\n    const loadMistakesCount = async () => {\r\n      try {\r\n        const mistakes = await getMistakes();\r\n        if (isMounted) {\r\n          setMistakesCount(mistakes.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load mistakes count:', error);\r\n      }\r\n    };\r\n    \r\n    // 调用函数\r\n    loadStats();\r\n    loadFavoritesCount();\r\n    loadMistakesCount();\r\n\r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      loadStats();\r\n      loadFavoritesCount();\r\n      loadMistakesCount();\r\n    });\r\n\r\n    // 清理函数\r\n    return () => {\r\n      isMounted = false;\r\n      unsubscribe();\r\n    };\r\n  }, [navigation]); // 稳定的依赖数组\r\n  \r\n  // 检查是否从考试页面返回并带有考试结果\r\n  useEffect(() => {\r\n    const checkExamResults = () => {\r\n      const route = navigation.getState().routes.find(r => r.name === 'Home');\r\n      if (route?.params?.examCompleted) {\r\n        const examResults = route.params.examResults;\r\n        \r\n        // 显示成绩通知\r\n        setTimeout(() => {\r\n          Alert.alert(\r\n            '考试已完成',\r\n            `您的考试成绩: ${examResults.score}%\\n` +\r\n            `答对: ${examResults.correctCount} 题\\n` +\r\n            `答错: ${examResults.incorrectCount} 题\\n\\n` +\r\n            `${examResults.incorrectCount > 0 ? \r\n              '所有错题已自动收录至错题本，可随时复习。' : \r\n              '恭喜您全部答对！'}`,\r\n            [\r\n              { text: '我知道了', style: 'default' },\r\n              { \r\n                text: examResults.incorrectCount > 0 ? '查看错题' : '继续练习', \r\n                onPress: () => examResults.incorrectCount > 0 ? \r\n                  navigation.navigate('Mistakes') : \r\n                  navigation.navigate('Browse'),\r\n                style: 'default'\r\n              }\r\n            ]\r\n          );\r\n        }, 500);\r\n        \r\n        // 清除参数，避免重复显示\r\n        navigation.setParams({ examCompleted: undefined, examResults: undefined });\r\n      }\r\n    };\r\n    \r\n    checkExamResults();\r\n  }, [navigation]);\r\n\r\n  const getFeatureTitle = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseTopic');\r\n      case 'exam': return t('home.startExam');\r\n      case 'favorites': return t('home.favorites');\r\n      case 'mistakes': return t('home.reviewMistakes');\r\n      default: return '';\r\n    }\r\n  };\r\n  \r\n  const getFeatureDescription = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseDescription');\r\n      case 'exam': return t('home.examDescription');\r\n      case 'favorites': return t('home.favoritesDescription');\r\n      case 'mistakes': return t('home.mistakesDescription');\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        {/* 顶部头部区域 */}\r\n        <LinearGradient\r\n          colors={['#4c669f', '#3b5998', '#192f6a']}\r\n          style={styles.headerGradient}\r\n        >\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>{t('home.title')}</Text>\r\n            <Text style={styles.subtitle}>{t('home.subtitle')}</Text>\r\n            <Image \r\n              source={require('../../assets/images/react-logo.png')} \r\n              style={styles.headerImage} \r\n              resizeMode=\"contain\"\r\n            />\r\n          </View>\r\n        </LinearGradient>\r\n\r\n        {/* 功能卡片区 */}\r\n        <View style={styles.featuresContainer}>\r\n          <Text style={styles.sectionTitle}>主要功能</Text>\r\n          <View style={styles.featuresGrid}>\r\n            {features.map((feature) => (\r\n              <TouchableOpacity\r\n                key={feature.id}\r\n                style={[styles.featureCard, { backgroundColor: feature.color }]}\r\n                onPress={() => navigation.navigate(feature.screen)}\r\n                activeOpacity={0.8}\r\n              >\r\n                <View style={styles.featureIconContainer}>\r\n                  <Ionicons name={feature.icon} size={responsiveFontSize(28)} color=\"#fff\" />\r\n                  {feature.badge > 0 && (\r\n                    <View style={styles.badgeContainer}>\r\n                      <Text style={styles.badgeText}>{feature.badge}</Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n                <Text style={styles.featureTitle}>\r\n                  {getFeatureTitle(feature.id)}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        {/* 统计数据卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>{t('home.studyStats')}</Text>\r\n          <TouchableOpacity\r\n            style={styles.statsCard}\r\n            onPress={() => navigation.navigate('StudyProgress')}\r\n            activeOpacity={0.7}\r\n          >\r\n            <View style={styles.statsContent}>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n                <Text style={styles.statLabel}>{t('home.examsTaken')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n                <Text style={styles.statLabel}>{t('home.questionsAnswered')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>\r\n                  {stats.averageAccuracy !== undefined && !isNaN(stats.averageAccuracy) \r\n                    ? `${Math.round(stats.averageAccuracy * 100)}%` \r\n                    : '0%'}\r\n                </Text>\r\n                <Text style={styles.statLabel}>{t('home.accuracy')}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.statsFooter}>\r\n              <Text style={styles.viewMoreText}>查看详细统计</Text>\r\n              <Ionicons name=\"chevron-forward\" size={responsiveFontSize(18)} color=\"#4c669f\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* 考试信息卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>考试须知</Text>\r\n          <View style={styles.infoCard}>\r\n            <View style={styles.infoHeader}>\r\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(24)} color=\"#4c669f\" />\r\n              <Text style={styles.infoTitle}>{t('exam.examInfo')}</Text>\r\n            </View>\r\n            <Text style={styles.infoText}>\r\n              • {t('exam.examInfoLine1')}{\"\\n\"}\r\n              • {t('exam.examInfoLine2')}{\"\\n\"}\r\n              • {t('exam.examInfoLine3')}{\"\\n\"}\r\n              • {t('exam.examInfoLine4')}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight || 0 : 0,\r\n    paddingBottom: responsiveHeight(4),\r\n    borderBottomLeftRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(28),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#e0e0e0',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  headerImage: {\r\n    width: responsiveWidth(30),\r\n    height: responsiveHeight(10),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(5),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  cardSection: {\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresContainer: {\r\n    padding: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: responsiveWidth(2),\r\n  },\r\n  featureCard: {\r\n    width: '48%',\r\n    height: responsiveHeight(15),\r\n    backgroundColor: '#4c669f',\r\n    borderRadius: 16,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(2),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  featureIconContainer: {\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  featureTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  statsCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  statsContent: {\r\n    flexDirection: 'row',\r\n    padding: responsiveWidth(4),\r\n  },\r\n  statItem: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  statValue: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#4c669f',\r\n    marginBottom: responsiveHeight(0.5),\r\n  },\r\n  statLabel: {\r\n    fontSize: responsiveFontSize(12),\r\n    color: '#666',\r\n  },\r\n  statDivider: {\r\n    width: 1,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  statsFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingVertical: responsiveHeight(1.5),\r\n  },\r\n  viewMoreText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#4c669f',\r\n    marginRight: responsiveWidth(1),\r\n    fontWeight: '500',\r\n  },\r\n  infoCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    padding: responsiveWidth(4),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  infoHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  infoTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  infoText: {\r\n    lineHeight: responsiveFontSize(20),\r\n    color: '#444',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  badgeContainer: {\r\n    position: 'absolute',\r\n    top: -8,\r\n    right: -8,\r\n    backgroundColor: '#e74c3c',\r\n    borderRadius: 12,\r\n    minWidth: 20,\r\n    minHeight: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 5,\r\n  },\r\n  badgeText: {\r\n    fontSize: responsiveFontSize(10),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { clearMistakes, getMistakes, removeMistake } from '../utils/database';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = percentage => (width * percentage) / 100;\r\nconst responsiveHeight = percentage => (height * percentage) / 100;\r\nconst responsiveFontSize = size => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst MistakesScreen = ({ navigation }) => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [mistakes, setMistakes] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  \r\n  // 加载错题数据\r\n  useEffect(() => {\r\n    const loadMistakes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 加载所有题目\r\n        const questions = await assetDataService.loadAllQuestionSets();\r\n        setAllQuestions(questions);\r\n        console.log('Loaded questions:', questions.length);\r\n        \r\n        // 加载错题记录\r\n        console.log('Fetching mistake records...');\r\n        const mistakeRecords = await getMistakes();\r\n        console.log('Mistake records loaded:', mistakeRecords ? mistakeRecords.length : 'none');\r\n        \r\n        if (!mistakeRecords || mistakeRecords.length === 0) {\r\n          console.log('No mistakes found');\r\n          setMistakes([]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // 合并错题记录和题目详情\r\n        const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n          if (!mistake || !mistake.questionId) {\r\n            console.warn('Invalid mistake record:', mistake);\r\n            return null;\r\n          }\r\n          \r\n          const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n          \r\n          if (questionDetail) {\r\n            return {\r\n              ...mistake,\r\n              question: questionDetail.question,\r\n              category: questionDetail.category,\r\n              chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n              answers: questionDetail.answers,\r\n              correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n                ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n                : 'A',\r\n              signalImage: questionDetail.signalImage,\r\n              date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n            };\r\n          }\r\n          console.warn('Could not find question details for mistake:', mistake.questionId);\r\n          return null;\r\n        }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n        \r\n        console.log('Processed mistakes with details:', mistakesWithDetails.length);\r\n        \r\n        // 按日期排序，最新的在前面\r\n        mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n        \r\n        setMistakes(mistakesWithDetails);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading mistakes:', error);\r\n        setLoading(false);\r\n        Alert.alert(\r\n          '加载错误',\r\n          '加载错题数据失败: ' + error.message,\r\n          [{ text: '确定', style: 'default' }]\r\n        );\r\n      }\r\n    };\r\n\r\n    loadMistakes();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新\r\n    const unsubscribe = navigation.addListener('focus', loadMistakes);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 删除单个错题\r\n  const handleRemoveMistake = (questionId) => {\r\n    if (!questionId) {\r\n      console.error('Missing questionId for removal');\r\n      return;\r\n    }\r\n    \r\n    Alert.alert(\r\n      '删除错题',\r\n      '确定要从错题列表中删除此题目吗？',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { \r\n          text: '确定', \r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true); // 添加loading状态\r\n              console.log(`Removing mistake with ID: ${questionId}`);\r\n              \r\n              // 执行删除操作\r\n              const result = await removeMistake(questionId);\r\n              console.log('Remove result:', result);\r\n              \r\n              // 如果成功删除，更新UI\r\n              if (result) {\r\n                // 直接从当前state中移除，避免重新加载全部数据\r\n                const updatedMistakes = mistakes.filter(m => \r\n                  m.questionId.toString() !== questionId.toString()\r\n                );\r\n                setMistakes(updatedMistakes);\r\n                console.log(`Updated mistakes in UI: ${updatedMistakes.length}`);\r\n              } else {\r\n                console.warn('Failed to remove mistake, reloading data...');\r\n                // 如果删除失败，尝试重新加载全部数据\r\n                const updatedMistakes = await getMistakes();\r\n                const mistakesWithDetails = await processMistakes(updatedMistakes);\r\n                setMistakes(mistakesWithDetails);\r\n              }\r\n            } catch (error) {\r\n              console.error('Error removing mistake:', error);\r\n              Alert.alert('错误', '删除错题失败，请稍后重试。');\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 添加处理错题数据的辅助函数\r\n  const processMistakes = async (mistakeRecords) => {\r\n    // 加载所有题目\r\n    const questions = await assetDataService.loadAllQuestionSets();\r\n    \r\n    // 合并错题记录和题目详情\r\n    const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n      if (!mistake || !mistake.questionId) {\r\n        console.warn('Invalid mistake record:', mistake);\r\n        return null;\r\n      }\r\n      \r\n      const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n      \r\n      if (questionDetail) {\r\n        return {\r\n          ...mistake,\r\n          question: questionDetail.question,\r\n          category: questionDetail.category,\r\n          chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n          answers: questionDetail.answers,\r\n          correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          signalImage: questionDetail.signalImage,\r\n          date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n        };\r\n      }\r\n      console.warn('Could not find question details for mistake:', mistake.questionId);\r\n      return null;\r\n    }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n    \r\n    // 按日期排序，最新的在前面\r\n    mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n    \r\n    return mistakesWithDetails;\r\n  };\r\n\r\n  // 修改清空所有错题函数\r\n  const handleClearAllMistakes = () => {\r\n    if (mistakes.length === 0) {\r\n      console.log('No mistakes to clear');\r\n      return;\r\n    }\r\n    \r\n    Alert.alert(\r\n      '清空错题',\r\n      '确定要清空所有错题记录吗？此操作不可恢复。',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { \r\n          text: '确定', \r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true); // 添加加载状态\r\n              console.log('Clearing all mistakes');\r\n              \r\n              // 尝试清空错题\r\n              await clearMistakes();\r\n              console.log('All mistakes cleared');\r\n              \r\n              // 直接清空当前状态\r\n              setMistakes([]);\r\n              \r\n              // 用一个提示告知用户操作成功\r\n              Alert.alert('操作成功', '所有错题记录已清空');\r\n            } catch (error) {\r\n              console.error('Error clearing mistakes:', error);\r\n              \r\n              // 出错时尝试使用备用方法\r\n              try {\r\n                console.log('Trying alternative method to clear mistakes...');\r\n                await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n                setMistakes([]);\r\n                Alert.alert('操作成功', '所有错题记录已清空');\r\n              } catch (backupError) {\r\n                console.error('Backup clear method also failed:', backupError);\r\n                Alert.alert('错误', '清空错题失败，请稍后重试。');\r\n              }\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 查看错题详情\r\n  const handleViewMistakeDetail = (mistake) => {\r\n    navigation.navigate('QuestionDetail', { questionId: mistake.questionId });\r\n  };\r\n\r\n  // 渲染错题项\r\n  const renderMistakeItem = ({ item }) => {\r\n    // 找出用户选择的答案\r\n    const userAnswerIndex = item.userAnswer ? item.userAnswer.charCodeAt(0) - 65 : -1;\r\n    const userAnswerText = userAnswerIndex >= 0 && item.answers[userAnswerIndex] \r\n      ? item.answers[userAnswerIndex].text \r\n      : '未作答';\r\n    \r\n    // 找出正确答案\r\n    const correctAnswerIndex = item.answers.findIndex(ans => ans.correct);\r\n    const correctAnswerText = correctAnswerIndex >= 0 \r\n      ? `${String.fromCharCode(65 + correctAnswerIndex)}: ${item.answers[correctAnswerIndex].text}` \r\n      : '未知';\r\n    \r\n    return (\r\n      <View style={styles.mistakeItem}>\r\n        <View style={styles.mistakeHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Text style={styles.categoryText}>{item.chineseCategory || item.category}</Text>\r\n          </View>\r\n          <Text style={styles.mistakeDate}>{item.date}</Text>\r\n        </View>\r\n        \r\n        <Text style={styles.mistakeQuestion}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.answerContainer}>\r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.wrongBadge]}>\r\n              <Text style={styles.answerBadgeText}>您的答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{item.userAnswer}: {userAnswerText}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.correctBadge]}>\r\n              <Text style={styles.answerBadgeText}>正确答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{correctAnswerText}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.mistakeActions}>\r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.viewButton]}\r\n            onPress={() => handleViewMistakeDetail(item)}\r\n          >\r\n            <Ionicons name=\"eye\" size={responsiveFontSize(16)} color=\"#4c669f\" />\r\n            <Text style={styles.viewButtonText}>查看详情</Text>\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.deleteButton]}\r\n            onPress={() => handleRemoveMistake(item.questionId)}\r\n          >\r\n            <Ionicons name=\"trash-bin\" size={responsiveFontSize(16)} color=\"#e74c3c\" />\r\n            <Text style={styles.deleteButtonText}>移除</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>错题本</Text>\r\n        <Text style={styles.subtitle}>共{mistakes.length}道错题</Text>\r\n        \r\n        {mistakes.length > 0 && (\r\n          <TouchableOpacity \r\n            style={styles.clearButton} \r\n            onPress={handleClearAllMistakes}\r\n          >\r\n            <Ionicons name=\"trash\" size={responsiveFontSize(18)} color=\"#e74c3c\" />\r\n            <Text style={styles.clearButtonText}>清空</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n          <Text style={styles.loadingText}>加载错题中...</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={mistakes}\r\n          renderItem={renderMistakeItem}\r\n          keyExtractor={(item) => item.questionId.toString()}\r\n          contentContainerStyle={styles.mistakesList}\r\n          showsVerticalScrollIndicator={true}\r\n          ListEmptyComponent={() => (\r\n            <View style={styles.emptyContainer}>\r\n              <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(80)} color=\"#e0e0e0\" />\r\n              <Text style={styles.emptyText}>您还没有错题记录</Text>\r\n              <Text style={styles.emptySubText}>答错的题目会自动记录在这里</Text>\r\n              \r\n              <TouchableOpacity \r\n                style={styles.startExamButton}\r\n                onPress={() => navigation.navigate('Exam')}\r\n              >\r\n                <Text style={styles.startExamText}>开始模拟考试</Text>\r\n                <Ionicons name=\"arrow-forward\" size={responsiveFontSize(16)} color=\"#fff\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginLeft: responsiveWidth(2),\r\n    alignSelf: 'flex-end',\r\n  },\r\n  clearButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff0f0',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 20,\r\n  },\r\n  clearButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  mistakesList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  mistakeItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  mistakeHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeDate: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeQuestion: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  answerContainer: {\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  answerRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  answerBadge: {\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.2),\r\n    borderRadius: 12,\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  wrongBadge: {\r\n    backgroundColor: '#ffebee',\r\n  },\r\n  correctBadge: {\r\n    backgroundColor: '#e8f5e9',\r\n  },\r\n  answerBadgeText: {\r\n    fontSize: responsiveFontSize(11),\r\n    fontWeight: '500',\r\n  },\r\n  answerText: {\r\n    flex: 1,\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#444',\r\n  },\r\n  mistakeActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingTop: responsiveHeight(1.5),\r\n  },\r\n  actionButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.8),\r\n    borderRadius: 20,\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f5ff',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: '#fff0f0',\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  deleteButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(5),\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginTop: responsiveHeight(3),\r\n  },\r\n  emptySubText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#999',\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(5),\r\n    textAlign: 'center',\r\n  },\r\n  startExamButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 25,\r\n  },\r\n  startExamText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: '500',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default MistakesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Dimensions, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { addToFavorites, isQuestionFavorited, recordMistake, removeFromFavorites } from '../utils/database';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst QuestionDetailScreen = ({ route, navigation }) => {\r\n  const { questionId } = route.params;\r\n  const { t, i18n } = useTranslation();\r\n  \r\n  const [question, setQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    await loadQuestion(language);\r\n  };\r\n\r\n  // 加载题目详情\r\n  const loadQuestion = async (language = currentLanguage) => {\r\n    try {\r\n      // 检查questionId是否存在\r\n      if (!questionId) {\r\n        console.error('Question ID is undefined');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // 首先尝试从asset数据中加载题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets(language);\r\n      const assetQuestion = allQuestions.find(q => q.id && q.id.toString() === questionId.toString());\r\n      \r\n      if (assetQuestion) {\r\n        // 转换题目格式以适应UI\r\n        const formattedQuestion = {\r\n          ...assetQuestion,\r\n          options: assetQuestion.answers.map((ans, index) => ({\r\n            id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n            text: ans.text,\r\n            isCorrect: ans.correct\r\n          })),\r\n          correctAnswer: assetQuestion.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + assetQuestion.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          explanation: assetQuestion.explanation || '暂无解析',\r\n          category: assetDataService.getChineseCategoryName(assetQuestion.category)\r\n        };\r\n        \r\n        // 使用signalImage属性\r\n        if (assetQuestion.signalImage) {\r\n          formattedQuestion.signalImage = assetQuestion.signalImage;\r\n        }\r\n        \r\n        setQuestion(formattedQuestion);\r\n        \r\n        // 检查是否已收藏\r\n        const favoriteStatus = await isQuestionFavorited(questionId);\r\n        setIsFavorite(favoriteStatus);\r\n      } else {\r\n        // 如果在asset数据中找不到，则提示错误\r\n        console.error('Question not found in asset data:', questionId);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading question:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 加载数据\r\n  useEffect(() => {\r\n    loadQuestion();\r\n  }, [questionId]);\r\n\r\n  // 选择答案\r\n  const selectOption = (optionId) => {\r\n    if (!showAnswer) {\r\n      setSelectedOption(optionId);\r\n    }\r\n  };\r\n\r\n  // 检查答案\r\n  const checkAnswer = () => {\r\n    if (selectedOption) {\r\n      setShowAnswer(true);\r\n      const isCorrect = selectedOption === question.correctAnswer;\r\n      setIsAnswerCorrect(isCorrect);\r\n      \r\n      // 如果回答错误，记录错题\r\n      if (!isCorrect) {\r\n        recordMistake(questionId, selectedOption);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 下一题\r\n  const nextQuestion = () => {\r\n    // 这里应该加载下一道题，这里简单模拟返回列表\r\n    navigation.goBack();\r\n  };\r\n\r\n  // 切换收藏状态\r\n  const toggleFavorite = async () => {\r\n    try {\r\n      if (isFavorite) {\r\n        await removeFromFavorites(question.id);\r\n      } else {\r\n        await addToFavorites(question.id);\r\n      }\r\n      setIsFavorite(!isFavorite);\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n    }\r\n  };\r\n\r\n  // 渲染选项\r\n  const renderOption = (option) => {\r\n    const isSelected = selectedOption === option.id;\r\n    const isCorrect = question.correctAnswer === option.id;\r\n    \r\n    let optionStyle = styles.option;\r\n    let textStyle = styles.optionText;\r\n    let iconName = 'ellipse-outline';\r\n    let iconColor = '#999';\r\n    \r\n    if (showAnswer) {\r\n      if (isCorrect) {\r\n        optionStyle = [styles.option, styles.correctOption];\r\n        textStyle = [styles.optionText, styles.correctOptionText];\r\n        iconName = 'checkmark-circle';\r\n        iconColor = '#4CAF50';\r\n      } else if (isSelected && !isCorrect) {\r\n        optionStyle = [styles.option, styles.incorrectOption];\r\n        textStyle = [styles.optionText, styles.incorrectOptionText];\r\n        iconName = 'close-circle';\r\n        iconColor = '#F44336';\r\n      }\r\n    } else if (isSelected) {\r\n      optionStyle = [styles.option, styles.selectedOption];\r\n      textStyle = [styles.optionText, styles.selectedOptionText];\r\n      iconName = 'radio-button-on';\r\n      iconColor = '#4c669f';\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={option.id} \r\n        style={optionStyle}\r\n        onPress={() => selectOption(option.id)}\r\n        disabled={showAnswer}\r\n        activeOpacity={0.8}\r\n      >\r\n        <Ionicons name={iconName} size={responsiveFontSize(24)} color={iconColor} style={styles.optionIcon} />\r\n        <Text style={textStyle}>\r\n          {option.id}. {option.text}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题目中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!question) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle-outline\" size={responsiveFontSize(60)} color=\"#F44336\" />\r\n        <Text style={styles.errorText}>题目加载失败</Text>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.backButtonText}>返回上一页</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#4c669f\" />\r\n      \r\n      <LinearGradient\r\n        colors={['#4c669f', '#3b5998', '#192f6a']}\r\n        style={styles.headerGradient}\r\n      >\r\n        <View style={styles.header}>\r\n          <View style={styles.headerTop}>\r\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backBtn}>\r\n              <Ionicons name=\"arrow-back\" size={responsiveFontSize(22)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity onPress={toggleFavorite} style={styles.favoriteButton}>\r\n              <Ionicons \r\n                name={isFavorite ? 'heart' : 'heart-outline'} \r\n                size={responsiveFontSize(22)} \r\n                color={isFavorite ? '#ff6b6b' : '#fff'} \r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          \r\n          <View style={styles.headerInfo}>\r\n            <Text style={styles.categoryText}>{question.category}</Text>\r\n            <Text style={styles.questionIdText}>题目 #{question.id}</Text>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n      \r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        <View style={styles.languageSwitcherContainer}>\r\n          <QuestionLanguageSwitcher \r\n            currentLanguage={currentLanguage} \r\n            onChangeLanguage={handleLanguageChange}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.questionContainer}>\r\n          <Text style={styles.questionText}>{question.question}</Text>\r\n          \r\n          {question.signalImage && (\r\n            <View style={styles.imageContainer}>\r\n              <Image \r\n                source={question.signalImage} \r\n                style={styles.questionImage}\r\n                resizeMode=\"contain\"\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.optionsContainer}>\r\n          {question.options.map(option => renderOption(option))}\r\n        </View>\r\n        \r\n        {showAnswer && (\r\n          <View style={styles.resultContainer}>\r\n            <View style={[\r\n              styles.resultBanner,\r\n              isAnswerCorrect ? styles.correctBanner : styles.incorrectBanner\r\n            ]}>\r\n              <Ionicons \r\n                name={isAnswerCorrect ? 'checkmark-circle' : 'close-circle'} \r\n                size={responsiveFontSize(24)} \r\n                color=\"#fff\" \r\n                style={styles.resultIcon}\r\n              />\r\n              <Text style={styles.resultText}>\r\n                {isAnswerCorrect ? '回答正确！' : '回答错误！'}\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={styles.explanationContainer}>\r\n              <View style={styles.explanationHeader}>\r\n                <Ionicons name=\"information-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\r\n                <Text style={styles.explanationTitle}>解析</Text>\r\n              </View>\r\n              <Text style={styles.explanationText}>{question.explanation}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!showAnswer ? (\r\n            <TouchableOpacity \r\n              style={[styles.button, !selectedOption && styles.buttonDisabled]} \r\n              onPress={checkAnswer}\r\n              disabled={!selectedOption}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>提交答案</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity \r\n              style={[styles.button, styles.nextButton]} \r\n              onPress={nextQuestion}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>下一题</Text>\r\n              <Ionicons name=\"arrow-forward\" size={responsiveFontSize(18)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n  },\r\n  headerTop: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  backBtn: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  headerInfo: {\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  categoryText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#e0e0e0',\r\n  },\r\n  questionIdText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveWidth(1),\r\n  },\r\n  favoriteButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  languageSwitcherContainer: {\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(0.5),\r\n    alignItems: 'center',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#F44336',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  backButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  backButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  questionContainer: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#333',\r\n    fontWeight: '500',\r\n    lineHeight: responsiveFontSize(26),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    backgroundColor: '#f9f9f9',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 8,\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(70),\r\n    height: responsiveWidth(70),\r\n  },\r\n  optionsContainer: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  option: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    padding: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(1.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n    elevation: 1,\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#e3f2fd',\r\n    borderColor: '#4c669f',\r\n    borderWidth: 1,\r\n  },\r\n  correctOption: {\r\n    backgroundColor: '#e8f5e9',\r\n    borderColor: '#4CAF50',\r\n    borderWidth: 1,\r\n  },\r\n  incorrectOption: {\r\n    backgroundColor: '#ffebee',\r\n    borderColor: '#F44336',\r\n    borderWidth: 1,\r\n  },\r\n  optionIcon: {\r\n    marginRight: responsiveWidth(3),\r\n  },\r\n  optionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    flex: 1,\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  selectedOptionText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n  },\r\n  correctOptionText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectOptionText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  resultContainer: {\r\n    marginHorizontal: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  resultBanner: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  correctBanner: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  incorrectBanner: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  resultIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  resultText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n  },\r\n  explanationContainer: {\r\n    backgroundColor: '#fff8e1',\r\n    borderRadius: 10,\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  explanationHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  explanationTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#F57C00',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  explanationText: {\r\n    fontSize: responsiveFontSize(15),\r\n    color: '#5D4037',\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  buttonContainer: {\r\n    padding: responsiveWidth(5),\r\n    paddingTop: responsiveHeight(3),\r\n  },\r\n  button: {\r\n    backgroundColor: '#4c669f',\r\n    padding: responsiveHeight(1.8),\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#B0BEC5',\r\n  },\r\n  nextButton: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default QuestionDetailScreen; ","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { recordStudyProgress } from '../utils/database';\r\n\r\nexport default function ResultScreen({ route, navigation }) {\r\n  const { results, examType, timeSpent } = route.params;\r\n  \r\n  const [isPassed, setIsPassed] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [percentageScore, setPercentageScore] = useState(0);\r\n  \r\n  // 计算成绩\r\n  useEffect(() => {\r\n    if (results) {\r\n      const correctAnswers = results.filter(item => item.isCorrect).length;\r\n      const totalQuestions = results.length;\r\n      \r\n      const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\r\n      setScore(calculatedScore);\r\n      setPercentageScore(correctAnswers / totalQuestions);\r\n      \r\n      // 考试通过标准：80%以上\r\n      setIsPassed(calculatedScore >= 80);\r\n      \r\n      // 记录学习进度\r\n      recordStudyProgress({\r\n        questionsAnswered: totalQuestions,\r\n        correctCount: correctAnswers,\r\n        examType: examType || 'unknown'\r\n      }).catch(error => {\r\n        console.error('Failed to record study progress:', error);\r\n      });\r\n    }\r\n  }, [results, examType]);\r\n  \r\n  // 返回首页\r\n  const goToHome = () => {\r\n    navigation.navigate('Main');\r\n  };\r\n  \r\n  // 重新考试\r\n  const retryExam = () => {\r\n    navigation.navigate('Exam');\r\n  };\r\n  \r\n  // 查看错题\r\n  const viewMistakes = () => {\r\n    navigation.navigate('Mistakes');\r\n  };\r\n  \r\n  // 渲染得分圆环\r\n  const renderScoreCircle = () => {\r\n    return (\r\n      <View style={styles.scoreCircleContainer}>\r\n        <View style={[\r\n          styles.scoreCircle,\r\n          {borderColor: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          <Text style={[\r\n            styles.scoreText,\r\n            {color: isPassed ? '#4CAF50' : '#F44336'}\r\n          ]}>{score}%</Text>\r\n          <Text style={styles.scoreSubtext}>\r\n            {results.filter(item => item.isCorrect).length} / {results.length} 题正确\r\n          </Text>\r\n        </View>\r\n        <Text style={[\r\n          styles.resultText,\r\n          {color: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          {isPassed ? '恭喜，考试通过！' : '很遗憾，考试未通过'}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  // 渲染每题结果\r\n  const renderQuestionResult = ({ item, index }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionItem}\r\n        onPress={() => navigation.navigate('QuestionDetail', { questionId: item.questionId })}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <Text style={styles.questionNumber}>题目 #{index + 1}</Text>\r\n          {item.isCorrect ? (\r\n            <View style={styles.correctBadge}>\r\n              <Ionicons name=\"checkmark\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>正确</Text>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.incorrectBadge}>\r\n              <Ionicons name=\"close\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>错误</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        <Text style={styles.questionText} numberOfLines={2}>{item.question}</Text>\r\n        <View style={styles.answerInfo}>\r\n          <Text style={styles.answerLabel}>\r\n            您的回答: <Text style={item.isCorrect ? styles.correctText : styles.incorrectText}>{item.selectedOption}</Text>\r\n          </Text>\r\n          {!item.isCorrect && (\r\n            <Text style={styles.answerLabel}>\r\n              正确答案: <Text style={styles.correctText}>{item.correctOption}</Text>\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  \r\n  // 渲染统计信息\r\n  const renderStats = () => {\r\n    return (\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"time-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>用时</Text>\r\n          <Text style={styles.statValue}>\r\n            {Math.floor(timeSpent / 60)}分{timeSpent % 60}秒\r\n          </Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"checkmark-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>正确</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => item.isCorrect).length}</Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"close-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>错误</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => !item.isCorrect).length}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>考试结果</Text>\r\n          <Text style={styles.subtitle}>\r\n            {examType === 'full' ? '完整模拟考试' : examType === 'practice' ? '练习模式' : '快速测试'}\r\n          </Text>\r\n        </View>\r\n        \r\n        {renderScoreCircle()}\r\n        {renderStats()}\r\n        \r\n        <View style={styles.resultsContainer}>\r\n          <Text style={styles.sectionTitle}>题目详情</Text>\r\n          <FlatList\r\n            data={results}\r\n            renderItem={renderQuestionResult}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            scrollEnabled={false}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!isPassed ? (\r\n            <TouchableOpacity style={styles.button} onPress={retryExam}>\r\n              <Ionicons name=\"reload\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>重新考试</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity style={styles.button} onPress={goToHome}>\r\n              <Ionicons name=\"home\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>返回首页</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          \r\n          {results.filter(item => !item.isCorrect).length > 0 && (\r\n            <TouchableOpacity style={[styles.button, styles.secondaryButton]} onPress={viewMistakes}>\r\n              <Ionicons name=\"list\" size={20} color=\"#0066cc\" style={styles.buttonIcon} />\r\n              <Text style={styles.secondaryButtonText}>查看错题</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  scoreCircleContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  scoreCircle: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    borderWidth: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  scoreText: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n  },\r\n  scoreSubtext: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  resultText: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginHorizontal: 20,\r\n    justifyContent: 'space-between',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginVertical: 4,\r\n  },\r\n  statValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    marginHorizontal: 20,\r\n    marginTop: 25,\r\n  },\r\n  resultsContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  questionItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginHorizontal: 20,\r\n    marginBottom: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  questionNumber: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  correctBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  incorrectBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#F44336',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  badgeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    marginLeft: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n    marginBottom: 10,\r\n  },\r\n  answerInfo: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#eee',\r\n    paddingTop: 10,\r\n  },\r\n  answerLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  correctText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    paddingTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#0066cc',\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: '#fff',\r\n    borderColor: '#0066cc',\r\n    borderWidth: 1,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 8,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  secondaryButtonText: {\r\n    color: '#0066cc',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  }\r\n}); ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Alert } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n/**\r\n * 修复收藏数据结构问题\r\n * 会尝试重建收藏数据与题目之间的关联\r\n */\r\nexport const repairFavoritesData = async () => {\r\n  try {\r\n    console.log('开始修复收藏数据...');\r\n    \r\n    // 1. 获取现有收藏数据\r\n    const storedFavorites = await AsyncStorage.getItem('favorites');\r\n    const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n    console.log('现有收藏数量:', favorites.length);\r\n    \r\n    // 2. 获取所有题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    console.log('题目总数:', allQuestions.length);\r\n    \r\n    // 3. 重新构建有效的收藏数据\r\n    const validFavorites = [];\r\n    let repaired = 0;\r\n    \r\n    for (const fav of favorites) {\r\n      const questionId = fav.questionId || fav.id;\r\n      \r\n      if (!questionId) continue;\r\n      \r\n      const question = allQuestions.find(q => \r\n        q.id && (q.id.toString() === questionId.toString())\r\n      );\r\n      \r\n      if (question) {\r\n        // 添加有效格式的收藏\r\n        validFavorites.push({\r\n          id: `fav_${question.id}_${Date.now()}`,\r\n          questionId: question.id.toString(),\r\n          dateAdded: fav.dateAdded || Date.now(),\r\n          timestamp: Date.now()\r\n        });\r\n        repaired++;\r\n      }\r\n    }\r\n    \r\n    // 4. 保存修复后的数据\r\n    await AsyncStorage.setItem('favorites', JSON.stringify(validFavorites));\r\n    console.log(`收藏数据修复完成，成功恢复 ${repaired} 个收藏`);\r\n    \r\n    return {\r\n      success: true,\r\n      message: `成功修复 ${repaired} 个收藏数据`\r\n    };\r\n  } catch (error) {\r\n    console.error('修复收藏数据失败:', error);\r\n    return {\r\n      success: false,\r\n      message: error.message \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 修复错题本清空功能\r\n */\r\nexport const ensureCleanMistakes = async () => {\r\n  try {\r\n    console.log('尝试强制清空错题数据...');\r\n    \r\n    // 直接设置空数组到错题存储\r\n    await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '成功清空错题数据'\r\n    };\r\n  } catch (error) {\r\n    console.error('清空错题数据失败:', error);\r\n    return {\r\n      success: false, \r\n      message: error.message\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 一次性修复所有已知问题\r\n */\r\nexport const fixAllIssues = async () => {\r\n  try {\r\n    const results = [];\r\n    \r\n    // 1. 修复收藏功能\r\n    const favResult = await repairFavoritesData();\r\n    results.push(`收藏功能: ${favResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 2. 修复错题本\r\n    const mistakeResult = await ensureCleanMistakes();\r\n    results.push(`错题本: ${mistakeResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 3. 重置学习进度数据，修复NaN%问题\r\n    await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n    results.push('学习进度: 已重置');\r\n    \r\n    console.log('所有问题修复完成:', results);\r\n    \r\n    Alert.alert(\r\n      '修复完成',\r\n      results.join('\\n'),\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('修复问题失败:', error);\r\n    \r\n    Alert.alert(\r\n      '修复失败',\r\n      '修复应用问题时出错: ' + error.message,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return false;\r\n  }\r\n}; ","/**\r\n * JSON修复工具\r\n * \r\n * 用于处理并修复驾考应用中题库JSON文件的格式问题\r\n */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { Alert, Platform } from 'react-native';\r\n\r\n/**\r\n * 处理JSON解析错误并创建修复后的文件\r\n * @returns {Promise<boolean>} 是否成功修复\r\n */\r\nexport const fixJsonErrors = async () => {\r\n  try {\r\n    console.log('开始尝试修复JSON错误...');\r\n    \r\n    // 如果当前是Web环境，则使用不同的方法\r\n    if (Platform.OS === 'web') {\r\n      // 在Web环境中，我们可以通过存储一个标记来优先使用fixed版本的JSON\r\n      await AsyncStorage.setItem('useFixedJson', 'true');\r\n      console.log('已设置Web环境优先使用fixed版本的JSON');\r\n      return true;\r\n    }\r\n    \r\n    // 在原生环境中，我们可以直接复制修复后的文件\r\n    const hasFixedFiles = await checkAndCopyFixedFiles();\r\n    \r\n    if (hasFixedFiles) {\r\n      Alert.alert(\r\n        '修复完成',\r\n        '已成功修复JSON文件格式问题，应用将正常加载所有题目。'\r\n      );\r\n      return true;\r\n    } else {\r\n      Alert.alert(\r\n        '修复失败',\r\n        '无法找到修复后的JSON文件或复制过程中出现错误。'\r\n      );\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('修复JSON错误失败:', error);\r\n    Alert.alert(\r\n      '修复错误',\r\n      `尝试修复JSON文件时出错: ${error.message}`\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 检查并复制修复后的文件\r\n * @returns {Promise<boolean>} 是否成功复制\r\n */\r\nconst checkAndCopyFixedFiles = async () => {\r\n  try {\r\n    if (!FileSystem) {\r\n      console.log('FileSystem API不可用');\r\n      return false;\r\n    }\r\n    \r\n    // 获取数据目录\r\n    const dataDir = FileSystem.documentDirectory + 'assets/data/';\r\n    \r\n    // 创建目录（如果不存在）\r\n    await FileSystem.makeDirectoryAsync(dataDir, { intermediates: true }).catch(() => {});\r\n    \r\n    // 检查是否存在已修复的文件\r\n    const fixedFiles = [];\r\n    for (let i = 0; i <= 5; i++) {\r\n      const fixedFileName = `setofquestions${i}_fixed.json`;\r\n      const fixedFilePath = `${dataDir}${fixedFileName}`;\r\n      \r\n      try {\r\n        const info = await FileSystem.getInfoAsync(fixedFilePath);\r\n        if (info.exists) {\r\n          fixedFiles.push({\r\n            setNumber: i,\r\n            path: fixedFilePath\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(`检查修复文件 ${fixedFileName} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    console.log(`找到 ${fixedFiles.length} 个修复后的文件`);\r\n    \r\n    // 如果没有找到任何修复后的文件，返回失败\r\n    if (fixedFiles.length === 0) {\r\n      return false;\r\n    }\r\n    \r\n    // 复制修复后的文件\r\n    for (const file of fixedFiles) {\r\n      const originalFilePath = `${dataDir}setofquestions${file.setNumber}.json`;\r\n      \r\n      // 备份原始文件\r\n      const backupPath = `${dataDir}setofquestions${file.setNumber}_backup.json`;\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: originalFilePath,\r\n          to: backupPath\r\n        });\r\n        console.log(`已备份原始文件: ${originalFilePath} -> ${backupPath}`);\r\n      } catch (e) {\r\n        console.log(`备份文件 ${originalFilePath} 时出错:`, e);\r\n      }\r\n      \r\n      // 复制修复后的文件到原始位置\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: file.path,\r\n          to: originalFilePath\r\n        });\r\n        console.log(`已复制修复文件: ${file.path} -> ${originalFilePath}`);\r\n      } catch (e) {\r\n        console.error(`复制修复文件到 ${originalFilePath} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('检查和复制修复文件时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 运行所有修复函数\r\n * @returns {Promise<boolean>} 是否所有修复都成功\r\n */\r\nexport const runAllFixes = async () => {\r\n  try {\r\n    console.log('开始运行所有修复...');\r\n    \r\n    // 修复JSON错误\r\n    const jsonFixResult = await fixJsonErrors();\r\n    console.log('JSON修复结果:', jsonFixResult);\r\n    \r\n    // 这里可以添加更多修复函数\r\n    // ...\r\n    \r\n    return jsonFixResult;\r\n  } catch (error) {\r\n    console.error('执行修复时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  fixJsonErrors,\r\n  runAllFixes\r\n}; ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Linking, SafeAreaView, ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View } from 'react-native';\r\nimport { clearExamHistory, clearMistakes, clearStudyProgress, resetDatabase } from '../utils/database';\r\nimport { fixAllIssues } from '../utils/fixFavorites';\r\nimport { runAllFixes } from '../utils/fixJson';\r\n\r\n// 应用信息\r\nconst APP_INFO = {\r\n  version: '1.0.0',\r\n  author: '驾考团队',\r\n  copyright: '© 2025 捷克驾考宝典',\r\n  website: 'https://driving.example.com'\r\n};\r\n\r\n// 支持的语言\r\nconst LANGUAGES = [\r\n  { code: 'zh', name: '中文', flag: '🇨🇳' },\r\n  { code: 'en', name: 'English', flag: '🇬🇧' },\r\n  { code: 'cs', name: 'Čeština', flag: '🇨🇿' },\r\n  { code: 'es', name: 'Español', flag: '🇪🇸' },\r\n];\r\n\r\nconst SettingsScreen = ({ navigation }) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language);\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 加载用户语言设置\r\n    const loadLanguageSettings = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('user-language');\r\n        if (savedLanguage) {\r\n          setSelectedLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language settings:', error);\r\n      }\r\n    };\r\n\r\n    loadLanguageSettings();\r\n  }, []);\r\n\r\n  // 加载设置\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        const notificationsValue = await AsyncStorage.getItem('notificationsEnabled');\r\n        setNotificationsEnabled(notificationsValue === 'true');\r\n        \r\n        const darkModeValue = await AsyncStorage.getItem('darkModeEnabled');\r\n        setDarkModeEnabled(darkModeValue === 'true');\r\n      } catch (error) {\r\n        console.error('Failed to load settings', error);\r\n      }\r\n    };\r\n    \r\n    loadSettings();\r\n  }, []);\r\n\r\n  // 更改语言\r\n  const changeLanguage = async (langCode) => {\r\n    try {\r\n      await AsyncStorage.setItem('user-language', langCode);\r\n      i18n.changeLanguage(langCode);\r\n      setSelectedLanguage(langCode);\r\n      \r\n      // 提示用户需要重启应用\r\n      Alert.alert(\r\n        '语言已更改',\r\n        '请重启应用以完成语言切换',\r\n        [{ text: '确定', style: 'default' }]\r\n      );\r\n    } catch (error) {\r\n      console.error('Error saving language setting:', error);\r\n    }\r\n  };\r\n\r\n  // 切换通知\r\n  const toggleNotifications = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('notificationsEnabled', value.toString());\r\n      setNotificationsEnabled(value);\r\n      \r\n      if (value) {\r\n        Alert.alert('通知已启用', '你将会收到每日学习提醒');\r\n      } else {\r\n        Alert.alert('通知已禁用', '你将不会收到学习提醒');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save notification setting', error);\r\n    }\r\n  };\r\n  \r\n  // 切换暗黑模式\r\n  const toggleDarkMode = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('darkModeEnabled', value.toString());\r\n      setDarkModeEnabled(value);\r\n      \r\n      Alert.alert(\r\n        value ? '暗黑模式已启用' : '暗黑模式已禁用',\r\n        value ? '界面将切换为暗色主题，重启应用后生效' : '界面将切换为亮色主题，重启应用后生效'\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to save dark mode setting', error);\r\n    }\r\n  };\r\n\r\n  // 清除收藏数据\r\n  const clearFavorites = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      Alert.alert('收藏已清空', '所有收藏记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear favorites:', error);\r\n      Alert.alert('操作失败', '清空收藏记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除错题记录\r\n  const clearMistakeRecords = async () => {\r\n    try {\r\n      await clearMistakes();\r\n      Alert.alert('错题已清空', '所有错题记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes:', error);\r\n      Alert.alert('操作失败', '清空错题记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除考试历史\r\n  const clearExamRecords = async () => {\r\n    try {\r\n      await clearExamHistory();\r\n      await clearStudyProgress();\r\n      Alert.alert('考试记录已清空', '所有考试历史和学习进度已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history:', error);\r\n      Alert.alert('操作失败', '清空考试记录失败，请稍后重试');\r\n    }\r\n  };\r\n\r\n  // 重置所有数据\r\n  const handleResetData = () => {\r\n    Alert.alert(\r\n      t('settings.resetData'),\r\n      t('settings.resetConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              // 重置所有数据库\r\n              await resetDatabase();\r\n              // 清空学习进度和考试记录\r\n              await clearStudyProgress();\r\n              await clearExamHistory();\r\n              \r\n              Alert.alert(t('common.success'), '应用数据已重置，重启应用后生效');\r\n            } catch (error) {\r\n              console.error('Error resetting data:', error);\r\n              Alert.alert(t('common.error'), error.message);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 显示应用信息\r\n  const showAppInfo = () => {\r\n    Alert.alert(\r\n      '应用信息',\r\n      `捷克驾考宝典\\n版本: ${APP_INFO.version}\\n${APP_INFO.copyright}\\n\\n这是一款帮助用户备考捷克驾照考试的应用。提供模拟考试、题库浏览、错题收集等功能。`,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n  };\r\n  \r\n  // 前往评分\r\n  const goToRating = () => {\r\n    Alert.alert(\r\n      '评分应用',\r\n      '感谢您的使用！您的评分和反馈是我们改进的动力。',\r\n      [\r\n        { text: '稍后再说', style: 'cancel' },\r\n        { text: '去评分', onPress: () => {\r\n          // 这里应替换为实际应用商店链接\r\n          Linking.openURL('https://play.google.com/store');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 查看隐私政策\r\n  const viewPrivacyPolicy = () => {\r\n    Alert.alert(\r\n      '隐私政策',\r\n      '我们重视用户隐私。应用收集的所有数据仅用于提升使用体验，不会与第三方共享。详见完整隐私政策。',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { text: '查看完整政策', onPress: () => {\r\n          // 这里替换为实际政策网址\r\n          Linking.openURL('https://example.com/privacy');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 添加修复应用功能\r\n  const handleFixApp = () => {\r\n    Alert.alert(\r\n      '应用修复',\r\n      '此功能将尝试修复应用中的已知问题，包括收藏、错题和JSON数据等。是否继续？',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        {\r\n          text: '确定',\r\n          style: 'default',\r\n          onPress: async () => {\r\n            try {\r\n              // 运行全部修复\r\n              await Promise.all([\r\n                fixAllIssues(), // 修复收藏和错题\r\n                runAllFixes()   // 修复JSON错误\r\n              ]);\r\n              \r\n              // 通知用户\r\n              Alert.alert('修复完成', '应用已完成所有可能的修复，建议重启应用以确保所有更改生效。');\r\n            } catch (error) {\r\n              console.error('修复应用时出错:', error);\r\n              Alert.alert('修复失败', `修复过程中出现错误: ${error.message}`);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 渲染语言选项\r\n  const renderLanguageOption = (language) => {\r\n    const isSelected = selectedLanguage === language.code;\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={language.code} \r\n        style={[styles.settingOption, isSelected && styles.selectedOption]}\r\n        onPress={() => changeLanguage(language.code)}\r\n      >\r\n        <View style={styles.languageInfo}>\r\n          <Text style={styles.languageFlag}>{language.flag}</Text>\r\n          <Text style={styles.languageName}>{language.name}</Text>\r\n        </View>\r\n        {isSelected && <Ionicons name=\"checkmark-circle\" size={24} color=\"#2196F3\" />}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('settings.title')}</Text>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>{t('settings.language')}</Text>\r\n          <View style={styles.sectionContent}>\r\n            {LANGUAGES.map(language => renderLanguageOption(language))}\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>应用设置</Text>\r\n          <View style={styles.sectionContent}>\r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"notifications-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>每日提醒</Text>\r\n                  <Text style={styles.settingDescription}>接收每日学习提醒</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={notificationsEnabled}\r\n                onValueChange={toggleNotifications}\r\n                trackColor={{ false: '#d9d9d9', true: '#4CAF50' }}\r\n                thumbColor={notificationsEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n            \r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"moon-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>暗黑模式</Text>\r\n                  <Text style={styles.settingDescription}>使用夜间模式保护眼睛</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={darkModeEnabled}\r\n                onValueChange={toggleDarkMode}\r\n                trackColor={{ false: '#d9d9d9', true: '#0066cc' }}\r\n                thumbColor={darkModeEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>关于</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"information-circle-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>应用信息</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"star-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>评分应用</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"lock-closed-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>隐私政策</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <View style={styles.versionInfo}>\r\n              <Text style={styles.versionText}>捷克驾考宝典 v1.0.0</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>开发者选项</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem} onPress={handleFixApp}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"construct-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>修复应用问题</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.dangerSection}>\r\n          <TouchableOpacity style={styles.dangerButton} onPress={handleResetData}>\r\n            <Text style={styles.dangerButtonText}>{t('settings.resetData')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 32,\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  section: {\r\n    backgroundColor: '#fff',\r\n    marginTop: 20,\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f0f0f0',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    margin: 16,\r\n  },\r\n  sectionContent: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  settingOption: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#E3F2FD',\r\n  },\r\n  optionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  infoLabel: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoValue: {\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  dangerSection: {\r\n    padding: 16,\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  dangerButton: {\r\n    backgroundColor: '#F44336',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  dangerButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  languageInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  languageFlag: {\r\n    fontSize: 22,\r\n    marginRight: 15,\r\n  },\r\n  languageName: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  settingInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  settingIcon: {\r\n    marginRight: 15,\r\n  },\r\n  settingTitle: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingDescription: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    marginTop: 3,\r\n  },\r\n  versionInfo: {\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  versionText: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n  }\r\n});\r\n\r\nexport default SettingsScreen; ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport { BarChart, LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40;\r\n\r\nexport const AccuracyLineChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 检查数据并确保至少有一个有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.accuracy === 'number'\r\n  );\r\n  \r\n  // 如果没有足够数据，显示提示信息\r\n  if (validProgress.length < 1) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.notEnoughData')}</Text>\r\n        <Text style={styles.noDataSubtext}>至少需要2次考试记录才能显示趋势图</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近7条记录\r\n  const recentProgress = validProgress.slice(0, 7).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保accuracy值有效\r\n  const accuracyData = recentProgress.map(record => {\r\n    // 处理无效值的情况\r\n    if (record.accuracy === undefined || record.accuracy === null || isNaN(record.accuracy)) {\r\n      return 0;\r\n    }\r\n    return Math.round(record.accuracy * 100);\r\n  });\r\n  \r\n  // 如果只有一条记录，复制一份以便显示图表\r\n  if (accuracyData.length === 1) {\r\n    labels.push('#2');\r\n    accuracyData.push(accuracyData[0]);\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: accuracyData,  // 已经确保是有效数字\r\n        color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n        strokeWidth: 2\r\n      }\r\n    ],\r\n    legend: [t('progress.accuracy')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    propsForDots: {\r\n      r: '6',\r\n      strokeWidth: '2',\r\n      stroke: '#0066cc'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.accuracyTrend')}</Text>\r\n      <LineChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        bezier\r\n        style={styles.chart}\r\n        yAxisSuffix=\"%\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const QuestionCountBarChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 过滤有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.questionsAnswered === 'number'\r\n  );\r\n  \r\n  // 如果没有数据，显示占位符\r\n  if (validProgress.length === 0) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.noData')}</Text>\r\n        <Text style={styles.noDataSubtext}>完成考试后会显示题目统计</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近5条记录\r\n  const recentProgress = validProgress.slice(0, 5).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保数据有效\r\n  const questionCounts = recentProgress.map(record => {\r\n    const count = record.questionsAnswered;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n  \r\n  const correctCounts = recentProgress.map(record => {\r\n    const count = record.correctCount;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: questionCounts,\r\n        color: (opacity = 1) => `rgba(31, 97, 141, ${opacity})`,\r\n      },\r\n      {\r\n        data: correctCounts,\r\n        color: (opacity = 1) => `rgba(46, 204, 113, ${opacity})`,\r\n      }\r\n    ],\r\n    legend: [t('progress.totalQuestions'), t('progress.correct')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    barPercentage: 0.7\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.questionStats')}</Text>\r\n      <BarChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        style={styles.chart}\r\n        fromZero\r\n        showValuesOnTopOfBars\r\n        withInnerLines={false}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  chartContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 10\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  noDataContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n    height: 220,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  noDataText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  noDataSubtext: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    ActivityIndicator,\r\n    Alert,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { AccuracyLineChart, QuestionCountBarChart } from '../components/ProgressChart';\r\nimport { clearExamHistory, clearStudyProgress, getStudyProgressStats } from '../utils/database';\r\n\r\nexport default function StudyProgressScreen({ navigation }) {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    totalCorrect: 0,\r\n    averageAccuracy: 0,\r\n    progressHistory: []\r\n  });\r\n\r\n  // 加载学习进度数据\r\n  useEffect(() => {\r\n    loadProgressData();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadProgressData);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 加载进度数据\r\n  const loadProgressData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const progressStats = await getStudyProgressStats();\r\n      console.log('Loaded progress stats:', progressStats);\r\n      setStats(progressStats);\r\n    } catch (error) {\r\n      console.error('Failed to load progress data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除学习记录和考试历史\r\n  const handleClearProgress = () => {\r\n    Alert.alert(\r\n      t('settings.resetConfirm'),\r\n      t('progress.clearProgressConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              // 清空学习进度\r\n              await clearStudyProgress();\r\n              // 清空考试历史\r\n              await clearExamHistory();\r\n              // 重新加载数据\r\n              await loadProgressData();\r\n              Alert.alert(t('common.success'), t('progress.clearProgressSuccess'));\r\n            } catch (error) {\r\n              console.error('Failed to clear progress:', error);\r\n              Alert.alert(t('common.error'), t('progress.clearProgressError'));\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 格式化日期\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n  };\r\n\r\n  // 格式化正确率显示\r\n  const formatAccuracy = (accuracy) => {\r\n    if (accuracy === undefined || accuracy === null || isNaN(accuracy)) {\r\n      return '0%';\r\n    }\r\n    return `${Math.round(accuracy * 100)}%`;\r\n  };\r\n\r\n  // 渲染进度历史记录\r\n  const renderProgressHistory = () => {\r\n    if (stats.progressHistory.length === 0) {\r\n      return (\r\n        <View style={styles.emptyState}>\r\n          <Ionicons name=\"bar-chart-outline\" size={60} color=\"#ccc\" />\r\n          <Text style={styles.emptyStateText}>{t('progress.noHistory')}</Text>\r\n          <Text style={styles.emptyStateSubtext}>{t('progress.startExam')}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.historyContainer}>\r\n        {stats.progressHistory.map((item, index) => {\r\n          // 确保正确率值有效\r\n          const accuracy = item.accuracy !== undefined && !isNaN(item.accuracy) \r\n            ? item.accuracy \r\n            : 0;\r\n            \r\n          return (\r\n            <View key={item.id || index} style={styles.historyItem}>\r\n              <View style={styles.historyHeader}>\r\n                <Text style={styles.historyDate}>{formatDate(item.date)}</Text>\r\n                <View style={[\r\n                  styles.examTypeBadge,\r\n                  { backgroundColor: getExamTypeColor(item.examType) }\r\n                ]}>\r\n                  <Text style={styles.examTypeText}>{getExamTypeLabel(item.examType)}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.historyStats}>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.questionsAnswered || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.questions')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.correctCount || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.correct')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{formatAccuracy(accuracy)}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.accuracy')}</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // 获取考试类型颜色\r\n  const getExamTypeColor = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return '#4CAF50';\r\n      case 'practice':\r\n        return '#2196F3';\r\n      case 'quick':\r\n        return '#FF9800';\r\n      case 'custom':\r\n        return '#9C27B0';\r\n      default:\r\n        return '#757575';\r\n    }\r\n  };\r\n\r\n  // 获取考试类型标签\r\n  const getExamTypeLabel = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return t('exam.fullExam');\r\n      case 'practice':\r\n        return t('exam.practiceMode');\r\n      case 'quick':\r\n        return t('exam.quickTest');\r\n      case 'custom':\r\n        return t('exam.customExam');\r\n      default:\r\n        return t('exam.exam');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('progress.title')}</Text>\r\n        </View>\r\n\r\n        <View style={styles.statsOverviewContainer}>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"school-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalExams')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"help-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalQuestions')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{formatAccuracy(stats.averageAccuracy)}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.averageAccuracy')}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* 准确率趋势图 */}\r\n        {stats.progressHistory.length > 0 && (\r\n          <View style={styles.chartsContainer}>\r\n            <AccuracyLineChart progressHistory={stats.progressHistory} />\r\n            <QuestionCountBarChart progressHistory={stats.progressHistory} />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.sectionContainer}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>{t('progress.recentActivity')}</Text>\r\n            {stats.progressHistory.length > 0 && (\r\n              <TouchableOpacity onPress={handleClearProgress}>\r\n                <Text style={styles.clearButton}>{t('progress.clearHistory')}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          {renderProgressHistory()}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  statsOverviewContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 15,\r\n    marginBottom: 20,\r\n  },\r\n  statCard: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statValue: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginVertical: 5,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  chartsContainer: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 15,\r\n  },\r\n  sectionContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  clearButton: {\r\n    color: '#F44336',\r\n    fontSize: 14,\r\n  },\r\n  emptyState: {\r\n    alignItems: 'center',\r\n    padding: 30,\r\n  },\r\n  emptyStateText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyStateSubtext: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n  },\r\n  historyContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  historyItem: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n    paddingVertical: 12,\r\n  },\r\n  historyHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  historyDate: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  examTypeBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 3,\r\n    borderRadius: 12,\r\n  },\r\n  examTypeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  historyStats: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  historyStat: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  historyStatValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  historyStatLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Text, View } from 'react-native';\r\nimport initI18n from '../i18n/i18n';\r\n\r\n// 导入屏幕\r\nimport BrowseScreen from '../screens/BrowseScreen';\r\nimport ExamScreen from '../screens/ExamScreen';\r\nimport FavoritesScreen from '../screens/FavoritesScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport MistakesScreen from '../screens/MistakesScreen';\r\nimport QuestionDetailScreen from '../screens/QuestionDetailScreen';\r\nimport ResultScreen from '../screens/ResultScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport StudyProgressScreen from '../screens/StudyProgressScreen';\r\n\r\n// 创建导航器\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\n// 主标签导航\r\nfunction MainTabNavigator() {\r\n  const { t } = useTranslation();\r\n  \r\n  // 配置屏幕选项的函数，避免依赖问题\r\n  const getScreenOptions = () => {\r\n    return ({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        let iconName;\r\n\r\n        if (route.name === 'Home') {\r\n          iconName = focused ? 'home' : 'home-outline';\r\n        } else if (route.name === 'Browse') {\r\n          iconName = focused ? 'list' : 'list-outline';\r\n        } else if (route.name === 'Exam') {\r\n          iconName = focused ? 'school' : 'school-outline';\r\n        } else if (route.name === 'Favorites') {\r\n          iconName = focused ? 'heart' : 'heart-outline';\r\n        } else if (route.name === 'Mistakes') {\r\n          iconName = focused ? 'close-circle' : 'close-circle-outline';\r\n        } else if (route.name === 'Settings') {\r\n          iconName = focused ? 'settings' : 'settings-outline';\r\n        }\r\n\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n      tabBarActiveTintColor: '#0066cc',\r\n      tabBarInactiveTintColor: 'gray',\r\n      headerShown: false\r\n    });\r\n  };\r\n  \r\n  // 获取屏幕标签文本的函数\r\n  const getTabLabel = (key) => {\r\n    return t(`navigation.${key.toLowerCase()}`);\r\n  };\r\n  \r\n  return (\r\n    <Tab.Navigator \r\n      screenOptions={getScreenOptions()}\r\n      style={{ pointerEvents: 'auto' }}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Home\" \r\n        component={HomeScreen} \r\n        options={{ tabBarLabel: getTabLabel('home') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Browse\" \r\n        component={BrowseScreen} \r\n        options={{ tabBarLabel: getTabLabel('browse') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Exam\" \r\n        component={ExamScreen} \r\n        options={{ tabBarLabel: getTabLabel('exam') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Favorites\" \r\n        component={FavoritesScreen} \r\n        options={{ tabBarLabel: getTabLabel('favorites') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Mistakes\" \r\n        component={MistakesScreen} \r\n        options={{ tabBarLabel: getTabLabel('mistakes') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreen} \r\n        options={{ tabBarLabel: getTabLabel('settings') }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// 应用导航器\r\nexport default function AppNavigator() {\r\n  const [isI18nInitialized, setIsI18nInitialized] = useState(false);\r\n  \r\n  // 初始化i18n\r\n  useEffect(() => {\r\n    const setupI18n = async () => {\r\n      try {\r\n        await initI18n();\r\n        setIsI18nInitialized(true);\r\n      } catch (error) {\r\n        console.error('Failed to initialize i18n:', error);\r\n      }\r\n    };\r\n    \r\n    setupI18n();\r\n  }, []);\r\n  \r\n  // 显示加载状态\r\n  if (!isI18nInitialized) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={{ marginTop: 20, fontSize: 16, color: '#666' }}>加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return <RootNavigator />;\r\n}\r\n\r\n// 将根导航器拆分为单独的组件\r\nfunction RootNavigator() {\r\n  const { t } = useTranslation();\r\n  \r\n  // 获取屏幕标题的函数\r\n  const getScreenTitle = (key) => {\r\n    return t(`navigation.${key}`);\r\n  };\r\n  \r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n        headerTintColor: '#0066cc',\r\n      }}\r\n    >\r\n      <Stack.Screen \r\n        name=\"Main\" \r\n        component={MainTabNavigator} \r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"QuestionDetail\" \r\n        component={QuestionDetailScreen} \r\n        options={{ title: getScreenTitle('question_detail') }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"ExamResult\" \r\n        component={ResultScreen} \r\n        options={{ \r\n          title: getScreenTitle('exam_result'),\r\n          headerBackVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"StudyProgress\" \r\n        component={StudyProgressScreen} \r\n        options={{ title: getScreenTitle('study_progress') }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n} ","import { NavigationContainer } from '@react-navigation/native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, StatusBar, StyleSheet, Text, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n// 导入本地组件\r\nimport initI18n, { isI18nInitialized } from './src/i18n/i18n';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { initDatabase } from './src/utils/database';\r\n\r\n// 保持启动画面可见直到我们准备好渲染\r\nSplashScreen.preventAutoHideAsync().catch(() => {});\r\n\r\nexport default function App() {\r\n  // 状态管理\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n  const [initError, setInitError] = useState(null);\r\n\r\n  // 初始化应用\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        console.log('App initializing...');\r\n        \r\n        // 初始化国际化\r\n        if (!isI18nInitialized()) {\r\n          await initI18n();\r\n          console.log('i18n initialized');\r\n        }\r\n        \r\n        // 初始化数据库\r\n        await initDatabase();\r\n        console.log('Database initialized');\r\n        \r\n        // 预加载其他任何资源或数据...\r\n      } catch (error) {\r\n        console.error('Error during app initialization:', error);\r\n        setInitError(error);\r\n      } finally {\r\n        setAppIsReady(true);\r\n        await SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  // 渲染发生错误的界面\r\n  if (initError) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.errorText}>应用初始化失败</Text>\r\n        <Text style={styles.errorDetails}>{initError.message}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染加载界面\r\n  if (!appIsReady) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>应用加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染主应用\r\n  return (\r\n    <SafeAreaProvider>\r\n      <NavigationContainer>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n        <AppNavigator />\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f8f9fa',\r\n    padding: 20,\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  errorText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#e74c3c',\r\n    marginBottom: 12,\r\n  },\r\n  errorDetails: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"232\":\"d40c0fe6\",\"643\":\"3f550647\",\"757\":\"f69d2cda\",\"778\":\"58e65c94\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/cz-driver/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [34], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["navigation","home","browse","exam","favorites","mistakes","settings","question_detail","exam_result","title","subtitle","startExam","examDescription","browseTopic","browseDescription","reviewMistakes","mistakesDescription","favoritesDescription","studyStats","examsTaken","questionsAnswered","accuracy","allQuestions","search","categories","traffic_signs","traffic_rules","priority","parking","speed_limits","highway","penalties","general","noQuestionsFound","start","description","timeLimit","questionCount","timeRemaining","submit","next","previous","finishExam","chooseMode","customExam","cancel","examPreparation","examInfo","question","selectAnswer","checkAnswer","correct","incorrect","explanation","nextQuestion","loading","result","passed","failed","score","requiredToPass","reviewIncorrect","retakeExam","backToHome","examDetails","yourAnswer","correctAnswer","viewExplanation","timeSpent","correctCount","incorrectCount","noFavorites","browseToAdd","browseCatalog","removeFavorite","addFavorite","edit","delete","selectAll","deselectAll","favoritesCount","viewDetails","noMistakes","practiceToContinue","startPractice","mistakesCount","sortNewest","sortOldest","clearAll","clearConfirm","language","about","version","resetData","resetConfirm","resetSuccess","languages","en","zh","cs","es","appSettings","dailyReminder","reminderDescription","darkMode","darkModeDescription","appInfo","rateApp","privacyPolicy","appVersion","common","error","confirm","save","done","yes","no","study_progress","examInfoLine1","examInfoLine2","examInfoLine3","examInfoLine4","fullExam","practiceMode","quickTest","progress","totalExams","totalQuestions","averageAccuracy","recentActivity","noHistory","clearHistory","clearProgressConfirm","clearProgressSuccess","clearProgressError","questions","accuracyTrend","questionStats","notEnoughData","noData","success","isInitialized","initI18n","_ref","_asyncToGenerator","userLanguage","storedLanguage","AsyncStorage","getItem","console","i18n","initReactI18next","init","resources","translation","lng","fallbackLng","interpolation","escapeValue","compatibilityJSON","log","apply","arguments","isI18nInitialized","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","marginVertical","paddingHorizontal","backgroundColor","borderRadius","alignSelf","languageButton","paddingVertical","marginHorizontal","activeLanguageButton","languageText","fontSize","color","activeLanguageText","fontWeight","currentLanguage","onChangeLanguage","useTranslation","t","_jsx","View","style","children","code","name","icon","map","lang","TouchableOpacity","onPress","Text","trafficSignalImages","require","imageAssets","image2Assets","getQuestionTranslation","length","undefined","Error","translations","answers","Array","isArray","_objectSpread","ans","text","warn","id","message","hasError","loadQuestionSet","setNumber","questionSet","default","translatedQuestion","options","idx","String","fromCharCode","isCorrect","picture","signalMatch","match","signalId","parseInt","signalImage","includes","imageMatch","imageNumber","fileName","split","pop","Math","random","toString","substr","category","loadAllQuestionSets","_ref2","sets","errors","set","push","_toConsumableArray","e","join","backupQuestions","backupError","getQuestionsByCategory","_ref3","filter","q","_x","getAllCategories","_ref4","from","Set","getTrafficSignalImage","getChineseCategoryName","createShadow","_ref$offset","offset","width","height","_ref$opacity","opacity","_ref$radius","radius","_ref$elevation","elevation","boxShadow","getImageProps","imageStyle","resizeMode","tintColor","imageProps","_objectWithoutProperties","_excluded","_Dimensions$get","Dimensions","get","responsiveWidth","percentage","responsiveHeight","responsiveFontSize","size","scaleFactor","min","round","flex","loadingContainer","loadingText","marginTop","header","padding","borderBottomWidth","borderBottomColor","searchContainer","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","searchIcon","marginRight","searchInput","clearButton","sectionTitle","marginLeft","marginBottom","categoriesContainer","paddingTop","paddingBottom","categoriesList","categoryButton","categoryButtonActive","categoryButtonText","categoryButtonTextActive","resultsContainer","resultCount","questionsList","questionCard","questionHeader","categoryBadge","categoryLabel","questionId","questionText","lineHeight","imageContainer","questionImage","cardFooter","borderTopWidth","borderTopColor","iconButton","footerRight","viewButton","viewButtonText","emptyContainer","emptyText","textAlign","resetButton","resetButtonText","errorContainer","errorTitle","errorMessage","retryButton","retryButtonText","idContainer","_useTranslation","useNavigation","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setQuestions","_useState5","_useState6","setCategories","_useState7","_useState8","selectedCategory","setSelectedCategory","_useState9","_useState0","searchQuery","setSearchQuery","_useState1","_useState10","setCurrentLanguage","_useState11","_useState12","setError","fetchData","assetDataService","allCategories","formattedCategories","concat","cat","categoryError","handleLanguageChange","changeLanguage","useEffect","handleQuestionPress","Alert","alert","navigate","_jsxs","ActivityIndicator","Ionicons","filteredQuestions","filtered","query","toLowerCase","getFilteredQuestions","SafeAreaView","StatusBar","barStyle","QuestionLanguageSwitcher","TextInput","placeholder","value","onChangeText","placeholderTextColor","FlatList","horizontal","data","renderItem","item","keyExtractor","showsHorizontalScrollIndicator","contentContainerStyle","activeOpacity","Image","source","_item$id","showsVerticalScrollIndicator","ListEmptyComponent","imageUrl","difficulty","isWeb","Platform","OS","getDatabase","SQLite","initDatabase","setItem","JSON","stringify","db","transaction","tx","executeSql","checkAndInsertInitialData","_","rows","_array","count","insertMockData","forEach","getAllQuestions","Promise","resolve","reject","parse","storedQuestions","addToFavorites","_ref5","params","_ref6","_ref7","sort","slice","_ref8","_ref9","find","_ref0","isFavorite","isQuestionFavorited","index","_ref1","now","Date","_ref10","storedFavorites","findIndex","f","_f$questionId","_f$id","dateAdded","timestamp","_x4","removeFromFavorites","_ref11","updatedFavorites","_f$questionId2","_f$id2","fId","qId","_x5","_ref12","_ref13","found","some","_f$questionId3","_f$id3","_x6","getFavoriteQuestions","_ref14","_ref15","favoriteQuestions","_loop","favorite","recordMistake","_ref16","userAnswer","toISOString","mistakeId","_ref17","storedMistakes","existingIndex","m","attempts","lastAttempt","_x7","_x8","getMistakes","_ref18","_ref19","mistakesData","removeMistake","_ref20","_ref21","rowsAffected","updatedMistakes","_m$questionId","mId","_x9","clearMistakes","_ref22","_ref23","innerTx","_ref24","afterClear","afterMistakes","resetDatabase","_ref25","recordStudyProgress","_ref26","examType","_data$date","date","progressData","_x0","getStudyProgressStats","_ref27","_ref28","stats","totalCorrect","_ref29","progressHistory","examResultsData","examResults","reduce","sum","clearStudyProgress","_ref30","updateStudyProgress","correctAnswers","_ref33","studyProgress","storedProgress","todayIndex","_x11","_x12","insertResult","clearExamHistory","_ref34","_ref35","_ref36","storedResults","isSmallDevice","isMediumDevice","baseFactor","EXAM_CONFIG","prepContainer","examInfoCard","select","ios","android","web","examTitle","examRules","ruleTitle","ruleItem","ruleText","startButton","startButtonText","questionContainer","currentHeight","questionNumber","timerContainer","timerText","optionsContainer","optionButton","selectedOption","borderColor","borderWidth","correctOption","incorrectOption","optionLetter","optionText","resultIcon","navigationContainer","navButton","disabledButton","navButtonText","disabledButtonText","submitButton","submitButtonText","progressContainer","progressList","progressItem","activeProgressItem","answeredProgressItem","progressItemText","activeProgressItemText","answeredProgressItemText","resultsScrollView","resultsContent","resultHeader","overflow","resultBanner","resultText","scoreCircle","scoreValue","resultStats","statsRow","statItem","statValue","statLabel","resultMessage","messageText","resultActions","flexWrap","actionButton","minWidth","actionButtonWide","actionButtonText","questionScrollView","bottomPadding","errorText","mistakesInfoCard","mistakesInfoHeader","mistakesInfoTitle","mistakesInfoText","primaryButton","examFinishedBanner","examFinishedText","examStarted","setExamStarted","examFinished","setExamFinished","currentIndex","setCurrentIndex","setAnswers","remainingTime","setRemainingTime","_useState13","_useState14","results","setResults","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","timerRef","useRef","loadQuestions","categoryItems","current","clearInterval","updatedQuestions","formattedQuestions","examId","setInterval","prev","answeredQuestions","Object","keys","questionResults","mistakesToRecord","opt","mistakePromises","mistake","catch","all","isPassed","examResult","unansweredQuestions","_ref31","newExamResult","insertId","_x1","_x10","detailsJson","saveExamResult","goToHome","examCompleted","viewMistakes","restartExam","formatTime","seconds","secs","floor","padStart","renderCategoryItem","ScrollView","option","optionId","newAnswers","_defineProperty","disabled","renderCurrentQuestion","LinearGradient","colors","renderExamResults","headerButtons","headerButton","headerButtonText","deleteButton","deleteButtonText","listContainer","favoriteItem","selectedItem","checkboxContainer","favoriteContent","favoriteHeader","favoriteCategory","favoriteDate","favoriteQuestion","favoriteActions","setFavorites","isEditing","setIsEditing","selectedItems","setSelectedItems","loadFavorites","processedData","addListener","toggleEditMode","toggleSelectItem","itemId","deleteSelected","_Fragment","dateString","toLocaleDateString","onLongPress","HomeScreen","setStats","setFavoritesCount","setMistakesCount","features","screen","badge","isMounted","loadStats","progressStats","loadFavoritesCount","loadMistakesCount","unsubscribe","_route$params","route","getState","routes","r","setTimeout","setParams","checkExamResults","getFeatureTitle","scrollContent","headerGradient","headerImage","featuresContainer","featuresGrid","feature","featureCard","featureIconContainer","badgeContainer","badgeText","featureTitle","cardSection","statsCard","statsContent","statDivider","isNaN","statsFooter","viewMoreText","infoCard","infoHeader","infoTitle","infoText","borderBottomLeftRadius","borderBottomRightRadius","position","top","right","minHeight","clearButtonText","mistakesList","mistakeItem","mistakeHeader","categoryText","mistakeDate","mistakeQuestion","answerContainer","answerRow","answerBadge","wrongBadge","correctBadge","answerBadgeText","answerText","mistakeActions","emptySubText","startExamButton","startExamText","setMistakes","setAllQuestions","loadMistakes","mistakeRecords","mistakesWithDetails","questionDetail","chineseCategory","a","b","processMistakes","_onPress2","userAnswerIndex","charCodeAt","userAnswerText","correctAnswerIndex","correctAnswerText","_onPress","headerTop","backBtn","headerInfo","questionIdText","favoriteButton","languageSwitcherContainer","backButton","backButtonText","optionIcon","selectedOptionText","correctOptionText","incorrectOptionText","resultContainer","correctBanner","incorrectBanner","explanationContainer","explanationHeader","explanationTitle","explanationText","buttonContainer","button","buttonDisabled","nextButton","buttonText","setQuestion","setSelectedOption","showAnswer","setShowAnswer","setIsFavorite","isAnswerCorrect","setIsAnswerCorrect","loadQuestion","assetQuestion","formattedQuestion","favoriteStatus","toggleFavorite","renderOption","isSelected","optionStyle","textStyle","iconName","iconColor","goBack","ResultScreen","setIsPassed","setScore","setPercentageScore","calculatedScore","scoreCircleContainer","scoreText","scoreSubtext","statsContainer","questionItem","incorrectBadge","numberOfLines","answerInfo","answerLabel","correctText","incorrectText","scrollEnabled","buttonIcon","secondaryButton","secondaryButtonText","repairFavoritesData","validFavorites","repaired","fav","ensureCleanMistakes","fixAllIssues","favResult","mistakeResult","fixJsonErrors","checkAndCopyFixedFiles","FileSystem","dataDir","documentDirectory","makeDirectoryAsync","intermediates","fixedFiles","i","fixedFileName","fixedFilePath","getInfoAsync","exists","path","file","originalFilePath","backupPath","copyAsync","to","runAllFixes","jsonFixResult","LANGUAGES","flag","scrollContainer","section","sectionContent","settingOption","infoRow","infoLabel","infoValue","dangerSection","dangerButton","dangerButtonText","languageInfo","languageFlag","languageName","settingItem","settingInfo","settingIcon","settingTitle","settingDescription","versionInfo","versionText","selectedLanguage","setSelectedLanguage","notificationsEnabled","setNotificationsEnabled","darkModeEnabled","setDarkModeEnabled","loadLanguageSettings","savedLanguage","loadSettings","notificationsValue","darkModeValue","langCode","toggleNotifications","_x2","toggleDarkMode","_x3","renderLanguageOption","Switch","onValueChange","trackColor","false","true","thumbColor","optionItem","screenWidth","AccuracyLineChart","_ref$progressHistory","validProgress","record","noDataContainer","noDataText","noDataSubtext","recentProgress","reverse","labels","accuracyData","datasets","strokeWidth","legend","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","chartContainer","chartTitle","LineChart","bezier","chart","yAxisSuffix","QuestionCountBarChart","_ref2$progressHistory","barPercentage","BarChart","fromZero","showValuesOnTopOfBars","withInnerLines","StudyProgressScreen","loadProgressData","formatDate","getFullYear","getMonth","getDate","formatAccuracy","getExamTypeColor","getExamTypeLabel","statsOverviewContainer","statCard","chartsContainer","sectionContainer","sectionHeader","emptyState","emptyStateText","emptyStateSubtext","historyContainer","historyItem","historyHeader","historyDate","examTypeBadge","examTypeText","historyStats","historyStat","historyStatValue","historyStatLabel","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","MainTabNavigator","getTabLabel","key","Navigator","screenOptions","tabBarIcon","focused","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","pointerEvents","Screen","component","tabBarLabel","BrowseScreen","ExamScreen","FavoritesScreen","MistakesScreen","SettingsScreen","AppNavigator","setIsI18nInitialized","setupI18n","RootNavigator","getScreenTitle","headerTitleStyle","headerTintColor","QuestionDetailScreen","headerBackVisible","App","appIsReady","setAppIsReady","initError","setInitError","_prepare","SplashScreen","prepare","errorDetails","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","chunkId","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","type","target","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}