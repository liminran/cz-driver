{"version":3,"file":"static/js/main.38833ba4.js","mappings":"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A,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,MACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACd,GAAMA,EAAQ,OACZ,IAAOA,EAAQ,OACjB,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,MACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,MACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,KACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,MACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,MACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,OACf,IAAOA,EAAQ,QAIXE,GAAe,CACnB,aAAcF,EAAQ,OACxB,mBAAoBA,EAAQ,OAC5B,aAAcA,EAAQ,OACtB,mBAAoBA,EAAQ,OAC5B,mBAAoBA,EAAQ,OAC5B,YAAaA,EAAQ,OACrB,gBAAiBA,EAAQ,OACzB,YAAaA,EAAQ,OACrB,YAAaA,EAAQ,OACrB,YAAaA,EAAQ,OACrB,YAAaA,EAAQ,OACrB,wBAAyBA,EAAQ,OACjC,6BAA8BA,EAAQ,OACtC,gBAAiBA,EAAQ,OACzB,yBAA0BA,EAAQ,OAClC,qBAAsBA,EAAQ,OAC9B,sBAAuBA,EAAQ,OAC/B,uBAAwBA,EAAQ,OAChC,iBAAkBA,EAAQ,OAC1B,cAAeA,EAAQ,OACvB,wBAAyBA,EAAQ,OACjC,kBAAmBA,EAAQ,OAC3B,mBAAoBA,EAAQ,OAC5B,kBAAmBA,EAAQ,OAC3B,kBAAmBA,EAAQ,MAC3B,mBAAoBA,EAAQ,OAC5B,mBAAoBA,EAAQ,OAC5B,mBAAoBA,EAAQ,OAC5B,sBAAuBA,EAAQ,OAC/B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,MAC9B,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,KAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,MAC9B,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,MAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,OAC9B,qBAAsBA,EAAQ,KAC9B,qBAAsBA,EAAQ,OAC9B,oBAAqBA,EAAQ,OAC7B,oBAAqBA,EAAQ,OAC7B,oBAAqBA,EAAQ,OAC7B,oBAAqBA,EAAQ,OAC7B,kBAAmBA,EAAQ,MAC3B,kBAAmBA,EAAQ,OAC3B,mBAAoBA,EAAQ,OAC5B,cAAeA,EAAQ,OACvB,aAAcA,EAAQ,OACtB,eAAgBA,EAAQ,OACxB,eAAgBA,EAAQ,MACxB,uBAAwBA,EAAQ,OAChC,kBAAmBA,EAAQ,MAC3B,+BAAgCA,EAAQ,OACxC,wBAAyBA,EAAQ,OACjC,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,OAC9B,iBAAkBA,EAAQ,OAC1B,iBAAkBA,EAAQ,OAC1B,iBAAkBA,EAAQ,OAC1B,oBAAqBA,EAAQ,OAC7B,sBAAuBA,EAAQ,OAC/B,WAAYA,EAAQ,OACpB,2BAA4BA,EAAQ,MACpC,kBAAmBA,EAAQ,OAC3B,kBAAmBA,EAAQ,OAC3B,2BAA4BA,EAAQ,OACpC,oBAAqBA,EAAQ,OAC7B,uBAAwBA,EAAQ,MAChC,YAAaA,EAAQ,OACrB,mBAAoBA,EAAQ,MAC5B,yBAA0BA,EAAQ,OAClC,mBAAoBA,EAAQ,OAC5B,6BAA8BA,EAAQ,OACtC,sBAAuBA,EAAQ,OAC/B,oBAAqBA,EAAQ,OAC7B,qBAAsBA,EAAQ,MAC9B,sBAAuBA,EAAQ,OAC/B,wBAAyBA,EAAQ,OACjC,gBAAiBA,EAAQ,MACzB,sBAAuBA,EAAQ,OAC/B,SAAUA,EAAQ,OAClB,qBAAsBA,EAAQ,OAC9B,sBAAuBA,EAAQ,MAC/B,wBAAyBA,EAAQ,OACjC,2BAA4BA,EAAQ,OACpC,mBAAoBA,EAAQ,OAC5B,oBAAqBA,EAAQ,OAC7B,eAAgBA,EAAQ,OACxB,aAAcA,EAAQ,OACtB,qBAAsBA,EAAQ,MAC9B,eAAgBA,EAAQ,OACxB,gBAAiBA,EAAQ,OACzB,qBAAsBA,EAAQ,OAC9B,wBAAyBA,EAAQ,OACjC,kBAAmBA,EAAQ,OAC3B,mBAAoBA,EAAQ,OAC5B,iBAAkBA,EAAQ,OAC1B,kBAAmBA,EAAQ,OAC3B,gBAAiBA,EAAQ,OACzB,kBAAmBA,EAAQ,OAC3B,uBAAwBA,EAAQ,OAChC,0BAA2BA,EAAQ,OACnC,oBAAqBA,EAAQ,OAC7B,kBAAmBA,EAAQ,OAC3B,oBAAqBA,EAAQ,OAC7B,sBAAuBA,EAAQ,OAC/B,iBAAkBA,EAAQ,KAC1B,kBAAmBA,EAAQ,OAC3B,0BAA2BA,EAAQ,OACnC,wBAAyBA,EAAQ,OACjC,cAAeA,EAAQ,OACvB,qBAAsBA,EAAQ,OAC9B,yBAA0BA,EAAQ,OAClC,aAAcA,EAAQ,OACtB,oBAAqBA,EAAQ,OAC7B,cAAeA,EAAQ,OACvB,cAAeA,EAAQ,OACvB,kBAAmBA,EAAQ,OAC3B,yBAA0BA,EAAQ,OAClC,yBAA0BA,EAAQ,OAClC,uBAAwBA,EAAQ,OAChC,uBAAwBA,EAAQ,OAChC,wBAAyBA,EAAQ,OACjC,sBAAuBA,EAAQ,OAC/B,qBAAsBA,EAAQ,OAC9B,2BAA4BA,EAAQ,OACpC,cAAeA,EAAQ,OACvB,+BAAgCA,EAAQ,OACxC,wBAAyBA,EAAQ,OACjC,gCAAiCA,EAAQ,OACzC,qBAAsBA,EAAQ,OAC9B,yBAA0BA,EAAQ,OAClC,2BAA4BA,EAAQ,OACpC,2BAA4BA,EAAQ,OACpC,uBAAwBA,EAAQ,OAChC,mBAAoBA,EAAQ,OAC5B,cAAeA,EAAQ,OACvB,sBAAuBA,EAAQ,OAC/B,iBAAkBA,EAAQ,OAC1B,kBAAmBA,EAAQ,OAC3B,iBAAkBA,EAAQ,OAC1B,qBAAsBA,EAAQ,OAC9B,gBAAiBA,EAAQ,OACzB,oBAAqBA,EAAQ,OAC7B,sBAAuBA,EAAQ,OAC/B,kBAAmBA,EAAQ,OAC3B,0BAA2BA,EAAQ,OACnC,2BAA4BA,EAAQ,OACpC,6BAA8BA,EAAQ,OACtC,oBAAqBA,EAAQ,OAC7B,kBAAmBA,EAAQ,OAC3B,kBAAmBA,EAAQ,OAC3B,uBAAwBA,EAAQ,OAChC,sBAAuBA,EAAQ,OAC/B,mBAAoBA,EAAQ,OAC5B,gBAAiBA,EAAQ,OACzB,YAAaA,EAAQ,OACrB,qBAAsBA,EAAQ,OAC9B,uBAAwBA,EAAQ,OAChC,qBAAsBA,EAAQ,MAC9B,sBAAuBA,EAAQ,OAC/B,mBAAoBA,EAAQ,OAC5B,iBAAkBA,EAAQ,OAC1B,qBAAsBA,EAAQ,OAC9B,yBAA0BA,EAAQ,OAClC,WAAYA,EAAQ,OACpB,mBAAoBA,EAAQ,OAC5B,sBAAuBA,EAAQ,OAC/B,oBAAqBA,EAAQ,OAC7B,oBAAqBA,EAAQ,OAC7B,eAAgBA,EAAQ,OACxB,uBAAwBA,EAAQ,OAChC,8BAA+BA,EAAQ,OACvC,gBAAiBA,EAAQ,OACzB,aAAcA,EAAQ,OACtB,uBAAwBA,EAAQ,OAChC,oBAAqBA,EAAQ,OAC7B,gBAAiBA,EAAQ,OACzB,mBAAoBA,EAAQ,KAC5B,oBAAqBA,EAAQ,OAC7B,cAAeA,EAAQ,OACvB,sBAAuBA,EAAQ,OAC/B,aAAcA,EAAQ,OACtB,eAAgBA,EAAQ,OACxB,oBAAqBA,EAAQ,OAC7B,gBAAiBA,EAAQ,OACzB,qBAAsBA,EAAQ,OAC9B,oBAAqBA,EAAQ,OAC7B,aAAcA,EAAQ,OACtB,oBAAqBA,EAAQ,OAC7B,6BAA8BA,EAAQ,OACtC,uBAAwBA,EAAQ,OAChC,gBAAiBA,EAAQ,OACzB,kBAAmBA,EAAQ,OAC3B,aAAcA,EAAQ,OACtB,YAAaA,EAAQ,OACrB,oBAAqBA,EAAQ,QASvBG,GAAyB,SAACzO,GAA+B,IAArB0C,EAAQwE,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,KACnD,IACE,IAAKlH,EACH,MAAM,IAAIoK,MAAM,wCAIlB,GAAIpK,EAAS4O,cAAgB5O,EAAS4O,aAAalM,GAAW,CAC5D,IAAMgE,EAAc1G,EAAS4O,aAAalM,GAG1C,IAAKgE,EAAY1G,WAAa0G,EAAYmI,UAAYC,MAAMC,QAAQrI,EAAYmI,SAC9E,MAAM,IAAIzE,MAAM,gBAAM1H,sDAIxB,OAAAsM,GAAAA,GAAA,GACKhP,GAAQ,IACXA,SAAU0G,EAAY1G,SACtB6O,QAASnI,EAAYmI,QAAQb,KAAI,SAAAiB,GAAG,MAAK,CACvCC,KAAMD,EAAIC,KACV/O,QAAS8O,EAAI9O,QACd,KAEL,CAGA,GAAiB,OAAbuC,GAAqB1C,EAAS4O,cAAgB5O,EAAS4O,aAAa1L,GAAI,CAC1EmD,QAAQ8I,KAAK,kCAASzM,kEACtB,IAAMgE,EAAc1G,EAAS4O,aAAa1L,GAE1C,OAAA8L,GAAAA,GAAA,GACKhP,GAAQ,IACXA,SAAU0G,EAAY1G,SACtB6O,QAASnI,EAAYmI,QAAQb,KAAI,SAAAiB,GAAG,MAAK,CACvCC,KAAMD,EAAIC,KACV/O,QAAS8O,EAAI9O,QACd,KAEL,CAGA,MAAM,IAAIiK,MAAM,gBAAMpK,EAAS2J,IAAM,4DACvC,CAAE,MAAO5F,GAGP,OAFAsC,QAAQtC,MAAM,0DAAcA,EAAO/D,GAEnCgP,GAAAA,GAAA,GACKhP,GAAQ,IACXA,SAAU,8BAAU+D,EAAMqL,UAC1BP,QAAS7O,EAAS6O,SAAW,GAC7BQ,UAAU,GAEd,CACF,EAQaC,GAAe,eAAAvJ,GAAAC,EAAAA,EAAAA,UAAG,YAA2C,IAApCuJ,EAASrI,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,EAAGxE,EAAQwE,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,KAC9D,IAEE,IAAIsI,EAEJ,IAEIA,EADgB,IAAdD,QACkB,oCACG,IAAdA,QACW,mCACG,IAAdA,QACW,yCAGA,mCAEtBlJ,QAAQW,IAAI,4BAAQuI,IACtB,CAAE,MAAOxL,GACPsC,QAAQ8I,KAAK,4BAAQI,8DAAyBxL,EAAMqL,UACtD,CAGA,IAAKI,EACH,MAAM,IAAIpF,MAAM,gBAAMmF,8BAMxB,OAHkBT,MAAMC,QAAQS,EAAYC,SAAWD,EAAYC,QAAUD,GAG5DxB,KAAI,SAAAhO,GAEnB,IAAM0P,EAAqBjB,GAAuBzO,EAAU0C,GAY5D,GATIgN,EAAmBb,UACrBa,EAAmBC,QAAUD,EAAmBb,QAAQb,KAAI,SAACiB,EAAKW,GAAG,MAAM,CACzEjG,GAAIN,OAAOwG,aAAa,GAAKD,GAC7BV,KAAMD,EAAIC,KACVY,UAAWb,EAAI9O,QAChB,KAICuP,EAAmBK,QAAS,CAC9B,IAAMC,EAAcN,EAAmBK,QAAQvF,MAAM,gBACrD,GAAIwF,GAAeA,EAAY,GAAI,CACjC,IAAMC,EAAWC,SAASF,EAAY,GAAI,IACtC3B,GAAoB4B,KACtBP,EAAmBS,YAAc9B,GAAoB4B,GAEzD,MAAO,GAAIP,EAAmBK,QAAQ5E,SAAS,gBAE7C,IACE,IAAMiF,EAAaV,EAAmBK,QAAQvF,MAAM,4BACpD,GAAI4F,GAAcA,EAAW,GAAI,CAC/B,IAAMC,EAAcD,EAAW,GAE3B7B,GAAY8B,IACdX,EAAmBS,YAAc5B,GAAY8B,GAC7ChK,QAAQW,IAAI,kCAAcqJ,UAE1BhK,QAAQ8I,KAAK,8CAAgBkB,QAEjC,CACF,CAAE,MAAOtM,GACPsC,QAAQ8I,KAAK,yCAAWO,EAAmBK,UAAWhM,EACxD,MACK,GAAI2L,EAAmBK,QAAQ5E,SAAS,WAE7C,IACE,IAAMmF,EAAWZ,EAAmBK,QAAQQ,MAAM,KAAKC,MACnDF,GAAY9B,GAAa8B,IAC3BZ,EAAmBS,YAAc3B,GAAa8B,GAC9CjK,QAAQW,IAAI,oCAAgBsJ,MAE5BjK,QAAQ8I,KAAK,gDAAkBmB,IAEnC,CAAE,MAAOvM,GACPsC,QAAQ8I,KAAK,yCAAWO,EAAmBK,UAAWhM,EACxD,CAEJ,CAGA,OAAAiL,GAAAA,GAAA,GACKU,GAAkB,IACrB/F,GAAI+F,EAAmB/F,IAAM,QAAQ4F,KAAa3F,KAAKC,SAASC,SAAS,IAAI2G,OAAO,EAAG,KACvFC,SAAUhB,EAAmBgB,UAAY,UACzC7B,QAASa,EAAmBb,SAAW,GACvCc,QAASD,EAAmBC,SAAW,IAE3C,GACF,CAAE,MAAO5L,GAEP,MADAsC,QAAQtC,MAAM,+BAA+BwL,KAAcxL,GACrDA,CACR,CACF,IAAC,kBAhG2B,OAAAgC,EAAAkB,MAAA,KAAAC,UAAA,KAuGfyJ,GAAmB,eAAAC,GAAA5K,EAAAA,EAAAA,UAAG,YAA4B,IAArBtD,EAAQwE,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,KACnD,IACE,IAAM2J,EAAO,GACPC,EAAS,GAKf,IAAK,IAAMvB,IAFW,CAAC,EAAG,EAAG,EAAG,GAG9B,IACElJ,QAAQW,IAAI,wCAAUuI,QACtB,IAAMwB,QAAYzB,GAAgBC,EAAW7M,GAEzCqO,GAAOjC,MAAMC,QAAQgC,IACvB1K,QAAQW,IAAI,wCAAUuI,aAAgBwB,EAAIrC,iBAC1CmC,EAAKG,KAAI/J,MAAT4J,GAAItF,EAAAA,EAAAA,SAASwF,MAEb1K,QAAQ8I,KAAK,gBAAMI,4DACnBuB,EAAOE,KAAK,sBAAOzB,8BAEvB,CAAE,MAAOrH,GACP7B,QAAQtC,MAAM,sBAAOwL,8BAAmBrH,EAAEkH,SAC1C0B,EAAOE,KAAK,sBAAOzB,+BAAmBrH,EAAEkH,UAE1C,CAIF,GAAIyB,EAAKnC,OAAS,EAQhB,OAPArI,QAAQW,IAAI,kCAAS6J,EAAKnC,6BAEtBoC,EAAOpC,OAAS,GAElBrI,QAAQ8I,KAAK,sEAAgB2B,EAAOG,KAAK,OAGpCJ,EAITxK,QAAQtC,MAAM,0GAEd,IACE,IAAMmN,QAAwB,mCAE9B,OADkBpC,MAAMC,QAAQmC,EAAgBzB,SAAWyB,EAAgBzB,QAAUyB,CAEvF,CAAE,MAAOC,GAEP,MAAM,IAAI/G,MAAM,qDAAa0G,EAAOG,KAAK,QAC3C,CACF,CAAE,MAAOlN,GAEP,MADAsC,QAAQtC,MAAM,gEAAeA,GACvBA,CACR,CACF,IAAC,kBAtD+B,OAAA6M,EAAA3J,MAAA,KAAAC,UAAA,KAuEnBkK,GAAsB,eAAAC,GAAArL,EAAAA,EAAAA,UAAG,UAAO0K,GAA+B,IAArBhO,EAAQwE,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,KAC1D5I,QAAqBqS,GAAoBjO,GAE/C,OAAKgO,GAAyB,QAAbA,EAIVpS,EAAagT,QAAO,SAAAC,GAAC,OAAIA,EAAEb,WAAaA,CAAQ,IAH9CpS,CAIX,IAAC,gBARkC8J,GAAA,OAAAiJ,EAAApK,MAAA,KAAAC,UAAA,KActBsK,GAAgB,eAAAC,GAAAzL,EAAAA,EAAAA,UAAG,YAC9B,IACE,IAAMT,QAAkBoL,KAExB,IAAK7B,MAAMC,QAAQxJ,IAAmC,IAArBA,EAAUmJ,OAEzC,OADArI,QAAQ8I,KAAK,oGACN,CAAC,WAIV,IAAM3Q,EAAasQ,MAAM4C,KAAK,IAAIhG,IAChCnG,EACG+L,QAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEb,QAAQ,IAC3B1C,KAAI,SAAAuD,GAAC,OAAIA,EAAEb,QAAQ,MAIxB,OAA0B,IAAtBlS,EAAWkQ,QACbrI,QAAQ8I,KAAK,wFACN,CAAC,YAGH3Q,CACT,CAAE,MAAOuF,GAEP,OADAsC,QAAQtC,MAAM,wCAAWA,GAClB,CAAC,UACV,CACF,IAAC,kBA3B4B,OAAA0N,EAAAxK,MAAA,KAAAC,UAAA,KA+C7B,UACEoI,gBAAAA,GACAqB,oBAAAA,GACAgB,sBA1EmC,SAAC1B,GACpC,OAAO5B,GAAoB4B,IAAa,IAC1C,EAyEEmB,uBAAAA,GACAI,iBAAAA,GACAI,uBAnBoC,SAAClB,GAUrC,MAToB,CAClB,cAAiB,2BACjB,MAAS,2BACT,OAAU,2BACV,QAAW,2BACX,UAAa,2BACb,IAAO,4BAGUA,IAAaA,CAClC,EASEjC,uBAAAA,I,8CCtxBK,IAAMoD,GAAe,WAMhB,IAAD9L,EAAAmB,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAP,CAAC,EALW4K,GAKV/L,EALJoH,MAAcpH,EACdgM,QAAAA,OAAM,IAAAD,EAAG,CAAEE,MAAO,EAAGC,OAAQ,GAAGH,EAAAI,EAAAnM,EAChCoM,QAAAA,OAAO,IAAAD,EAAG,GAAGA,EAAAE,EAAArM,EACbsM,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAAvM,EACVwM,UAAAA,OAAS,IAAAD,EAAG,EAACA,EAIb,MAAO,CAELE,UAAW,GAHaT,EAAlBC,WAAkBD,EAAXE,YAGwBI,qBAA0BF,KAE/DI,UAAWA,EAEf,EASaE,GAAgB,WAAsB,IAArBC,EAAUxL,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClCyL,EAA0CD,EAA1CC,WAAYC,EAA8BF,EAA9BE,UAGdC,EAAa,CACjBjF,OAJ2CkF,EAAAA,GAAAA,SAAKJ,EAAUK,KAiB5D,OATIJ,IACFE,EAAWF,WAAaA,GAItBC,IACFC,EAAWD,UAAYA,GAGlBC,CACT,E,+kBClDA,IAAAG,GAA0BC,EAAAA,QAAWC,IAAI,UAAjClB,GAAKgB,GAALhB,MAAOC,GAAMe,GAANf,OACTkB,GAAkB,SAACC,GAAU,OAAMpB,GAAQoB,EAAc,GAAI,EAC7DC,GAAmB,SAACD,GAAU,OAAMnB,GAASmB,EAAc,GAAI,EAC/DE,GAAqB,SAACC,GAC1B,IAAMC,EAAc5J,KAAK6J,IAAIzB,GAAOC,IAAU,IAC9C,OAAOrI,KAAK8J,MAAMH,EAAOC,EAC3B,EA+RMvH,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBkH,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAWT,GAAiB,GAC5BnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET4G,OAAQ,CACNC,QAASb,GAAgB,GACzBzG,gBAAiB,OACjBuH,kBAAmB,EACnBC,kBAAmB,WAErBzW,MAAO,CACLyP,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,QAETzP,SAAU,CACRwP,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP2G,UAAWT,GAAiB,KAE9Bc,gBAAiB,CACf9H,cAAe,MACfE,WAAY,SACZG,gBAAiB,OACjB0H,OAAQjB,GAAgB,GACxBW,UAAWT,GAAiB,GAC5B1G,aAAc,GACdF,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClCgB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbkC,WAAY,CACVC,YAAavB,GAAgB,IAE/BwB,YAAa,CACXhB,KAAM,EACN1B,OAAQoB,GAAiB,GACzBnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAETyH,YAAa,CACXZ,QAASb,GAAgB,IAE3B0B,aAAc,CACZ3H,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2H,WAAY3B,GAAgB,GAC5B4B,aAAc1B,GAAiB,IAEjC2B,oBAAqB,CACnBtI,gBAAiB,OACjBuI,WAAY5B,GAAiB,GAC7B6B,cAAe7B,GAAiB,GAChCgB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,IACfC,aAAc,EACdjC,UAAW,GAEb4C,eAAgB,CACd1I,kBAAmB0G,GAAgB,IAErCiC,eAAgB,CACd3I,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClCtG,iBAAkBoG,GAAgB,GAClCxG,aAAc,GACdD,gBAAiB,WAEnB2I,qBAAsB,CACpB3I,gBAAiB,WAEnB4I,mBAAoB,CAClBpI,SAAUoG,GAAmB,IAC7BnG,MAAO,QAEToI,yBAA0B,CACxBpI,MAAO,OACPE,WAAY,QAEdmI,iBAAkB,CAChB/I,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,KAClC3G,gBAAiB,WAEnB+I,YAAa,CACXvI,SAAUoG,GAAmB,IAC7BnG,MAAO,QAETuI,cAAe,CACb1B,QAASb,GAAgB,IAE3BwC,aAAc,CACZjJ,gBAAiB,OACjBC,aAAc,GACdoI,aAAc1B,GAAiB,GAC/BW,QAASb,GAAgB,GACzBkB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbqD,eAAgB,CACdvJ,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc1B,GAAiB,IAEjCwC,cAAe,CACbnJ,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,IAEhBmJ,cAAe,CACb3I,MAAO,UACPE,WAAY,MACZH,SAAUoG,GAAmB,KAE/ByC,WAAY,CACV5I,MAAO,OACPD,SAAUoG,GAAmB,KAE/B0C,aAAc,CACZ9I,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPX,eAAgB6G,GAAiB,KACjC4C,WAAY3C,GAAmB,KAEjC4C,eAAgB,CACd3J,WAAY,SACZwI,aAAc1B,GAAiB,KAC/B3G,gBAAiB,UACjBC,aAAc,EACdqH,QAASb,GAAgB,IAE3BgD,cAAe,CACbnE,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,KAE1BiD,WAAY,CACV/J,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZuH,UAAWT,GAAiB,GAC5B4B,WAAY5B,GAAiB,GAC7BgD,eAAgB,EAChBC,eAAgB,WAElBC,WAAY,CACVvC,QAASb,GAAgB,IAE3BqD,YAAa,CACXnK,cAAe,OAEjBoK,WAAY,CACVpK,cAAe,MACfE,WAAY,SACZG,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,IAEhB+J,eAAgB,CACdvJ,MAAO,UACPE,WAAY,MACZH,SAAUoG,GAAmB,IAC7BoB,YAAavB,GAAgB,IAE/BwD,eAAgB,CACdhD,KAAM,EACNK,QAASb,GAAgB,GACzB5G,WAAY,SACZD,eAAgB,SAChBwH,UAAWT,GAAiB,KAE9BuD,UAAW,CACT1J,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP0J,UAAW,SACX/C,UAAWT,GAAiB,GAC5B0B,aAAc1B,GAAiB,IAEjCyD,YAAa,CACXpK,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClC1G,aAAc,IAEhBoK,gBAAiB,CACf5J,MAAO,OACPE,WAAY,OAEd2J,eAAgB,CACdrD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,SACZyH,QAASb,GAAgB,IAE3B8D,WAAY,CACV/J,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP4H,aAAc1B,GAAiB,IAEjC6D,aAAc,CACZhK,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP0J,UAAW,SACX9B,aAAc1B,GAAiB,IAEjC8D,YAAa,CACXzK,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClC1G,aAAc,IAEhByK,gBAAiB,CACfjK,MAAO,OACPE,WAAY,OAEdgK,YAAa,CACXhL,cAAe,MACfE,WAAY,YAIhB,SAjhBqB,WACnB,IAAA+K,GAAoB9J,EAAAA,EAAAA,kBAAZC,EAAC6J,EAAD7J,EAAGnH,EAAIgR,EAAJhR,KACLtJ,GAAaua,EAAAA,EAAAA,iBACnBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCjX,EAAOmX,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAkCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAvCtS,EAASuS,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAAoCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAzCxZ,EAAUyZ,EAAA,GAAEC,EAAaD,EAAA,GAChCE,GAAgDV,EAAAA,EAAAA,UAAS,OAAMW,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAsCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,SAAAY,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8ClB,EAAAA,EAAAA,UAASnR,EAAK5D,UAAY,MAAKkW,GAAAjB,EAAAA,EAAAA,SAAAgB,EAAA,GAAtErL,EAAesL,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,GAA0BrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAA/B/U,EAAKgV,EAAA,GAAEC,EAAQD,EAAA,GAGhBE,EAAS,eAAAlT,GAAAC,EAAAA,EAAAA,UAAG,YAChB,IACE4R,GAAW,GAGX,IAAItZ,QAAqB4a,GAAiBvI,oBAAoBrD,GAGzDwB,MAAMC,QAAQzQ,KACjB+H,QAAQtC,MAAM,4EACdzF,EAAe,IAIjBA,EAAeA,EACZgT,QAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAE5H,EAAE,IACrBqE,KAAI,SAAAuD,GAAC,OAAAvC,GAAAA,GAAA,GACDuC,GAAC,IACJ5H,GAAI4H,EAAE5H,GAAGG,YAAU,IAIvBzD,QAAQW,IAAI,4BAAQ1I,EAAaoQ,6BACjCqJ,EAAazZ,GAEb,IAEE,IAAM6a,QAAsBD,GAAiB1H,mBAGvC4H,EAAmB,CACvB,CAAEzP,GAAI,MAAOlM,MAAO,6BAAQ6N,QAAAC,EAAAA,EAAAA,SACzB4N,EAAcnL,KAAI,SAAAqL,GAAG,MAAK,CAC3B1P,GAAI0P,EACJ5b,MAAOyb,GAAiBtH,uBAAuByH,GAChD,MAGHnB,EAAckB,EAChB,CAAE,MAAOE,GACPjT,QAAQtC,MAAM,wCAAWuV,GAEzBpB,EAAc,CAAC,CAAEvO,GAAI,MAAOlM,MAAO,6BACrC,CAEAma,GAAW,EACb,CAAE,MAAO7T,GACPsC,QAAQtC,MAAM,8CAAYA,GAE1BiV,EAAS,oGACTpB,GAAW,EACb,CACF,IAAC,kBApDc,OAAA7R,EAAAkB,MAAA,KAAAC,UAAA,KAuDTqS,EAAoB,eAAA3I,GAAA5K,EAAAA,EAAAA,UAAG,UAAOtD,GAClCmW,EAAmBnW,GACnB4D,EAAKkT,eAAe9W,GAEpBuW,GACF,IAAC,gBALyB7Q,GAAA,OAAAwI,EAAA3J,MAAA,KAAAC,UAAA,MAQ1BuS,EAAAA,EAAAA,YAAU,WACRR,GACF,GAAG,CAACxL,IAGJ,IAiBMiM,EAAsB,SAAC1Z,GAC3B,IAAKA,IAAaA,EAAS2J,GAGzB,OAFAtD,QAAQtC,MAAM,sDAAuD/D,QACrE2Z,EAAAA,QAAMC,MAAM,eAAM,0FAGpB5c,EAAW6c,SAAS,iBAAkB,CAAE9D,WAAY/V,EAAS2J,IAC/D,EAyEA,GAAIpJ,EACF,OACEuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAC,yCAMvC,GAAI9J,EACF,OACE+V,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+K,eAAenJ,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAM,GAAIpG,MAAM,aAC9CO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOgL,WAAWpJ,SAAC,8BAChCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOiL,aAAarJ,SAAE9J,KACnC2J,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAOkL,YACdhJ,QAAS,WACP6K,EAAS,IACTpB,GAAW,GACXqB,GACF,EAAEpL,UAEFH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmL,gBAAgBvJ,SAAC,sBAM7C,IAAMoM,EA/HuB,WAC3B,IAAIC,EAAgC,QAArB7B,EACX9S,EACAA,EAAU+L,QAAO,SAAAC,GAAC,OAAIA,EAAEb,WAAa2H,CAAgB,IAGzD,GAAII,EAAa,CACf,IAAM0B,EAAQ1B,EAAY2B,cAC1BF,EAAWA,EAAS5I,QAAO,SAAAC,GAAC,OAC1BA,EAAEvR,SAASoa,cAAcjP,SAASgP,IACjC5I,EAAE5H,IAAM4H,EAAE5H,GAAGG,WAAWqB,SAASgP,EAAO,GAE7C,CAEA,OAAOD,CACT,CAgH0BG,GAE1B,OACEP,EAAAA,GAAAA,MAACQ,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,eAAe9N,gBAAgB,aAEnDoN,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAC,8BAC3BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOvO,SAASmQ,SAAA,CAAC,UAAGtI,EAAUmJ,OAAO,6BAGpDhB,EAAAA,GAAAA,KAAC+M,GAAwB,CACvBnN,gBAAiBA,EACjBC,iBAAkBgM,KAGpBO,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkI,gBAAgBtG,SAAA,EAClCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,SAASyF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOwI,cAC7D/G,EAAAA,GAAAA,KAACgN,GAAAA,QAAS,CACR9M,MAAO3B,GAAO0I,YACdgG,YAAY,gDACZC,MAAOnC,EACPoC,aAAcnC,EACdoC,qBAAqB,SAEN,KAAhBrC,IACC/K,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACC,QAAS,WAAF,OAAQuK,EAAe,GAAG,EAAE9K,MAAO3B,GAAO2I,YAAY/G,UAC7EH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAM,GAAIpG,MAAM,eAKpD2M,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+I,oBAAoBnH,SAAA,EACtCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCH,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPC,YAAU,EACVC,KAAMzc,EACN0c,WA1ImB,SAAH7J,GAAA,IAAM8J,EAAI9J,EAAJ8J,KAAI,OAChCzN,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO,CACL3B,GAAOmJ,eACPiD,IAAqB8C,EAAKxR,IAAMsC,GAAOoJ,sBAEzClH,QAAS,WAAF,OAAQmK,EAAoB6C,EAAKxR,GAAG,EAACkE,UAE5CH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CACHR,MAAO,CACL3B,GAAOqJ,mBACP+C,IAAqB8C,EAAKxR,IAAMsC,GAAOsJ,0BACvC1H,SAEDsN,EAAK1d,SAES,EA2Hb2d,aAAc,SAACD,GAAI,OAAKA,EAAKxR,EAAE,EAC/B0R,gCAAgC,EAChCC,sBAAuBrP,GAAOkJ,qBAIlCzH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOuJ,iBAAiB3H,UACnCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOwJ,YAAY5H,SAAA,CAC7BoM,EAAkBvL,OAAO,UAAwB,QAArB2J,EAA6Ba,GAAiBtH,uBAAuByG,GAAoB,GAAG,qBAI7H3K,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPE,KAAMhB,EACNiB,WAtIqB,SAAHzJ,GAAkB,IAAZ0J,EAAI1J,EAAJ0J,KAC5B,OACErB,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAO0J,aACdxH,QAAS,WAAF,OAAQuL,EAAoByB,EAAK,EACxCI,cAAe,GAAI1N,SAAA,EAEnBiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2J,eAAe/H,SAAA,EACjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO4J,cAAchI,SAAA,EAChCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAM,GAAIpG,MAAM,UAAUS,MAAO,CAAC8G,YAAa,MACjFhH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO6J,cAAcjI,SAC/BqL,GAAiBtH,uBAAuBuJ,EAAKzK,gBAGlDoJ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOoL,YAAYxJ,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,OAAOS,MAAO,CAAC8G,YAAa,MAC7EoF,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO8J,WAAWlI,SAAA,CAAC,IAAEsN,EAAKxR,aAI3C+D,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+J,aAAanI,SAAEsN,EAAKnb,WAEvCmb,EAAKhL,cACJzC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOiK,eAAerI,UACjCH,EAAAA,GAAAA,KAAC8N,GAAAA,QAAKxM,GAAA,CACJ3D,OAAQ8P,EAAKhL,aACTsC,GAAazD,GAAAA,GAAC,CAAC,EACd/C,GAAOkK,eAAa,IACvBxD,WAAY,kBAMpBmH,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmK,WAAWvI,SAAA,EAC7BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAOsK,WAAW1I,UACzCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,gBAAgByF,KAAM,GAAIpG,MAAM,YAEjDO,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOuK,YAAY3I,UAC9BiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAOwK,WACdtI,QAAS,WAAF,OAAQuL,EAAoByB,EAAK,EAACtN,SAAA,EAEzCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyK,eAAe7I,SAAC,8BACpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,sBAM7D,EAqFMiO,aAAc,SAACD,GAAI,IAAAM,EAAA,OAAY,OAAPA,EAAAN,EAAKxR,SAAE,EAAP8R,EAAS3R,aAAcF,KAAKC,SAASC,UAAU,EACvEwR,sBAAuBrP,GAAOyJ,cAC9BgG,8BAA8B,EAC9BC,mBAAoB,WAAF,OAChB7B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0K,eAAe9I,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,SAASyF,KAAMD,GAAmB,IAAKnG,MAAM,UAC5DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2K,UAAU/I,SAAC,wEAG/BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAO6K,YACd3I,QAAS,WACPmK,EAAoB,OACpBI,EAAe,GACjB,EAAE7K,UAEFH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8K,gBAAgBlJ,SAAC,6CAElC,MAKjB,E,uCC5SatI,GAAY,CACvB,CACEoE,GAAI,IACJ+G,SAAU,2BACV1Q,SAAU,oGACV2P,QAAS,CACP,CAAEhG,GAAI,IAAKuF,KAAM,wFACjB,CAAEvF,GAAI,IAAKuF,KAAM,0DACjB,CAAEvF,GAAI,IAAKuF,KAAM,0DACjB,CAAEvF,GAAI,IAAKuF,KAAM,uEAEnBhO,cAAe,IACfb,YAAa,yPACbub,SAAU,KACVC,WAAY,gBAEd,CACElS,GAAI,IACJ+G,SAAU,2BACV1Q,SAAU,oGACV2P,QAAS,CACP,CAAEhG,GAAI,IAAKuF,KAAM,kCACjB,CAAEvF,GAAI,IAAKuF,KAAM,kCACjB,CAAEvF,GAAI,IAAKuF,KAAM,wCACjB,CAAEvF,GAAI,IAAKuF,KAAM,6BAEnBhO,cAAe,IACfb,YAAa,mMACbub,SAAU,KACVC,WAAY,gBAEd,CACElS,GAAI,IACJ+G,SAAU,2BACV1Q,SAAU,2HACV2P,QAAS,CACP,CAAEhG,GAAI,IAAKuF,KAAM,oDACjB,CAAEvF,GAAI,IAAKuF,KAAM,wCACjB,CAAEvF,GAAI,IAAKuF,KAAM,wCACjB,CAAEvF,GAAI,IAAKuF,KAAM,+CAEnBhO,cAAe,IACfb,YAAa,iLACbub,SAAU,KACVC,WAAY,gBAEd,CACElS,GAAI,IACJ+G,SAAU,2BACV1Q,SAAU,yDACV2P,QAAS,CACP,CAAEhG,GAAI,IAAKuF,KAAM,4BACjB,CAAEvF,GAAI,IAAKuF,KAAM,4BACjB,CAAEvF,GAAI,IAAKuF,KAAM,4BACjB,CAAEvF,GAAI,IAAKuF,KAAM,6BAEnBhO,cAAe,IACfb,YAAa,+JACbub,SAAU,sCACVC,WAAY,gBAEd,CACElS,GAAI,IACJ+G,SAAU,2BACV1Q,SAAU,+GACV2P,QAAS,CACP,CAAEhG,GAAI,IAAKuF,KAAM,8CACjB,CAAEvF,GAAI,IAAKuF,KAAM,8CACjB,CAAEvF,GAAI,IAAKuF,KAAM,4HACjB,CAAEvF,GAAI,IAAKuF,KAAM,+CAEnBhO,cAAe,IACfb,YAAa,uRACbub,SAAU,KACVC,WAAY,iB,+kBClEhB,IAAMC,GAAwB,QAAhB3S,EAAAA,QAASC,GAGjB2S,GAAc,WAClB,OAAID,GAEK,KAGAE,GAAAA,aAAoB,qBAE/B,EAGaC,GAAY,eAAAlW,GAAAC,EAAAA,EAAAA,UAAG,YAC1B,GAAI8V,GAEF,WACgC3V,EAAAA,QAAaC,QAAQ,sBAG3CD,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAUlD,aAIjCY,EAAAA,QAAaC,QAAQ,sBAErCD,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAU,aAGlCtC,EAAAA,QAAaC,QAAQ,qBAEpCD,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAU,KAE1D,CAAE,MAAO1E,GACPsC,QAAQtC,MAAM,qCAAsCA,EACtD,KACK,CAEL,IAAMmY,EAAKH,KAGXG,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WACD,oRAaFD,EAAGC,WACD,uKAQFD,EAAGC,WACD,0NAUFD,EAAGC,WACD,+ZAgBFD,EAAGC,WACD,uOAQJ,IAAG,SAAAtY,GACDsC,QAAQtC,MAAM,yBAA0BA,EAC1C,IAAG,WAEDuY,GAA0BJ,EAC5B,GACF,CACF,IAAC,kBAhGwB,OAAAnW,EAAAkB,MAAA,KAAAC,UAAA,KAmGnBoV,GAA4B,SAACJ,GACjCA,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WACD,2CACA,IACA,SAACxQ,EAAC+E,GAEc,IAFNA,EAAJ2L,KACeC,OAAO,GAAGC,OAG3BC,GAAeR,EAEnB,GAEJ,IAAG,SAAAnY,GACDsC,QAAQtC,MAAM,+BAAgCA,EAChD,GACF,EAGM2Y,GAAiB,SAACR,GACtBA,EAAGC,aAAY,SAAAC,GACb7W,GAAUoG,SAAQ,SAAA3L,GAChBoc,EAAGC,WACD,sJAEA,CACErc,EAAS2J,GACT3J,EAAS0Q,SACT1Q,EAASA,SACT+H,KAAKU,UAAUzI,EAAS2P,SACxB3P,EAASkB,cACTlB,EAASK,YACTL,EAAS4b,SACT5b,EAAS6b,YAGf,GACF,IAAG,SAAA9X,GACDsC,QAAQtC,MAAM,6BAA8BA,EAC9C,IAAG,WACDsC,QAAQW,IAAI,kCACd,GACF,EAGa2V,GAAe,eAAAtL,GAAArL,EAAAA,EAAAA,UAAG,YAC7B,IAAI8V,GASF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,2BACA,IACA,SAACxQ,EAAC4F,GAAgB,IACVlM,EADEkM,EAAJ8K,KACmBC,OAAOxO,KAAI,SAAAmN,GAAI,OAAAnM,GAAAA,GAAA,GACjCmM,GAAI,IACPxL,QAAS5H,KAAKC,MAAMmT,EAAKxL,UAAQ,IAEnCkN,EAAQtX,EACV,IACA,SAACsG,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IA3BA,IACE,IAAMgZ,QAAwB5W,EAAAA,QAAaC,QAAQ,aACnD,OAAO2W,EAAkBhV,KAAKC,MAAM+U,GAAmB,EACzD,CAAE,MAAOhZ,GAEP,OADAsC,QAAQtC,MAAM,4CAA6CA,GACpD,EACT,CAuBJ,IAAC,kBA/B2B,OAAAsN,EAAApK,MAAA,KAAAC,UAAA,KA4Jf8V,IA1HsB,eAAAC,GAAAjX,EAAAA,EAAAA,UAAG,UAAO0K,GAC3C,IAAIoL,GAYF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAC3B,IAAMZ,EAAKH,KACL5B,EAAqB,QAAbzJ,EACV,2BACA,8CACEwM,EAAsB,QAAbxM,EAAqB,GAAK,CAACA,GAE1CwL,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WACDlC,EACA+C,GACA,SAACrR,EAACsR,GAAgB,IACV5X,EADE4X,EAAJZ,KACmBC,OAAOxO,KAAI,SAAAmN,GAAI,OAAAnM,GAAAA,GAAA,GACjCmM,GAAI,IACPxL,QAAS5H,KAAKC,MAAMmT,EAAKxL,UAAQ,IAEnCkN,EAAQtX,EACV,IACA,SAACsG,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IAnCA,IACE,IAAMgZ,QAAwB5W,EAAAA,QAAaC,QAAQ,aAC7C9H,EAAeye,EAAkBhV,KAAKC,MAAM+U,GAAmB,GACrE,MAAoB,QAAbrM,EACHpS,EACAA,EAAagT,QAAO,SAAAC,GAAC,OAAIA,EAAEb,WAAaA,CAAQ,GACtD,CAAE,MAAO3M,GAEP,OADAsC,QAAQtC,MAAM,wDAAyDA,GAChE,EACT,CA4BJ,GAvCmC,IA0CJ,eAAAqZ,GAAApX,EAAAA,EAAAA,UAAG,YAAuB,IAAhByW,EAAKvV,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,GACzC5I,QAAqBqe,KAM3B,OAHiBpR,EAAAA,EAAAA,SAAIjN,GAAc+e,MAAK,iBAAM,GAAMzT,KAAKC,QAAQ,IAGjDE,MAAM,EAAG0S,EAC3B,GAR+B,IAWH,eAAAa,GAAAtX,EAAAA,EAAAA,UAAG,UAAO2D,GACpC,IAAImS,GAUF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,wCACA,CAAC1S,IACD,SAACkC,EAAC0R,GAAgB,IAAZhB,EAAIgB,EAAJhB,KACJ,GAAIA,EAAK7N,OAAS,EAAG,CACnB,IAAM1O,EAAWuc,EAAKC,OAAO,GAC7Bxc,EAAS2P,QAAU5H,KAAKC,MAAMhI,EAAS2P,SACvCkN,EAAQ7c,EACV,MACE6c,EAAQ,KAEZ,IACA,SAAChR,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IA9BA,IACE,IAAMgZ,QAAwB5W,EAAAA,QAAaC,QAAQ,aAEnD,OADqB2W,EAAkBhV,KAAKC,MAAM+U,GAAmB,IACjDS,MAAK,SAAAjM,GAAC,OAAIA,EAAE5H,KAAOA,CAAE,KAAK,IAChD,CAAE,MAAO5F,GAEP,OADAsC,QAAQtC,MAAM,iDAAkDA,GACzD,IACT,CAyBJ,GAlC4B,IAqCI,eAAA0Z,GAAAzX,EAAAA,EAAAA,UAAG,UAAO2D,GACxC,IAEE,IACM3J,SADqBkZ,GAAiBvI,uBACd6M,MAAK,SAAAjM,GAAC,OAAIA,EAAE5H,GAAGG,aAAeH,EAAGG,UAAU,IAEzE,IAAK9J,EACH,OAAO,KAIT,IAAM0d,QAAmBC,GAAoBhU,GAa7C,OAVuBqF,GAAAA,GAAA,GAClBhP,GAAQ,IACX2P,QAAS3P,EAAS6O,QAAQb,KAAI,SAACiB,EAAK2O,GAAK,MAAM,CAC7CjU,GAAIN,OAAOwG,aAAa,GAAK+N,GAC7B1O,KAAMD,EAAIC,KACVY,UAAWb,EAAI9O,QAChB,IACDud,WAAYA,GAIhB,CAAE,MAAO3Z,GAEP,OADAsC,QAAQtC,MAAM,mCAAoCA,GAC3C,IACT,CACF,GA7BgC,IAgCL,eAAA8Z,GAAA7X,EAAAA,EAAAA,UAAG,UAAO+P,GACnC,IAAKA,EAEH,OADA1P,QAAQtC,MAAM,2CACP,EAGT,IAAMiF,EAAMD,KAAKC,MAGjB,GAFA3C,QAAQW,IAAI,sBAAsB+O,mBAE9B+F,GAiCF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GAEbA,EAAGC,WACD,gDACA,CAACtG,IACD,SAAClK,EAACiS,GACoB,IADZA,EAAJvB,KACK7N,OAEP0N,EAAGC,WACD,+DACA,CAACtG,EAAWjM,WAAYd,IACxB,kBAAM6T,GAAQ,EAAK,IACnB,SAAChR,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,IAIF8Y,GAAQ,EAEZ,IACA,SAAChR,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IA9DA,IACE,IAAMga,QAAwB5X,EAAAA,QAAaC,QAAQ,aAC7ChJ,EAAY2gB,EAAkBhW,KAAKC,MAAM+V,GAAmB,GASlE,OANsB3gB,EAAU4gB,WAAU,SAAAC,GAAM,IAADC,EAAAC,EAG7C,QAFwB,OAAZD,EAAAD,EAAElI,iBAAU,EAAZmI,EAAcpU,cAAkB,OAARqU,EAAIF,EAAEtU,SAAE,EAAJwU,EAAMrU,aAAc,MAChDiM,EAAWjM,UAEzB,KAEqB,GACnBzD,QAAQW,IAAI,YAAY+O,2BACjB,IAIT3Y,EAAU4T,KAAK,CACbrH,GAAI,OAAOoM,KAAc/M,IACzB+M,WAAYA,EAAWjM,WACvBsU,UAAWpV,EACXqV,UAAWrV,IAGb3C,QAAQW,IAAI,mCAAmC5J,EAAUsR,4BACnDvI,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAUrL,KAChD,EACT,CAAE,MAAO2G,GAEP,OADAsC,QAAQtC,MAAM,6CAA8CA,IACrD,CACT,CAkCJ,IAAC,gBA1E0Bua,GAAA,OAAAT,EAAA5W,MAAA,KAAAC,UAAA,MA6EdqX,GAAmB,eAAAC,GAAAxY,EAAAA,EAAAA,UAAG,UAAO+P,GACxC,IAAKA,EAEH,OADA1P,QAAQtC,MAAM,gDACP,EAKT,GAFAsC,QAAQW,IAAI,wBAAwB+O,qBAEhC+F,GAwBF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,8CACA,CAACtG,IACD,kBAAM8G,GAAQ,EAAK,IACnB,SAAChR,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IApCA,IACE,IAAMga,QAAwB5X,EAAAA,QAAaC,QAAQ,aAC7ChJ,EAAY2gB,EAAkBhW,KAAKC,MAAM+V,GAAmB,GAG5DU,EAAmBrhB,EAAUkU,QAAO,SAAA2M,GAAM,IAADS,EAAAC,EACvCC,GAAkB,OAAZF,EAAAT,EAAElI,iBAAU,EAAZ2I,EAAc5U,cAAkB,OAAR6U,EAAIV,EAAEtU,SAAE,EAAJgV,EAAM7U,aAAc,GACtD+U,EAAM9I,EAAWjM,WACjBtJ,EAASoe,IAAQC,EAIvB,OAHKre,GACH6F,QAAQW,IAAI,6BAA6B4X,OAASC,KAE7Cre,CACT,IAIA,OAFA6F,QAAQW,IAAI,2BAA2B5J,EAAUsR,aAAa+P,EAAiB/P,gBACzEvI,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAUgW,KAChD,CACT,CAAE,MAAO1a,GAEP,OADAsC,QAAQtC,MAAM,kDAAmDA,IAC1D,CACT,CAiBJ,IAAC,gBA/C+B+a,GAAA,OAAAN,EAAAvX,MAAA,KAAAC,UAAA,KAkDnByW,GAAmB,eAAAoB,GAAA/Y,EAAAA,EAAAA,UAAG,UAAO+P,GACxC,IAAKA,EAEH,OADA1P,QAAQtC,MAAM,gDACP,EAGT,IAAI+X,GAmBF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,gDACA,CAACtG,IACD,SAAClK,EAACmT,GAAgB,IAAZzC,EAAIyC,EAAJzC,KACJM,EAAQN,EAAK7N,OAAS,EACxB,IACA,SAAC7C,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IAjCA,IACE,IAAMga,QAAwB5X,EAAAA,QAAaC,QAAQ,aAI7C6Y,GAHYlB,EAAkBhW,KAAKC,MAAM+V,GAAmB,IAG1CmB,MAAK,SAAAjB,GAAM,IAADkB,EAAAC,EAGhC,QAFwB,OAAZD,EAAAlB,EAAElI,iBAAU,EAAZoJ,EAAcrV,cAAkB,OAARsV,EAAInB,EAAEtU,SAAE,EAAJyV,EAAMtV,aAAc,MAChDiM,EAAWjM,UAEzB,IAGA,OADAzD,QAAQW,IAAI,YAAY+O,OAAgBkJ,EAAQ,GAAK,oBAC9CA,CACT,CAAE,MAAOlb,GAEP,OADAsC,QAAQtC,MAAM,kDAAmDA,IAC1D,CACT,CAmBJ,IAAC,gBA1C+Bsb,GAAA,OAAAN,EAAA9X,MAAA,KAAAC,UAAA,KA6CnBoY,GAAoB,eAAAC,GAAAvZ,EAAAA,EAAAA,UAAG,YAGlC,GAFAK,QAAQW,IAAI,+BAER8U,GAuDF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,mKAIA,IACA,SAACxQ,EAAC2T,GAAgB,IACVja,EADEia,EAAJjD,KACmBC,OAAOxO,KAAI,SAAAmN,GAEhC,IAAIiD,EACJ,IACEA,EAAY,IAAIrV,KAAKoS,EAAKiD,UAC5B,CAAE,MAAOlW,GACPkW,EAAY,IAAIrV,IAClB,CAEA,OAAAiG,GAAAA,GAAA,GACKmM,GAAI,IACPxL,QAASwL,EAAKxL,QAAU5H,KAAKC,MAAMmT,EAAKxL,SAAW,GACnDyO,UAAWA,GAEf,IACAvB,EAAQtX,EACV,IACA,SAACsG,EAAG9H,GAEF,OADA+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IAvFA,IAEE,IAAMga,QAAwB5X,EAAAA,QAAaC,QAAQ,aAC7ChJ,EAAY2gB,EAAkBhW,KAAKC,MAAM+V,GAAmB,GAIlE,GAHA1X,QAAQW,IAAI,SAAS5J,EAAUsR,+BAGN,IAArBtR,EAAUsR,OACZ,MAAO,GAIT,IAAMpQ,QAAqB4a,GAAiBvI,sBAC5CtK,QAAQW,IAAI,UAAU1I,EAAaoQ,4CAGnC,IAAM+Q,EAAoB,GAAGC,EAAA,YAG3B,IAAM3J,EAAa4J,EAAS5J,YAAc4J,EAAShW,GACnD,IAAKoM,EAAW,OAAD,EAGf,IAAM/V,EAAW1B,EAAakf,MAAK,SAAAjM,GACjC,OAAOA,EAAE5H,IAAM4H,EAAE5H,GAAGG,aAAeiM,EAAWjM,UAChD,IAEA,GAAI9J,EAAU,CAEZ,IAAIoe,EACJ,IACEA,EAAY,IAAIrV,KAAK4W,EAASvB,WAAauB,EAAStB,WAAatV,KAAKC,MACxE,CAAE,MAAOd,GACPkW,EAAY,IAAIrV,IAClB,CAEA0W,EAAkBzO,KAAIhC,GAAAA,GAAC,CAAC,EACnBhP,GAAQ,IACX2J,GAAI3J,EAAS2J,GACb3J,SAAUA,EAASA,SACnB0Q,SAAU1Q,EAAS0Q,SACnB0N,UAAWA,EACXC,UAAWsB,EAAStB,WAAatV,KAAKC,QAE1C,CACF,EA3BA,IAAK,IAAM2W,KAAYviB,QAASsiB,IA8BhC,OADArZ,QAAQW,IAAI,aAAayY,EAAkB/Q,qCACpC+Q,CACT,CAAE,MAAO1b,GAEP,OADAsC,QAAQtC,MAAM,qDAAsDA,GAC7D,EACT,CAqCJ,IAAC,kBA7FgC,OAAAwb,EAAAtY,MAAA,KAAAC,UAAA,KAgGpB0Y,GAAa,eAAAC,GAAA7Z,EAAAA,EAAAA,UAAG,UAAO+P,EAAY+J,GAC9C,IAAMC,GAAS,IAAIhX,MAAOiX,cACpBC,EAAQlX,KAAKC,MACbkX,EAAY,WAAWnK,KAAckK,IAE3C,IAAInE,GAiCF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GAEbA,EAAGC,WACD,4MASFD,EAAGC,WACD,+CACA,CAACtG,EAAWjM,aACZ,SAAC+B,EAACsU,GAAgB,IASTC,EATH7D,EAAI4D,EAAJ5D,KACgB,IAAhBA,EAAK7N,OAEP0N,EAAGC,WACD,6EACA,CAACtG,EAAWjM,WAAsB,MAAVgW,EAAAA,EAAc,KAAMG,IAC5C,kBAAMpD,GAAQ,EAAK,IACnB,SAAChR,EAAG9H,GAA2B,OAAf+Y,EAAO/Y,IAAe,CAAO,IAI/CqY,EAAGC,WACD,0EACA,CAAwC,OAAxC+D,EAAW,MAAVN,EAAAA,EAAcvD,EAAKC,OAAO,GAAGsD,YAAUM,EAAI,KAAMH,EAAOlK,EAAWjM,aACpE,kBAAM+S,GAAQ,EAAK,IACnB,SAAChR,EAAG9H,GAA2B,OAAf+Y,EAAO/Y,IAAe,CAAO,GAGnD,IACA,SAAC8H,EAAG9H,GAA2B,OAAf+Y,EAAO/Y,IAAe,CAAO,GAEjD,GACF,IAvEA,IACE,IAMwBsc,EANlBC,QAAuBna,EAAAA,QAAaC,QAAQ,YAC5C/I,EAAWijB,EAAiBvY,KAAKC,MAAMsY,GAAkB,GAGzDC,EAAgBljB,EAAS2gB,WAAU,SAAArT,GAAC,IAAA6V,EAAA,QAAiB,OAAZA,EAAA7V,EAAEoL,iBAAU,EAAZyK,EAAc1W,aAAc,MAAQiM,EAAWjM,UAAU,IAExG,GAAIyW,GAAiB,EAEnBljB,EAASkjB,GAAeE,UAAYpjB,EAASkjB,GAAeE,UAAY,GAAK,EAC7EpjB,EAASkjB,GAAeG,YAAcX,EACtC1iB,EAASkjB,GAAeT,WAA6D,OAAnDO,EAAa,MAAVP,EAAAA,EAAcziB,EAASkjB,GAAeT,YAAUO,EAAI,KACzFhjB,EAASkjB,GAAelC,UAAY4B,OAGpC5iB,EAAS2T,KAAK,CACZrH,GAAIuW,EACJnK,WAAsB,MAAVA,OAAU,EAAVA,EAAYjM,WACxB2W,SAAU,EACVC,YAAaX,EACbD,WAAsB,MAAVA,EAAAA,EAAc,KAC1BzB,UAAW4B,IAKf,aADM9Z,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAUpL,KAC/C,CACT,CAAE,MAAO0G,GAEP,OADAsC,QAAQtC,MAAM,2CAA4CA,IACnD,CACT,CA2CJ,IAAC,gBA/EyB4c,EAAAC,GAAA,OAAAf,EAAA5Y,MAAA,KAAAC,UAAA,KAkFb2Z,GAAmB,eAAAC,GAAA9a,EAAAA,EAAAA,UAAG,UAAO+a,GACxC,IAAKjS,MAAMC,QAAQgS,IAA2B,IAAjBA,EAAMrS,OAAc,OAAO,EACxD,IAAMuR,EAAQlX,KAAKC,MACb+W,EAAS,IAAIhX,KAAKkX,GAAOD,cAE/B,IAAIlE,GAkCF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GAUb,IAAK,IAAM4E,KARX5E,EAAGC,WACD,4MAOe0E,GAAO,CAAC,IAADE,EAAAC,EAAAC,EAChBC,EAA6B,OAA1BH,EAAS,OAATC,EAAIF,EAAGrX,IAAEuX,EAAIF,EAAGjL,iBAAU,EAAvBkL,EAA0BnX,WACtC,GAAKsX,EAAL,CACA,IAAMC,EAAkB,OAAhBF,EAAGH,EAAGlB,YAAUqB,EAAI,KAC5B/E,EAAGC,WACD,wFACA,CAAC+E,EAAKC,EAAIpB,GAJM,CAMpB,CACF,IAAG,SAAAlc,GACDsC,QAAQtC,MAAM,yCAA0CA,GACxD+Y,EAAO/Y,EACT,IAAG,kBAAM8Y,GAAQ,EAAK,GACxB,IA1DA,IACE,IAAMyE,QAAenb,EAAAA,QAAaC,QAAQ,YACpC/I,EAAWikB,EAASvZ,KAAKC,MAAMsZ,GAAU,GAEzCC,EAAO,IAAIC,IAAInkB,EAAS2Q,KAAI,SAAArD,GAAC,IAAA8W,EAAA,MAAI,EAAe,OAAZA,EAAA9W,EAAEoL,iBAAU,EAAZ0L,EAAc3X,aAAc,GAAKa,EAAG,KAC9E,IAAK,IAAMqW,KAAMD,EAAO,CAAC,IAADW,EAAAC,EAChBP,GAAW,OAALM,EAAAV,EAAGrX,SAAE,EAAL+X,EAAO5X,cAA2B,OAAjB6X,EAAIX,EAAGjL,iBAAU,EAAb4L,EAAe7X,YAChD,GAAKsX,EAAL,CACA,IAMOQ,EANDC,EAAWN,EAAKrO,IAAIkO,GAC1B,GAAIS,EACFA,EAASpB,UAAYoB,EAASpB,UAAY,GAAK,EAC/CoB,EAASnB,YAAcX,OACDpR,IAAlBqS,EAAGlB,aAA0B+B,EAAS/B,WAAakB,EAAGlB,YAC1D+B,EAASxD,UAAY4B,OAErBsB,EAAKxQ,IAAIqQ,EAAK,CACZzX,GAAI,WAAWyX,KAAOnB,IACtBlK,WAAYqL,EACZX,SAAU,EACVC,YAAaX,EACbD,WAAyB,OAAf8B,EAAEZ,EAAGlB,YAAU8B,EAAI,KAC7BvD,UAAW4B,GAdG,CAiBpB,CACA,IAAM6B,EAAShT,MAAM4C,KAAK6P,EAAKQ,UAE/B,aADM5b,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAUqZ,KAC/C,CACT,CAAE,MAAO5Z,GAEP,OADA7B,QAAQtC,MAAM,yCAA0CmE,IACjD,CACT,CA6BJ,IAAC,gBAlE+B8Z,GAAA,OAAAlB,EAAA7Z,MAAA,KAAAC,UAAA,KAqEnB+a,GAAW,eAAAC,GAAAlc,EAAAA,EAAAA,UAAG,YACzB,IAAI8V,GAWF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,yGAEA,IACA,SAACxQ,EAACsW,GAAgB,IAAZ5F,EAAI4F,EAAJ5F,KAAaM,EAAQN,EAAKC,OAAS,IACzC,SAAC3Q,EAAG9H,GAA2B,OAAf+Y,EAAO/Y,IAAe,CAAO,GAEjD,GACF,IArBA,IACE,IAAMqe,QAAqBjc,EAAAA,QAAaC,QAAQ,YAGhD,OAFagc,EAAera,KAAKC,MAAMoa,GAAgB,IAE3C/E,MAAK,SAACgF,EAAGC,GAAC,OAAMA,EAAEjE,WAAa,IAAMgE,EAAEhE,WAAa,EAAE,GACpE,CAAE,MAAOta,GAEP,OADAsC,QAAQtC,MAAM,oDAAqDA,GAC5D,EACT,CAeJ,IAAC,kBAzBuB,OAAAme,EAAAjb,MAAA,KAAAC,UAAA,KAmCXqb,GAAa,eAAAC,GAAAxc,EAAAA,EAAAA,UAAG,UAAO+P,GAClC,IAAKA,EAEH,OADA1P,QAAQtC,MAAM,0CACP,EAKT,GAFAsC,QAAQW,IAAI,yCAAyC+O,MAEjD+F,GA4BF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,6CACA,CAACtG,EAAWjM,aACZ,SAAC+B,EAAC4W,GAAwB,IAApBC,EAAYD,EAAZC,aACJrc,QAAQW,IAAI,WAAW0b,6BAAwC3M,KAC/D8G,EAAQ6F,EAAe,EACzB,IACA,SAAC7W,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,8BAA8BgS,KAAehS,GAC3D+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IA5CA,IACE,IAAMuc,QAAuBna,EAAAA,QAAaC,QAAQ,YAC5C/I,EAAWijB,EAAiBvY,KAAKC,MAAMsY,GAAkB,GAC/Dja,QAAQW,IAAI,2BAA2B3J,EAASqR,UAGhD,IAAMiU,EAAkBtlB,EAASiU,QAAO,SAAA3G,GAAM,IAADiY,EAErCC,GAAkB,OAAZD,EAAAjY,EAAEoL,iBAAU,EAAZ6M,EAAc9Y,aAAc,GAClC+U,EAAM9I,EAAWjM,WACjBtJ,EAASqiB,IAAQhE,EAIvB,OAHKre,GACH6F,QAAQW,IAAI,4BAA4B6b,OAAShE,KAE5Cre,CACT,IAMA,OAJA6F,QAAQW,IAAI,2BAA2B2b,EAAgBjU,gBAGjDvI,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAUka,KAC/C,CACT,CAAE,MAAO5e,GAEP,OADAsC,QAAQtC,MAAM,2CAA4CA,IACnD,CACT,CAqBJ,IAAC,gBAvDyB+e,GAAA,OAAAN,EAAAvb,MAAA,KAAAC,UAAA,KA6Db6b,GAAa,eAAAC,GAAAhd,EAAAA,EAAAA,UAAG,YAG3B,GAFAK,QAAQW,IAAI,qDAER8U,GAqBF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAC3B,IAAMZ,EAAKH,KAGXG,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WAAW,0CAA2C,IAAI,SAACxQ,EAACoX,GAAgB,IACvExG,EAD+DwG,EAAJ1G,KAC9CC,OAAO,GAAGC,MAC7BpW,QAAQW,IAAI,YAAYyV,4BAGxBP,EAAGC,aAAY,SAAA+G,GACbA,EAAQ7G,WACN,wBACA,IACA,SAACxQ,EAACsX,GAAwB,IAApBT,EAAYS,EAAZT,aACJrc,QAAQW,IAAI,WAAW0b,qBACvB7F,GAAQ,EACV,IACA,SAAChR,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,2BAA4BA,GAC1C+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,GACF,GACF,IA/CA,IAEE,IAAMuc,QAAuBna,EAAAA,QAAaC,QAAQ,YAC5C/I,EAAWijB,EAAiBvY,KAAKC,MAAMsY,GAAkB,GAC/Dja,QAAQW,IAAI,YAAY3J,EAASqR,0CAG3BvI,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAU,KAGtD,IAAM2a,QAAmBjd,EAAAA,QAAaC,QAAQ,YACxCid,EAAgBD,EAAarb,KAAKC,MAAMob,GAAc,KAG5D,OAFA/c,QAAQW,IAAI,eAAgBqc,IAErB,CACT,CAAE,MAAOtf,GAEP,MADAsC,QAAQtC,MAAM,2CAA4CA,GACpDA,CACR,CA+BJ,IAAC,kBArDyB,OAAAif,EAAA/b,MAAA,KAAAC,UAAA,KAwDboc,GAAa,eAAAC,GAAAvd,EAAAA,EAAAA,UAAG,YAC3B,IAAI8V,GAWF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KACRI,aAAY,SAAAC,GAEbA,EAAGC,WAAW,0BACdD,EAAGC,WAAW,wBAChB,IAAG,SAAAtY,GACDsC,QAAQtC,MAAM,4BAA6BA,GAC3C+Y,EAAO/Y,EACT,IAAG,WACD8Y,GAAQ,EACV,GACF,IAtBA,IAIE,aAFM1W,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAU,WACjDtC,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAU,MAC/C,CACT,CAAE,MAAO1E,GAEP,OADAsC,QAAQtC,MAAM,+BAAgCA,IACvC,CACT,CAgBJ,IAAC,kBA1ByB,OAAAwf,EAAAtc,MAAA,KAAAC,UAAA,KA6Bbsc,GAAmB,eAAAC,GAAAzd,EAAAA,EAAAA,UAAG,UAAOiV,GACxC,IAAQ7c,EAA+E6c,EAA/E7c,kBAAmBiD,EAA4D4Z,EAA5D5Z,aAAcqiB,EAA8CzI,EAA9CyI,SAAQC,EAAsC1I,EAApC2I,KAAAA,OAAI,IAAAD,GAAG,IAAI5a,MAAOiX,cAAa2D,EAElF,IAAI7H,GAwBF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAC3B,IAAMZ,EAAKH,KAGXG,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WACD,wPASJ,IAAG,SAAAtY,GACDsC,QAAQtC,MAAM,uCAAwCA,GACtD+Y,EAAO/Y,EACT,IAAG,WAEDmY,EAAGC,aAAY,SAAAC,GACb,IAAMzS,EAAKZ,KAAKC,MAAMc,WAChBzL,EAAWD,EAAoB,EAAKiD,EAAejD,EAAqB,EAE9Ege,EAAGC,WACD,qIAEA,CAAC1S,EAAIia,EAAMxlB,EAAmBiD,EAAcqiB,EAAUrlB,IACtD,SAACwN,EAAGrL,GACFqc,GAAQ,EACV,IACA,SAAChR,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,kCAAmCA,GACjD+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,GACF,IA9DA,IAEE,IAAM8f,QAAqB1d,EAAAA,QAAaC,QAAQ,iBAC5CvB,EAAWgf,EAAe9b,KAAKC,MAAM6b,GAAgB,GAczD,OAXAhf,EAASmM,KAAK,CACZrH,GAAIZ,KAAKC,MAAMc,WACf8Z,KAAAA,EACAxlB,kBAAAA,EACAiD,aAAAA,EACAqiB,SAAAA,EACArlB,SAAUD,EAAoB,EAAKiD,EAAejD,EAAqB,UAInE+H,EAAAA,QAAaqC,QAAQ,gBAAiBT,KAAKU,UAAU5D,KACpD,CACT,CAAE,MAAOd,GAEP,OADAsC,QAAQtC,MAAM,kDAAmDA,IAC1D,CACT,CA2CJ,IAAC,gBApE+B+f,GAAA,OAAAL,EAAAxc,MAAA,KAAAC,UAAA,KAuEnB6c,GAAqB,eAAAC,GAAAhe,EAAAA,EAAAA,UAAG,YACnC,IAAI8V,GAiCF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KAERI,aAAY,SAAAC,GAEbA,EAAGC,WACD,gLAKA,IACA,SAACxQ,EAACoY,GAAgB,IACVC,EADED,EAAJ1H,KACeC,OAAO,GACpB1X,EAAaof,EAAMpf,YAAc,EACjCC,EAAiBmf,EAAMnf,gBAAkB,EACzCof,EAAeD,EAAMC,cAAgB,EACrCnf,EAAkBD,EAAiB,EAAKof,EAAepf,EAAkB,EAG/EqX,EAAGC,WACD,2DACA,IACA,SAACxQ,EAACuY,GAAgB,IAAZ7H,EAAI6H,EAAJ7H,KACJM,EAAQ,CACN/X,WAAAA,EACAC,eAAAA,EACAof,aAAAA,EACAnf,gBAAAA,EACAqf,gBAAiB9H,EAAKC,QAE1B,IACA,SAAC3Q,EAAG9H,GACFsC,QAAQtC,MAAM,wCAAyCA,GACvD8Y,EAAQ,CACN/X,WAAAA,EACAC,eAAAA,EACAof,aAAAA,EACAnf,gBAAAA,EACAqf,gBAAiB,IAErB,GAEJ,IACA,SAACxY,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,6BAA8BA,GAC5C+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IAnFA,IACE,IAAM8f,QAAqB1d,EAAAA,QAAaC,QAAQ,iBAC1CvB,EAAWgf,EAAe9b,KAAKC,MAAM6b,GAAgB,GAGrDS,QAAwBne,EAAAA,QAAaC,QAAQ,eAC7Cme,EAAcD,EAAkBvc,KAAKC,MAAMsc,GAAmB,GAG9Dxf,EAAayf,EAAY7V,OACzB3J,EAAiBwf,EAAYC,QAAO,SAACC,EAAKtJ,GAAI,OAAKsJ,GAAOtJ,EAAKpW,gBAAkB,EAAE,GAAE,GACrFof,EAAeI,EAAYC,QAAO,SAACC,EAAKtJ,GAAI,OAAKsJ,GAAOtJ,EAAK9Z,cAAgB,EAAE,GAAE,GAGvF,MAAO,CACLyD,WAAAA,EACAC,eAAAA,EACAof,aAAAA,EACAnf,gBANsBD,EAAiB,EAAKof,EAAepf,EAAkB,EAO7Esf,gBAAiBxf,EAASkF,OAAO,GAErC,CAAE,MAAOhG,GAEP,OADAsC,QAAQtC,MAAM,iDAAkDA,GACzD,CACLe,WAAY,EACZC,eAAgB,EAChBof,aAAc,EACdnf,gBAAiB,EACjBqf,gBAAiB,GAErB,CAuDJ,IAAC,kBAvFiC,OAAAL,EAAA/c,MAAA,KAAAC,UAAA,KA0FrBwd,GAAkB,eAAAC,GAAA3e,EAAAA,EAAAA,UAAG,YAChC,IAAI8V,GASF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAChBf,KAERI,aAAY,SAAAC,GACbA,EAAGC,WACD,8BACA,IACA,SAACxQ,EAAGrL,GACFqc,GAAQ,EACV,IACA,SAAChR,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,iCAAkCA,GAChD+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,IAzBA,IAEE,aADMoC,EAAAA,QAAaqC,QAAQ,gBAAiBT,KAAKU,UAAU,MACpD,CACT,CAAE,MAAO1E,GAEP,OADAsC,QAAQtC,MAAM,iDAAkDA,IACzD,CACT,CAqBJ,IAAC,kBA7B8B,OAAA4gB,EAAA1d,MAAA,KAAAC,UAAA,KAoJlB0d,GAAsB,SAACxmB,EAAmBymB,EAAgBzjB,GACrE,GAAI0a,GACF,OAAO,IAAIc,QAAQ,WAAD,IAAAkI,GAAA9e,EAAAA,EAAAA,UAAC,UAAO6W,EAASC,GACjC,IACE,IAAM8G,GAAO,IAAI7a,MAAOiX,cAAczP,MAAM,KAAK,GAG7CwU,EAAgB,GACpB,IACE,IAAMC,QAAuB7e,EAAAA,QAAaC,QAAQ,iBAC9C4e,IACFD,EAAgBhd,KAAKC,MAAMgd,GAE/B,CAAE,MAAOjhB,GACPsC,QAAQ8I,KAAK,8CAA+CpL,EAC9D,CAGA,IAAMkhB,EAAaF,EAAc/G,WAAU,SAAA7C,GAAI,OAAIA,EAAKyI,OAASA,CAAI,IAEjEqB,GAAc,GAEhBF,EAAcE,GAAY7mB,mBAAqBA,EAC/C2mB,EAAcE,GAAYJ,gBAAkBA,EAC5CE,EAAcE,GAAY7jB,WAAaA,GAGvC2jB,EAAc/T,KAAK,CACjB4S,KAAAA,EACAxlB,kBAAAA,EACAymB,eAAAA,EACAzjB,UAAAA,EACAuI,GAAIZ,KAAKC,cAKP7C,EAAAA,QAAaqC,QAAQ,gBAAiBT,KAAKU,UAAUsc,IAC3DlI,EAAQ,CAAE6F,aAAc,GAC1B,CAAE,MAAO3e,GACPsC,QAAQtC,MAAM,kDAAmDA,GACjE+Y,EAAO/Y,EACT,CACF,IAAG,OAAF,SAAAmhB,EAAAC,GAAA,OAAAL,EAAA7d,MAAA,KAAAC,UAAE,CAAF,CAzCkB,IA2CnB,IAAMgV,EAAKH,KACX,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3B,IAAM8G,GAAO,IAAI7a,MAAOiX,cAAczP,MAAM,KAAK,GAGjD2L,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WACD,0MAKA,CAACje,EAAmBymB,EAAgBzjB,EAAWwiB,IAC/C,SAAC/X,EAAGrL,GAE0B,IAAxBA,EAAOkiB,aACTtG,EAAGC,WACD,4IAGA,CAACuH,EAAMxlB,EAAmBymB,EAAgBzjB,IAC1C,SAACyK,EAAGuZ,GAAmBvI,EAAQuI,EAAe,IAC9C,SAACvZ,EAAG9H,GAAY+Y,EAAO/Y,EAAQ,IAGjC8Y,EAAQrc,EAEZ,IACA,SAACqL,EAAG9H,GAAY+Y,EAAO/Y,EAAQ,GAEnC,GACF,GAEJ,EAGashB,GAAgB,eAAAC,GAAAtf,EAAAA,EAAAA,UAAG,YAG9B,GAFAK,QAAQW,IAAI,iEAER8U,GAeF,OAAO,IAAIc,SAAQ,SAACC,EAASC,GAC3B,IAAMZ,EAAKH,KAGXG,EAAGC,aAAY,SAAAC,GACbA,EAAGC,WAAW,8CAA+C,IAAI,SAACxQ,EAAC0Z,GAAgB,IAC3E9I,EADmE8I,EAAJhJ,KAClDC,OAAO,GAAGC,MAC7BpW,QAAQW,IAAI,YAAYyV,gCAGxBP,EAAGC,aAAY,SAAA+G,GACbA,EAAQ7G,WACN,4BACA,IACA,SAACxQ,EAAC2Z,GAAwB,IAApB9C,EAAY8C,EAAZ9C,aACJrc,QAAQW,IAAI,WAAW0b,kBACvB7F,GAAQ,EACV,IACA,SAAChR,EAAG9H,GAGF,OAFAsC,QAAQtC,MAAM,+BAAgCA,GAC9C+Y,EAAO/Y,IACA,CACT,GAEJ,GACF,GACF,GACF,IAzCA,IAEE,IAAM0hB,QAAsBtf,EAAAA,QAAaC,QAAQ,eAC3Cme,EAAckB,EAAgB1d,KAAKC,MAAMyd,GAAiB,GAKhE,OAJApf,QAAQW,IAAI,YAAYud,EAAY7V,8CAG9BvI,EAAAA,QAAaqC,QAAQ,cAAeT,KAAKU,UAAU,MAClD,CACT,CAAE,MAAO1E,GAEP,OADAsC,QAAQtC,MAAM,+CAAgDA,IACvD,CACT,CA+BJ,IAAC,kBA/C4B,OAAAuhB,EAAAre,MAAA,KAAAC,UAAA,K,+kBCpxC7B,IAAA8L,GAA0BC,EAAAA,QAAWC,IAAI,UAAjClB,GAAKgB,GAALhB,MAAOC,GAAMe,GAANf,OACTyT,GAAgB1T,GAAQ,IACxB2T,GAAiB3T,IAAS,KAAOA,GAAQ,IAGzCmB,GAAkB,SAAAC,GAAU,OAAKpB,GAAQoB,EAAc,GAAI,EAC3DC,GAAmB,SAAAD,GAAU,OAAKnB,GAASmB,EAAc,GAAI,EAC7DE,GAAqB,SAAAC,GACzB,IAAMqS,EAAahc,KAAK6J,IAAIzB,GAAOC,IAAU,IAEvCuB,EAAckS,GAA6B,IAAbE,EAChBD,GAA8B,GAAbC,EAAmBA,EACxD,OAAOhc,KAAK8J,MAAMH,EAAOC,EAC3B,EAGMqS,GACa,GADbA,GAEQ,KAFRA,GAGmB,GAyuBnB5Z,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBkH,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAWT,GAAiB,GAC5BnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET2Y,cAAe,CACbnS,KAAM,EACNK,QAASb,GAAgB,GACzB7G,eAAgB,UAElByZ,aAAY/W,GAAA,CACVtC,gBAAiB,OACjBC,aAAc,GACdqH,QAASb,GAAgB,IACtBhK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB4T,UAAW,CACTlZ,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP0J,UAAW,SACX9B,aAAc1B,GAAiB,IAEjCzV,gBAAiB,CACfsP,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP4H,aAAc1B,GAAiB,GAC/B4C,WAAY3C,GAAmB,IAC/BuD,UAAW,UAEb7B,oBAAqB,CACnBxI,eAAgB6G,GAAiB,IAEnCwB,aAAc,CACZ3H,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP4H,aAAc1B,GAAiB,MAEjC8B,eAAgB,CACdrI,gBAAiBuG,GAAiB,IAEpC+B,eAAgB,CACd3I,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClCqB,YAAavB,GAAgB,GAC7BxG,aAAc,GACdD,gBAAiB,WAEnB2I,qBAAsB,CACpB3I,gBAAiB,WAEnB4I,mBAAoB,CAClBpI,SAAUoG,GAAmB,IAC7BnG,MAAO,QAEToI,yBAA0B,CACxBpI,MAAO,OACPE,WAAY,OAEdgZ,UAAW,CACTvS,UAAWT,GAAiB,IAE9BiT,UAAW,CACTpZ,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP4H,aAAc1B,GAAiB,MAEjCkT,SAAU,CACRla,cAAe,MACfE,WAAY,SACZwI,aAAc1B,GAAiB,IAEjCmT,SAAU,CACRtZ,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP2H,WAAY3B,GAAgB,IAE9BsT,YAAWzX,GAAA,CACTtC,gBAAiB,UACjBL,cAAe,MACfE,WAAY,SACZD,eAAgB,SAChB0H,QAASX,GAAiB,KAC1B1G,aAAc,GACdmH,UAAWT,GAAiB,IACzBlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjBkU,gBAAiB,CACfvZ,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZqH,YAAavB,GAAgB,IAG/BwT,kBAAmB,CACjBhT,KAAM,EACNjH,gBAAiB,WAEnBkJ,eAAgB,CACdlJ,gBAAiB,UACjBsH,QAASb,GAAgB,GACzB8B,WAA4B,YAAhB9L,EAAAA,QAASC,GAAoBmR,EAAAA,QAAUqM,cAAgBvT,GAAiB,GAAMA,GAAiB,GAC3G6B,cAAe7B,GAAiB,GAChChH,cAAe,MACfC,eAAgB,gBAChBC,WAAY,UAEdsa,eAAgB,CACd1Z,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,QAEdyZ,eAAgB,CACdza,cAAe,MACfE,WAAY,SACZG,gBAAiB,wBACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,IAEhBoa,UAAW,CACT5Z,MAAO,OACPE,WAAY,OACZyH,WAAY3B,GAAgB,GAC5BjG,SAAUoG,GAAmB,KAE/B0C,aAAc,CACZ9I,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPE,WAAY,MACZ4I,WAAY3C,GAAmB,IAC/BU,QAASb,GAAgB,IAE3B+C,eAAgB,CACd3J,WAAY,SACZwI,aAAc1B,GAAiB,GAC/B3G,gBAAiB,UACjB0H,OAAQjB,GAAgB,GACxBa,QAASb,GAAgB,GACzBxG,aAAc,GAEhBwJ,cAAe,CACbnE,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,KAE1B6T,iBAAkB,CAChBhT,QAASb,GAAgB,GACzB8B,WAAY,GAEdgS,aAAYjY,GAAA,CACV3C,cAAe,MACfE,WAAY,SACZG,gBAAiB,OACjBsH,QAASb,GAAgB,KACzBxG,aAAc,GACdoI,aAAc1B,GAAiB,MAC5BlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB0U,eAAgB,CACdxa,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfC,cAAe,CACb3a,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfE,gBAAiB,CACf5a,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfG,aAAc,CACZra,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACPuH,YAAavB,GAAgB,IAE/BqU,WAAY,CACVta,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPwG,KAAM,EACNsC,WAAY3C,GAAmB,KAEjCmU,WAAY,CACV3S,WAAY3B,GAAgB,IAE9BuU,oBAAqB,CACnBrb,cAAe,MACfC,eAAgB,gBAChB0H,QAASb,GAAgB,GACzB8B,WAAY5B,GAAiB,IAE/BsU,UAAW,CACTtb,cAAe,MACfE,WAAY,SACZE,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClC1G,aAAc,GACdD,gBAAiB,WAEnBkb,eAAgB,CACdlb,gBAAiB,WAEnBmb,cAAe,CACb1a,MAAO,UACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,OAEdya,mBAAoB,CAClB3a,MAAO,QAET4a,aAAc,CACZrb,gBAAiB,UACjBD,kBAAmB0G,GAAgB,IAErC6U,iBAAkB,CAChB7a,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,MACZqH,YAAavB,GAAgB,IAE/B8U,kBAAmB,CACjBxb,kBAAmB0G,GAAgB,GACnC+B,cAAe7B,GAAiB,IAElC6U,aAAc,CACZpb,gBAAiBuG,GAAiB,IAEpC8U,aAAc,CACZnW,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,IACxBxG,aAAcwG,GAAgB,GAC9BzG,gBAAiB,UACjBJ,eAAgB,SAChBC,WAAY,SACZmI,YAAavB,GAAgB,GAC7BiU,YAAa,EACbD,YAAa,QAEfiB,mBAAoB,CAClB1b,gBAAiB,UACjBya,YAAa,WAEfkB,qBAAsB,CACpB3b,gBAAiB,UACjBya,YAAa,WAEfmB,iBAAkB,CAChBpb,SAAUoG,GAAmB,IAC7BjG,WAAY,MACZF,MAAO,QAETob,uBAAwB,CACtBpb,MAAO,QAETqb,yBAA0B,CACxBrb,MAAO,WAGTqI,iBAAkB,CAChB7B,KAAM,EACNK,QAASb,GAAgB,IAE3BsV,kBAAmB,CACjB9U,KAAM,EACNjH,gBAAiB,WAEnBgc,eAAgB,CACd1U,QAASb,GAAgB,GACzB+B,cAAe7B,GAAiB,IAElCsV,aAAY3Z,GAAA,CACVtC,gBAAiB,OACjBC,aAAc,GACdic,SAAU,SACV7T,aAAc1B,GAAiB,IAC5BlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjBqW,aAAc,CACZ7U,QAASX,GAAiB,GAC1B9G,WAAY,UAEduc,WAAY,CACV3b,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZ0H,aAAc1B,GAAiB,GAC/BwD,UAAW,UAEbkS,YAAa,CACX/W,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,IACxBxG,aAAcwG,GAAgB,MAC9BzG,gBAAiB,wBACjBJ,eAAgB,SAChBC,WAAY,UAEdyc,WAAY,CACV7b,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,QAEd4b,YAAa,CACXjV,QAASb,GAAgB,IAE3B+V,SAAU,CACR7c,cAAe,MACfC,eAAgB,gBAChByI,aAAc1B,GAAiB,IAEjC8V,SAAU,CACRxV,KAAM,EACNpH,WAAY,UAEd6c,UAAW,CACTlc,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,QAETkc,UAAW,CACTnc,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP2G,UAAWT,GAAiB,KAE9BiW,cAAata,GAAA,CACXgF,QAASb,GAAgB,GACzBzG,gBAAiB,OACjBC,aAAc,GACdoI,aAAc1B,GAAiB,IAC5BlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB+W,YAAa,CACXrc,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP0J,UAAW,SACXZ,WAAY3C,GAAmB,KAEjCkW,cAAe,CACbnd,cAAe,MACfC,eAAgB,eAChBmd,SAAU,QAEZC,aAAY1a,GAAAA,GAAA,CACV3C,cAAe,MACfE,WAAY,SACZD,eAAgB,SAChBI,gBAAiB,OACjBsH,QAASX,GAAiB,KAC1B1G,aAAc,GACdyH,OAAQjB,GAAgB,IACrBhK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAEb,IACFmX,SAAUxW,GAAgB,MAE5ByW,iBAAkB,CAChBD,SAAUxW,GAAgB,IAC1B3G,eAAgB6G,GAAiB,IAEnCwW,iBAAkB,CAChB1c,MAAO,UACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,MACZyH,WAAY3B,GAAgB,IAE9B2W,mBAAoB,CAClBnW,KAAM,EACN3B,MAAO,OACPvF,kBAAmB0G,GAAgB,GACnC4B,aAAc,IAEhBgV,cAAe,CACb9X,OAAQoB,GAAiB,IAE3B2D,eAAgB,CACdrD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdyd,UAAW,CACTjV,aAAc1B,GAAiB,GAC/BnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET8c,iBAAgBjb,GAAA,CACdgF,QAASb,GAAgB,GACzBzG,gBAAiB,OACjBC,aAAc,GACdoI,aAAc1B,GAAiB,IAC5BlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB0X,mBAAoB,CAClB7d,cAAe,MACfE,WAAY,SACZwI,aAAc1B,GAAiB,MAEjC8W,kBAAmB,CACjBjd,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2H,WAAY3B,GAAgB,IAE9BiX,iBAAkB,CAChBld,SAAUoG,GAAmB,IAC7BnG,MAAO,QAETkd,cAAarb,GAAA,CACXtC,gBAAiB,WACdvD,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB8X,mBAAkBtb,GAAA,CAChBgF,QAASX,GAAiB,GAC1BhH,cAAe,MACfE,WAAY,SACZD,eAAgB,SAChBI,gBAAiB,UACjBC,aAAc,GACdoI,aAAc1B,GAAiB,IAC5BlK,EAAAA,QAAS6c,OAAO,CACjBC,IAAK,CACHzT,UAAW,+BAEb0T,QAAS,CACP3T,UAAW,GAEb4T,IAAK,CACH3T,UAAW,kCAIjB+X,iBAAkB,CAChBpd,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZyH,WAAY3B,GAAgB,MAIhC,SAxvCmB,SAAHpN,GAAwB,IAAlB/I,EAAU+I,EAAV/I,WACpBsa,GAAoB9J,EAAAA,EAAAA,kBAATlH,GAAFgR,EAAD7J,EAAO6J,EAAJhR,MAGXkR,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCjX,EAAOmX,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAsCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA9C2S,EAAW1S,EAAA,GAAE2S,EAAc3S,EAAA,GAClCE,GAAwCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAhD0S,EAAYzS,EAAA,GAAE0S,EAAe1S,EAAA,GACpCE,GAAkCV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAAvC5S,EAAS6S,EAAA,GAAEL,EAAYK,EAAA,GAC9BG,GAAwCd,EAAAA,EAAAA,UAAS,GAAEe,GAAAb,EAAAA,EAAAA,SAAAY,EAAA,GAA5CqS,EAAYpS,EAAA,GAAEqS,EAAerS,EAAA,GACpCG,GAA8BlB,EAAAA,EAAAA,UAAS,CAAC,GAAEmB,GAAAjB,EAAAA,EAAAA,SAAAgB,EAAA,GAAnC9J,EAAO+J,EAAA,GAAEkS,EAAUlS,EAAA,GAC1BE,GAA0CrB,EAAAA,EAAAA,UAASoO,IAAuB9M,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAAnEiS,EAAahS,EAAA,GAAEiS,EAAgBjS,EAAA,GACtCkS,GAA8BxT,EAAAA,EAAAA,UAAS,MAAKyT,GAAAvT,EAAAA,EAAAA,SAAAsT,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAoC5T,EAAAA,EAAAA,UAAS,IAAG6T,GAAA3T,EAAAA,EAAAA,SAAA0T,EAAA,GAAzC7sB,EAAU8sB,EAAA,GAAEpT,EAAaoT,EAAA,GAChCC,IAAgD9T,EAAAA,EAAAA,UAAS,OAAM+T,IAAA7T,EAAAA,EAAAA,SAAA4T,GAAA,GAAxDlT,GAAgBmT,GAAA,GAAElT,GAAmBkT,GAAA,GAC5CC,IAA8ChU,EAAAA,EAAAA,UAASnR,EAAK5D,UAAY,MAAKgpB,IAAA/T,EAAAA,EAAAA,SAAA8T,GAAA,GAAtEne,GAAeoe,GAAA,GAAE7S,GAAkB6S,GAAA,GACpCC,IAAWC,EAAAA,EAAAA,QAAO,OAGxBnS,EAAAA,EAAAA,YAAU,WACR,IAAMoS,EAAa,eAAAjb,GAAA5K,EAAAA,EAAAA,UAAG,YACpB,IACE4R,GAAW,GAGX,IAAMtZ,QAAqB4a,GAAiBvI,oBAAoBrD,IAG1D6L,QAAsBD,GAAiB1H,mBAGvCsa,EAAa,CACjB,CAAEniB,GAAI,MAAOlM,MAAO,6BAAQ6N,QAAAC,EAAAA,EAAAA,SACzB4N,EAAcnL,KAAI,SAAAqL,GAAG,MAAK,CAC3B1P,GAAI0P,EACJ5b,MAAOyb,GAAiBtH,uBAAuByH,GAChD,MAGHnB,EAAc4T,GACd/T,EAAazZ,GACbsZ,GAAW,EACb,CAAE,MAAO7T,GACPsC,QAAQtC,MAAM,gCAAiCA,GAC/C6T,GAAW,EACb,CACF,IAAC,kBA1BkB,OAAAhH,EAAA3J,MAAA,KAAAC,UAAA,KA+BnB,OAHA2kB,IAGO,WACDF,GAASI,SACXC,cAAcL,GAASI,QAE3B,CACF,GAAG,CAACze,KAGJ,IAAMiM,GAAoB,eAAAlI,GAAArL,EAAAA,EAAAA,UAAG,UAAOtD,GAMlC,GAJAmW,GAAmBnW,GACnB4D,EAAKkT,eAAe9W,GAGhB8nB,IAAgBE,EAClB,IACE9S,GAAW,GAGX,IAAMqU,EAAmB1mB,EAAUyI,KAAI,SAAAuD,GAErC,GAAIA,EAAE3C,cAAgB2C,EAAE3C,aAAalM,GAAW,CAC9C,IAAMgE,EAAc6K,EAAE3C,aAAalM,GACnC,OAAAsM,GAAAA,GAAA,GACKuC,GAAC,IACJvR,SAAU0G,EAAY1G,SACtB6O,QAASnI,EAAYmI,QACrBc,QAASjJ,EAAYmI,QAAQb,KAAI,SAACiB,EAAKW,GAAG,MAAM,CAC9CjG,GAAIN,OAAOwG,aAAa,GAAKD,GAC7BV,KAAMD,EAAIC,KACVY,UAAWb,EAAI9O,QAChB,KAEL,CAEA,OAAOoR,CACT,IAEAwG,EAAakU,EACf,CAAE,MAAOloB,GACPsC,QAAQtC,MAAM,wCAAyCA,GACvD4V,EAAAA,QAAMC,MACJ,uCACA,mGACA,CAAC,CAAE1K,KAAM,eAAMtB,MAAO,WAE1B,CAAC,QACCgK,GAAW,EACb,MAGA,IACEA,GAAW,GACX,IAAMtZ,QAAqB4a,GAAiBvI,oBAAoBjO,GAChEqV,EAAazZ,EACf,CAAE,MAAOyF,GACPsC,QAAQtC,MAAM,4CAA6CA,GAC3D4V,EAAAA,QAAMC,MACJ,2BACA,+GACA,CAAC,CAAE1K,KAAM,eAAMtB,MAAO,WAE1B,CAAC,QACCgK,GAAW,EACb,CAEJ,IAAC,gBA1DyBxP,GAAA,OAAAiJ,EAAApK,MAAA,KAAAC,UAAA,KA6DpBvJ,GAAS,eAAA8T,GAAAzL,EAAAA,EAAAA,UAAG,YAEhB,IAAIiU,EAAoB1U,EACC,QAArB8S,KACF4B,EAAoB1U,EAAU+L,QAAO,SAAAC,GAAC,OAAIA,EAAEb,WAAa2H,EAAgB,KAI3E,IAAM6T,GAAW3gB,EAAAA,EAAAA,SAAI0O,GAAmBoD,MAAK,iBAAM,GAAMzT,KAAKC,QAAQ,IAGlEsiB,EAAetG,GACnB,WACwBld,OAEpBwjB,EAAeviB,KAAK6J,IAAI,GAAIoS,IAE5BlM,EAAAA,QAAMC,MACJ,uCACA,4EAAgBuS,uHAChB,CACE,CAAEjd,KAAM,eAAMtB,MAAO,UACrB,CAAEsB,KAAM,qBAAOtB,MAAO,UAAWO,QAAS,WAAF,OAAQnR,EAAW6c,SAAS,UAAU,KAItF,CAAE,MAAOhO,GAAI,CAEb,IAGMugB,EAHWF,EAASniB,MAAM,EAAGoiB,GAGCne,KAAI,SAACuD,EAAGqM,GAAK,OAAA5O,GAAAA,GAAA,GAC5CuC,GAAC,IACJ8a,OAAQzO,EAAQ,EAChBjO,QAAS4B,EAAE1C,QAAQb,KAAI,SAACiB,EAAKW,GAAG,MAAM,CACpCjG,GAAIN,OAAOwG,aAAa,GAAKD,GAC7BV,KAAMD,EAAIC,KACVY,UAAWb,EAAI9O,QAChB,KAAE,IAIDisB,EAAmB1d,OAASyd,EAC9BxS,EAAAA,QAAMC,MACJ,2BACA,8CAAWwS,EAAmB1d,4EAC9B,CAAC,CAAEQ,KAAM,eAAMtB,MAAO,aAM1BmK,EAAaqU,GACbvB,EAAgB,GAChBC,EAAW,CAAC,GACZE,EAAiBnF,IACjB4E,GAAe,GACfE,GAAgB,GAGhBgB,GAASI,QAAUO,aAAY,WAC7BtB,GAAiB,SAAAuB,GACf,OAAIA,GAAQ,GAEVP,cAAcL,GAASI,SACvBrsB,KACO,GAEF6sB,EAAO,CAChB,GACF,GAAG,KACL,IAAC,kBAvEc,OAAA9a,EAAAxK,MAAA,KAAAC,UAAA,KAmFTxH,GAAU,eAAAud,GAAAjX,EAAAA,EAAAA,UAAG,YACjB,IAGE,GAFAK,QAAQW,IAAI,sBAEPzB,GAAkC,IAArBA,EAAUmJ,OAG1B,OAFArI,QAAQtC,MAAM,+BACd4V,EAAAA,QAAMC,MAAM,eAAM,oGAKpB+Q,GAAgB,GAChBF,GAAe,GAGXkB,GAASI,UACXC,cAAcL,GAASI,SACvB1lB,QAAQW,IAAI,kBAId,IAAMwlB,EAAoBC,OAAOC,KAAK7d,GAASH,OAC3CrN,EAAe,EACfgB,EAAgB,EACdsqB,EAAkB,CAAC,EAGnBC,EAAmB,GA4CzB,GA1CArnB,EAAUoG,SAAQ,SAAC3L,EAAU4d,GAC3B,GAAK5d,GAAaA,EAAS2J,GAA3B,CAKA,IAAMmW,EAAajR,EAAQ7O,EAAS2J,IAChCzI,EAAgB,IAGpB,GAAIlB,EAAS2P,SAAWb,MAAMC,QAAQ/O,EAAS2P,SAAU,CACvD,IAAM0X,EAAgBrnB,EAAS2P,QAAQ6N,MAAK,SAAAqP,GAAG,OAAIA,EAAI/c,SAAS,IAC5DuX,EACFnmB,EAAgBmmB,EAAc1d,GAE9BtD,QAAQ8I,KAAK,wCAAwCnP,EAAS2J,KAElE,MACEtD,QAAQ8I,KAAK,YAAYnP,EAAS2J,0BAGpC,IAAMmG,EAAYgQ,IAAe5e,EAE7B4O,EACFzO,KAGAgB,IACAuqB,EAAiB5b,KAAK,CACpBrH,GAAI3J,EAAS2J,GACbmW,WAAsB,MAAVA,EAAAA,EAAc,QAI9B6M,EAAgB3sB,EAAS2J,IAAM,CAC7BmW,WAAAA,EACA5e,cAAAA,EACA4O,UAAAA,EAjCF,MAFEzJ,QAAQ8I,KAAK,6BAA6ByO,KAAU5d,EAqCxD,IAGI4sB,EAAiBle,OAAS,EAAG,CAC/BrI,QAAQW,IAAI,aAAa4lB,EAAiBle,8BAC1C,UACQmS,GAAoB+L,GAC1BvmB,QAAQW,IAAI,qCACd,CAAE,MAAOkB,GACP7B,QAAQtC,MAAM,kCAAmCmE,GAEjD,UACQ0U,QAAQkQ,IAAIF,EAAiB5e,KAAI,SAAArD,GAAC,OAAIiV,GAAcjV,EAAEhB,GAAIgB,EAAEmV,WAAW,IAC/E,CAAE,MAAOiN,GACP1mB,QAAQtC,MAAM,sCAAuCgpB,EACvD,CACF,CACF,CAEA,IAAMpsB,EAAQ4E,EAAUmJ,OAAS,EAAKrN,EAAekE,EAAUmJ,OAAU,IAAM,EACzEtN,EAAYykB,GAAyBkF,EACrCiC,EAAWrsB,GAASklB,GAGpBoH,EAAa,CACjBrJ,MAAM,IAAI7a,MAAOiX,cACnBrf,MAAAA,EACES,UAAAA,EACA2D,eAAgBQ,EAAUmJ,OAC1BrN,aAAAA,EACAC,eAAgBe,EAChBmqB,kBAAAA,EACAU,oBAAqB3nB,EAAUmJ,OAAS8d,EACxCQ,SAAAA,EACAL,gBAAAA,GAGFtmB,QAAQW,IAAI,0BAGZokB,EAAW6B,GAGX,UDgwBwB,SAACA,GAC7B,OACS,IAAIrQ,QADTd,GACiB,WAAD,IAAAqR,GAAAnnB,EAAAA,EAAAA,UAAC,UAAO6W,EAASC,GACjC,IAEE,IAAIyH,EAAc,GAClB,IACE,IAAMkB,QAAsBtf,EAAAA,QAAaC,QAAQ,eAC7Cqf,IACFlB,EAAcxc,KAAKC,MAAMyd,GAE7B,CAAE,MAAO1hB,GACPsC,QAAQ8I,KAAK,4CAA6CpL,EAC5D,CAGA,IAAMqpB,EAAape,GAAAA,GAAA,GACdie,GAAU,IACbtjB,GAAIZ,KAAKC,QAEXub,EAAYvT,KAAKoc,SAGXjnB,EAAAA,QAAaqC,QAAQ,cAAeT,KAAKU,UAAU8b,UAGnDK,GACJqI,EAAWT,kBACXS,EAAW5rB,aACX4rB,EAAW7rB,WAGbyb,EAAQ,CAAEwQ,SAAUtkB,KAAKC,OAC3B,CAAE,MAAOjF,GACPsC,QAAQtC,MAAM,6CAA8CA,GAC5D+Y,EAAO/Y,EACT,CACF,IAAG,OAAF,SAAAupB,EAAAC,GAAA,OAAAJ,EAAAlmB,MAAA,KAAAC,UAAE,CAAF,CAnCkB,GAqCA,SAAC2V,EAASC,GAC3B,IACE8G,EAUEqJ,EAVFrJ,KACAjjB,EASEssB,EATFtsB,MACAS,EAQE6rB,EARF7rB,UACA2D,EAOEkoB,EAPFloB,eACA1D,EAME4rB,EANF5rB,aACAC,EAKE2rB,EALF3rB,eACAkrB,EAIES,EAJFT,kBACAU,EAGED,EAHFC,oBACAF,EAEEC,EAFFD,SACAL,EACEM,EADFN,gBAIIa,EAAczlB,KAAKU,UAAUkkB,GAAmB,CAAC,GAE5C5Q,KACRI,aAAY,SAAAC,GACbA,EAAGC,WACD,yPAKA,CACEuH,EACAjjB,EACAS,EACA2D,EACA1D,EACAC,EACAkrB,EACAU,EACAF,EAAW,EAAI,EACfQ,IAEF,SAAC3hB,EAAGrL,GAEFokB,GACE4H,EACAnrB,EACAD,GAEFyb,EAAQrc,EACV,IACA,SAACqL,EAAG9H,GAAY+Y,EAAO/Y,EAAQ,GAEnC,GACF,EAEJ,CCz1Bc0pB,CAAeR,GACrB5mB,QAAQW,IAAI,gCACd,CAAE,MAAOjD,GACPsC,QAAQtC,MAAM,8BAA+BA,EAE/C,CAGA,UACQ6gB,GAAoB4H,EAAmBnrB,EAAcD,GAC3DiF,QAAQW,IAAI,yBACd,CAAE,MAAOjD,GACPsC,QAAQtC,MAAM,mCAAoCA,EACpD,CAEAsC,QAAQW,IAAI,8CACd,CAAE,MAAOjD,GACPsC,QAAQtC,MAAM,uBAAwBA,GACtC4V,EAAAA,QAAMC,MACJ,eACA,+FAAsB7V,EAAMqL,QAC5B,CAAC,CAAEF,KAAM,eAAMtB,MAAO,YAE1B,CACF,IAAC,kBAxIe,OAAAqP,EAAAhW,MAAA,KAAAC,UAAA,KA2IVwmB,GAAW,WAEXvC,EACFnuB,EAAW6c,SAAS,OAAQ,CAC1B8T,eAAe,EACfpJ,YAAa,CACX5jB,MAAOiJ,KAAK8J,MAAMyX,EAAQxqB,OAC1BU,aAAc8pB,EAAQ9pB,aACtBC,eAAgB6pB,EAAQ7pB,eACxBsiB,MAAM,IAAI7a,MAAOiX,iBAIrBhjB,EAAW6c,SAAS,OAExB,EAGM+T,GAAe,WACnB5wB,EAAW6c,SAAS,WACtB,EAGMgU,GAAc,WAClBpD,GAAe,GACfE,GAAgB,GAChBG,EAAW,CAAC,GACZM,EAAW,KACb,EAGM0C,GAAa,SAAAC,GACjB,IACMC,EAAOD,EAAU,GACvB,MAAO,GAFMnkB,KAAKqkB,MAAMF,EAAU,IAEnBjkB,WAAWokB,SAAS,EAAG,QAAQF,EAAKlkB,WAAWokB,SAAS,EAAG,MAC5E,EAgRMC,GAAqB,SAAH/Q,GAAA,IAAMjC,EAAIiC,EAAJjC,KAAI,OAChCzN,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO,CACL3B,GAAOmJ,eACPiD,KAAqB8C,EAAKxR,IAAMsC,GAAOoJ,sBAEzClH,QAAS,WAAF,OAAQmK,GAAoB6C,EAAKxR,GAAG,EAACkE,UAE5CH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CACHR,MAAO,CACL3B,GAAOqJ,mBACP+C,KAAqB8C,EAAKxR,IAAMsC,GAAOsJ,0BACvC1H,SAEDsN,EAAK1d,SAES,EA0DrB,OAAI8C,GAEAuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAC,0CAMrCiM,EAAAA,GAAAA,MAACQ,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,eAAe9N,gBAAgB,aAEjD8d,IAAgBE,IAjElB5Q,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO6Z,cAAcjY,SAAA,EAChCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8Z,aAAalY,SAAA,EAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOma,UAAUvY,SAAC,0CAC/BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOrO,gBAAgBiQ,SAAA,CAAC,iCAC7BgY,GAA4B,6CAAQjc,KAAKqkB,MAAMpI,GAAyB,IAAI,0DAC3EA,GAAkC,8IAG3C/L,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+I,oBAAoBnH,SAAA,EACtCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,0CAClCH,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPC,YAAU,EACVC,KAAMzc,EACN0c,WAAYiT,GACZ/S,aAAc,SAACD,GAAI,OAAKA,EAAKxR,EAAE,EAC/B0R,gCAAgC,EAChCC,sBAAuBrP,GAAOkJ,qBAIlC2E,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOoa,UAAUxY,SAAA,EAC5BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOqa,UAAUzY,SAAC,oCAC/BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOsa,SAAS1Y,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC/DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOua,SAAS3Y,SAAC,yGAEhCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOsa,SAAS1Y,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC/DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOua,SAAS3Y,SAAC,2EAEhCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOsa,SAAS1Y,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC/DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOua,SAAS3Y,SAAC,iFAEhCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOsa,SAAS1Y,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC/DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOua,SAAS3Y,SAAC,yGAKpCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAOwa,YACdtY,QAASxQ,GAAUkQ,SAAA,EAEnBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOya,gBAAgB7Y,SAAC,8BACrCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,uBAAuByF,KAAMD,GAAmB,IAAKnG,MAAM,eAoB7Eqd,IAAgBE,GArWS,WAC5B,IAAM1qB,EAAWuF,EAAUqlB,GAC3B,IAAK5qB,EAAU,OAAO,KAEtB,IAAM8f,EAAajR,EAAQ7O,EAAS2J,IAEpC,OACEmQ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0a,kBAAkB9Y,SAAA,EACpCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2J,eAAe/H,SAAA,EACjCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO4a,eAAehZ,SAAA,CAAC,gBAC9B+c,EAAe,EAAE,IAAErlB,EAAUmJ,WAEjCoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO6a,eAAejZ,SAAA,EACnCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAMD,GAAmB,IAAKnG,MAAM,aAClEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8a,UAAUlZ,SAAEigB,GAAW/C,YAK/Crd,EAAAA,GAAAA,KAAC+M,GAAwB,CACvBnN,gBAAiBA,GACjBC,iBAAkBgM,MAGpBO,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAACxgB,MAAO3B,GAAO6d,mBAAoBpO,8BAA8B,EAAK7N,SAAA,EAC/EH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+J,aAAanI,SAAE7N,EAASA,WAE3CA,EAASmQ,cACRzC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOiK,eAAerI,UACjCH,EAAAA,GAAAA,KAAC8N,GAAAA,QAAKxM,GAAA,CACJ3D,OAAQrL,EAASmQ,aACbsC,GAAazD,GAAAA,GAAC,CAAC,EACd/C,GAAOkK,eAAa,IACvBxD,WAAY,kBAMpBjF,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO+a,iBAAiBnZ,SAClC7N,EAAS2P,QAAQ3B,KAAI,SAACqgB,GAAM,OAC3BvU,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAEfN,MAAO,CACL3B,GAAOgb,aACPnH,IAAeuO,EAAO1kB,IAAMsC,GAAOib,eACnCwD,GAAgB2D,EAAOve,WAAa7D,GAAOob,cAC3CqD,GAAgB5K,IAAeuO,EAAO1kB,KAAO0kB,EAAOve,WAAa7D,GAAOqb,iBAE1EnZ,QAAS,WAAF,OAASuc,GA3OT,SAAC3U,EAAYuY,GAChC,IAAMC,EAAUvf,GAAAA,GAAA,GACXH,GAAO,IAAA2f,EAAAA,EAAAA,SAAA,GACTzY,EAAauY,IAEhBxD,EAAWyD,EACb,CAqO8CtuB,CAAaD,EAAS2J,GAAI0kB,EAAO1kB,GAAG,EACpE8kB,SAAU/D,EAAa7c,SAAA,EAEvBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOsb,aAAa1Z,SAAEwgB,EAAO1kB,MAC1C+D,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOub,WAAW3Z,SAAEwgB,EAAOnf,OAEvCwb,IACC2D,EAAOve,WACLpC,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAMD,GAAmB,IAAKnG,MAAM,UAAUS,MAAO3B,GAAOwb,aAE9F3H,IAAeuO,EAAO1kB,KACpB+D,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAMD,GAAmB,IAAKnG,MAAM,UAAUS,MAAO3B,GAAOwb,gBAlB3F4G,EAAO1kB,GAsBK,OAIvBmQ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOyb,oBAAoB7Z,SAAA,EACtCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAO0b,UAA4B,IAAjBiD,GAAsB3e,GAAO2b,gBACvDzZ,QAAS,WACHyc,EAAe,GAAGC,EAAgBD,EAAe,EACvD,EACA6D,SAA2B,IAAjB7D,EAAmB/c,SAAA,EAE7BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAMD,GAAmB,IAAKnG,MAAM,aAClEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4b,cAAcha,SAAC,0BAKpC+c,EAAerlB,EAAUmJ,OAAS,GACjCoL,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAO0b,UACdxZ,QAAS,WAAF,OAAQ0c,EAAgBD,EAAe,EAAE,EAAC/c,SAAA,EAEjDH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4b,cAAcha,SAAC,wBACnCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAMD,GAAmB,IAAKnG,MAAM,gBAGvE2M,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAO0b,UAAW1b,GAAO8b,cACjC5Z,QAASzO,GAAWmO,SAAA,EAEpBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+b,iBAAiBna,SAAC,kBACtCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAMD,GAAmB,IAAKnG,MAAM,gBAM5EO,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAAEqE,OAAQ,WAGzBvE,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOgc,kBAAkBpa,UACpCH,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPC,YAAU,EACVC,KAAM1V,EACN6V,aAAc,SAACD,GAAI,OAAKA,EAAKxR,GAAGG,UAAU,EAC1CoR,WAAY,SAAFiC,GAAA,IAAKhC,EAAIgC,EAAJhC,KAAMyC,EAAKT,EAALS,MAAK,OACxBlQ,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO,CACL3B,GAAOkc,aACPvK,IAAUgN,GAAgB3e,GAAOmc,mBACjCvZ,EAAQsM,EAAKxR,KAAOsC,GAAOoc,sBAE7Bla,QAAS,WAAF,OAAQ0c,EAAgBjN,EAAM,EAAC/P,UAEtCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CACHR,MAAO,CACL3B,GAAOqc,iBACP1K,IAAUgN,GAAgB3e,GAAOsc,uBACjC1Z,EAAQsM,EAAKxR,KAAOsC,GAAOuc,0BAC3B3a,SAED+P,EAAQ,KAEM,EAErBvC,gCAAgC,EAChCC,sBAAuBrP,GAAOic,mBAKxC,CA6NqCwG,GAChChE,GA3NqB,WACxB,IAAKS,EAEL,OADE9kB,QAAQtC,MAAM,mCAEZ+V,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+K,eAAenJ,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAMD,GAAmB,IAAKnG,MAAM,aAClEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+d,UAAUnc,SAAC,sDAC/BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAOyd,aAAcvb,QAASuf,GAAS7f,UAC9DH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4d,iBAAiBhc,SAAC,kCAM9C,IACElN,EAQEwqB,EARFxqB,MACAS,EAOE+pB,EAPF/pB,UACA2D,EAMEomB,EANFpmB,eACA1D,EAKE8pB,EALF9pB,aACAC,EAIE6pB,EAJF7pB,eACAkrB,EAGErB,EAHFqB,kBACAU,EAEE/B,EAFF+B,oBACAF,EACE7B,EADF6B,SAKJ,OAFE3mB,QAAQW,IAAI,0BAA2B,CAAErG,MAAAA,EAAOqsB,SAAAA,KAG9ClT,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAACxgB,MAAO3B,GAAOwc,kBAAmBnN,sBAAuBrP,GAAOyc,eAAe7a,SAAA,EACxFiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOqe,mBAAmBzc,SAAA,EACrCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAMD,GAAmB,IAAKnG,MAAM,UACtEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOse,iBAAiB1c,SAAC,uCAGxCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0c,aAAa9a,SAAA,EAC/BiM,EAAAA,GAAAA,MAAC6U,GAAAA,eAAc,CACbC,OAAQ5B,EAAW,CAAC,UAAW,WAAa,CAAC,UAAW,WACxDpf,MAAO3B,GAAO4c,aAAahb,SAAA,EAE3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO6c,WAAWjb,SAC5Bmf,EAAW,2BAAS,oCAEvBtf,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO8c,YAAYlb,UAC9BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO+c,WAAWnb,SAAA,CAAEjE,KAAK8J,MAAM/S,GAAO,aAIvDmZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgd,YAAYpb,SAAA,EAC9BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOid,SAASrb,SAAA,EAC3BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEigB,GAAW1sB,MAC3CsM,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,qBAEjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAE9I,KAChC2I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,2BAEjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAE2e,KAChC9e,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,8BAInCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOid,SAASrb,SAAA,EAC3BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAC3B,GAAOmd,UAAW,CAAEjc,MAAO,YAAaU,SAAExM,KACxDqM,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,qBAEjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAC3B,GAAOmd,UAAW,CAAEjc,MAAO,YAAaU,SAAEvM,KACxDoM,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,qBAEjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAC3B,GAAOmd,UAAW,CAAEjc,MAAO,YAAaU,SAAEqf,KACxDxf,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,8BAMvCH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOqd,cAAczb,UAChCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOsd,YAAY1b,SAC7Bmf,EACG,+JACA,+KAIP1rB,EAAiB,IAChBwY,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOge,iBAAiBpc,SAAA,EACnCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOie,mBAAmBrc,SAAA,EACrCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,qBAAqByF,KAAMD,GAAmB,IAAKnG,MAAM,aACxEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOke,kBAAkBtc,SAAC,mDAEzCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOme,iBAAiBvc,SAAA,CAAC,wCAC5BvM,EAAe,6MAK7BwY,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOud,cAAc3b,SAAA,EAC5BiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACnBN,MAAO,CAAC3B,GAAOyd,aAAczd,GAAO2d,kBACpCzb,QAASyf,GAAa/f,SAAA,EAEtBH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAMD,GAAmB,IAAKnG,MAAM,aAClEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4d,iBAAiBhc,SAAC,iCAGpCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACnBN,MAAO,CAAC3B,GAAOyd,aAAczd,GAAO2d,kBACpCzb,QAAS0f,GAAYhgB,SAAA,EAErBH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,UAAUyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC7DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4d,iBAAiBhc,SAAC,iCAGxCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAOyd,aAAczd,GAAO2d,iBAAkB3d,GAAOoe,eAC7Dlc,QAASuf,GAAS7f,SAAA,EAElBH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,OAAOyF,KAAMD,GAAmB,IAAKnG,MAAM,UAC1DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAC3B,GAAO4d,iBAAkB,CAAE1c,MAAO,SAAUU,SAAC,qCAKrE,CA4FqBghB,KAGvB,E,+kBC1vBe,IAAI9lB,KAAK,cAMT,IAAIA,KAAK,cAMT,IAAIA,KAAK,cAjBxB,IAwPMkD,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBkH,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAW,GACX5G,SAAU,GACVC,MAAO,QAET4G,OAAQ,CACNC,QAAS,GACTtH,gBAAiB,OACjBuH,kBAAmB,EACnBC,kBAAmB,WAErBzW,MAAO,CACLyP,SAAU,GACVG,WAAY,OACZF,MAAO,WAETzP,SAAU,CACRwP,SAAU,GACVC,MAAO,QAET2hB,cAAe,CACbziB,cAAe,OAEjB0iB,aAAc,CACZja,WAAY,GACZd,QAAS,GAEXgb,iBAAkB,CAChB7hB,MAAO,UACPE,WAAY,MACZH,SAAU,IAEZ+hB,aAAc,CACZliB,iBAAkB,IAEpBmiB,iBAAkB,CAChB/hB,MAAO,WAETgiB,cAAe,CACbnb,QAAS,IAEXob,aAAc,CACZ1iB,gBAAiB,OACjBC,aAAc,EACdqH,QAAS,GACTe,aAAc,GACd1I,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZ8H,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,IACfC,aAAc,EACdjC,UAAW,GAEb8c,aAAc,CACZ3iB,gBAAiB,WAEnB4iB,kBAAmB,CACjB5a,YAAa,GACbpI,eAAgB,UAElBijB,gBAAiB,CACf5b,KAAM,EACNe,YAAa,GAEf8a,eAAgB,CACdnjB,cAAe,MACfC,eAAgB,gBAChByI,aAAc,GAEhB0a,iBAAkB,CAChBtiB,MAAO,UACPD,SAAU,GACVG,WAAY,OAEdqiB,aAAc,CACZviB,MAAO,OACPD,SAAU,IAEZyiB,iBAAkB,CAChBziB,SAAU,GACVC,MAAO,QAETyiB,gBAAiB,CACfvjB,cAAe,MACfC,eAAgB,YAElBmK,WAAY,CACV/J,gBAAiB,UACjBD,kBAAmB,GACnBK,gBAAiB,EACjBH,aAAc,GAEhB+J,eAAgB,CACdvJ,MAAO,UACPE,WAAY,MACZH,SAAU,IAEZyJ,eAAgB,CACdhD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,SACZyH,QAAS,IAEX4C,UAAW,CACT9C,UAAW,GACX5G,SAAU,GACVC,MAAO,OACP0J,UAAW,YAIf,SA9VwB,WACtB,IAAQpJ,GAAMD,EAAAA,EAAAA,kBAANC,EACFzQ,GAAaua,EAAAA,EAAAA,iBACnBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCjX,EAAOmX,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAkCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAvCza,EAAS0a,EAAA,GAAE+X,EAAY/X,EAAA,GAC9BE,GAAkCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAA1C8X,EAAS7X,EAAA,GAAE8X,EAAY9X,EAAA,GAC9BE,GAA0CV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAA/C6X,EAAa5X,EAAA,GAAE6X,EAAgB7X,EAAA,GAGhC8X,EAAa,eAAAnqB,GAAAC,EAAAA,EAAAA,UAAG,YACpB,IACE4R,GAAW,GACXvR,QAAQW,IAAI,wBACZ,IAAMiU,QAAaqE,KACnBjZ,QAAQW,IAAI,UAAUiU,EAAKvM,yBAG3B,IAAMyhB,EAAgBlV,EAAKjN,KAAI,SAAAmN,GAE7B,IAAIiD,EACJ,IACEA,EAAYjD,EAAKiD,qBAAqBrV,KACpCoS,EAAKiD,UACL,IAAIrV,KAAKoS,EAAKiD,WAAajD,EAAKkD,WAAatV,KAAKC,MACtD,CAAE,MAAOd,GACP7B,QAAQtC,MAAM,sBAAuBmE,GACrCkW,EAAY,IAAIrV,IAClB,CAEA,OAAAiG,GAAAA,GAAA,GACKmM,GAAI,IACPiD,UAAWA,GAEf,IAEAyR,EAAaM,GACbvY,GAAW,EACb,CAAE,MAAO7T,GACPsC,QAAQtC,MAAM,2BAA4BA,GAC1C6T,GAAW,GACXiY,EAAa,GACf,CACF,IAAC,kBAjCkB,OAAA9pB,EAAAkB,MAAA,KAAAC,UAAA,MAmCnBuS,EAAAA,EAAAA,YAAU,WAKR,OAJAyW,IAGoBlzB,EAAWozB,YAAY,QAASF,EAEtD,GAAG,CAAClzB,IAGJ,IAAMqzB,EAAiB,WACrBN,GAAcD,GACdG,EAAiB,GACnB,EAGMK,EAAmB,SAAC3mB,GACpBqmB,EAAc7kB,SAASxB,GACzBsmB,EAAiBD,EAAc1e,QAAO,SAAAif,GAAM,OAAIA,IAAW5mB,CAAE,KAE7DsmB,EAAiB,GAAD3kB,QAAAC,EAAAA,EAAAA,SAAKykB,GAAa,CAAErmB,IAExC,EAGM6mB,EAAc,eAAA5f,GAAA5K,EAAAA,EAAAA,UAAG,YACrB,IAEE,IAAK,IAAMuqB,KAAUP,QACbzR,GAAoBgS,SAGtBL,IACND,EAAiB,IACjBF,GAAa,EACf,CAAE,MAAOhsB,GACPsC,QAAQtC,MAAM,uCAAwCA,EACxD,CACF,IAAC,kBAbmB,OAAA6M,EAAA3J,MAAA,KAAAC,UAAA,KAwBdwS,EAAsB,SAAC1Z,GAC3BhD,EAAW6c,SAAS,iBAAkB,CAAE9D,WAAY/V,EAAS2J,IAC/D,EA4DA,OAAIpJ,GAEAuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAEJ,EAAE,wBAMxCqM,EAAAA,GAAAA,MAACQ,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAAAE,SAAA,EACHH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAEJ,EAAE,sBAC9BqM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOvO,SAASmQ,SAAA,CAAC,sBAAKzQ,EAAUsR,OAAO,4BAErDtR,EAAUsR,OAAS,IAClBhB,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO6iB,cAAcjhB,SAC/BiiB,GACChW,EAAAA,GAAAA,MAAA2W,GAAAA,SAAA,CAAA5iB,SAAA,EACEH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAO8iB,aACd5gB,QA5FQ,WAClB6hB,EAActhB,SAAWtR,EAAUsR,OACrCuhB,EAAiB,IAEjBA,EAAiB7yB,EAAU4Q,KAAI,SAAAmN,GAAI,OAAIA,EAAKxR,EAAE,IAElD,EAsFyCkE,UAEzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+iB,iBAAiBnhB,SAClCmiB,EAActhB,SAAWtR,EAAUsR,OAAS,2BAAS,oBAG1DhB,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAO8iB,aAAc9iB,GAAOgjB,cACpC9gB,QAASqiB,EACT/B,SAAmC,IAAzBuB,EAActhB,OAAab,UAErCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAC3B,GAAO+iB,iBAAkB/iB,GAAOijB,kBAAkBrhB,SAAC,oBAInEH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAO8iB,aACd5gB,QAASkiB,EAAexiB,UAExBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+iB,iBAAiBnhB,SAAC,uBAI1CH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAO8iB,aACd5gB,QAASkiB,EAAexiB,UAExBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+iB,iBAAiBnhB,SAAC,wBAO/CzQ,EAAUsR,OAAS,GAClBhB,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPE,KAAM7d,EACN8d,WArHmB,SAAH7J,GAAkB,IAAZ8J,EAAI9J,EAAJ8J,KAExBuV,EAAa,GACjB,IACEA,EAAavV,EAAKiD,qBAAqBrV,KACrCoS,EAAKiD,UAAUuS,qBACf,IAAI5nB,KAAKoS,EAAKiD,WAAarV,KAAKC,OAAO2nB,oBAC3C,CAAE,MAAOzoB,GACP7B,QAAQtC,MAAM,yBAA0BmE,GACxCwoB,GAAa,IAAI3nB,MAAO4nB,oBAC1B,CAEA,OACE7W,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CACL3B,GAAOmjB,aACPU,GAAaE,EAAc7kB,SAASgQ,EAAKxR,KAAOsC,GAAOojB,cAEzDlhB,QAAS,WACH2hB,EACFQ,EAAiBnV,EAAKxR,IAEtB+P,EAAoByB,EAExB,EACAyV,YAAaP,EAAexiB,SAAA,CAE3BiiB,IACCpiB,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAOqjB,kBACdnhB,QAAS,WAAF,OAAQmiB,EAAiBnV,EAAKxR,GAAG,EAACkE,UAEzCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CACPlM,KAAMkiB,EAAc7kB,SAASgQ,EAAKxR,IAAM,WAAa,iBACrD4J,KAAM,GACNpG,MAAO6iB,EAAc7kB,SAASgQ,EAAKxR,IAAM,UAAY,YAI3DmQ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOsjB,gBAAgB1hB,SAAA,EAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOujB,eAAe3hB,SAAA,EACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOwjB,iBAAiB5hB,SAAEsN,EAAKzK,YAC5ChD,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyjB,aAAa7hB,SAAE6iB,QAErChjB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO0jB,iBAAiB9hB,SAAEsN,EAAKnb,YAC5C0N,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO2jB,gBAAgB/hB,UAClCH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAOwK,WACdtI,QAAS,WAAF,OAAQuL,EAAoByB,EAAK,EAACtN,UAEzCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyK,eAAe7I,SAAC,sCAMhD,EA8DQuN,aAAc,SAACD,GAAI,IAAAM,EAAA,OAAY,OAAPA,EAAAN,EAAKxR,SAAE,EAAP8R,EAAS3R,aAAcF,KAAKC,SAASC,UAAU,EACvEwR,sBAAuBrP,GAAOkjB,iBAGhCrV,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0K,eAAe9I,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,gBAAgByF,KAAM,GAAIpG,MAAM,aAC/CO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2K,UAAU/I,SAAEJ,EAAE,gCAK5C,E,+lBCpPA,IAAAuF,GAA0BC,EAAAA,QAAWC,IAAI,UAAjClB,GAAKgB,GAALhB,MAAOC,GAAMe,GAANf,OAGTkB,GAAkB,SAACC,GAAU,OAAMpB,GAAQoB,EAAc,GAAI,EAC7DC,GAAmB,SAACD,GAAU,OAAMnB,GAASmB,EAAc,GAAI,EAC/DE,GAAqB,SAACC,GAC1B,IAAMC,EAAc5J,KAAK6J,IAAIzB,GAAOC,IAAU,IAC9C,OAAOrI,KAAK8J,MAAMH,EAAOC,EAC3B,EAEe,SAASqd,GAAU9qB,GAAkB,IAAf/I,EAAU+I,EAAV/I,WAE3ByQ,GAAMD,EAAAA,EAAAA,kBAANC,EACR+J,GAA0BC,EAAAA,EAAAA,UAAS,CACjC3S,WAAY,EACZC,eAAgB,EAChBC,gBAAiB,IACjB0S,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAJK0M,EAAKxM,EAAA,GAAEoZ,EAAQpZ,EAAA,GAKtBG,GAA4CJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAhD7V,EAAc8V,EAAA,GAAEiZ,EAAiBjZ,EAAA,GACxCE,GAA0CP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAA9C3V,EAAa4V,EAAA,GAAE+Y,EAAgB/Y,EAAA,GAGhCgZ,EAAW,CACf,CACEtnB,GAAI,SACJoE,KAAM,OACNmjB,OAAQ,SACR/jB,MAAO,WAET,CACExD,GAAI,OACJoE,KAAM,SACNmjB,OAAQ,OACR/jB,MAAO,WAET,CACExD,GAAI,YACJoE,KAAM,QACNmjB,OAAQ,YACR/jB,MAAO,UACPgkB,MAAOnvB,GAET,CACE2H,GAAI,WACJoE,KAAM,eACNmjB,OAAQ,WACR/jB,MAAO,UACPgkB,MAAO9uB,KAKXoX,EAAAA,EAAAA,YAAU,WACR,IAAI2X,GAAY,EAEVC,EAAS,eAAAzgB,GAAA5K,EAAAA,EAAAA,UAAG,YAChB,IACE,IAAMsrB,QAAsBvN,KACxBqN,GACFN,EAAS,CACPhsB,WAAYwsB,EAAcxsB,WAC1BC,eAAgBusB,EAAcvsB,eAC9BC,gBAAiBssB,EAActsB,iBAGrC,CAAE,MAAOjB,GACPsC,QAAQtC,MAAM,8BAA+BA,EAC/C,CACF,IAAC,kBAbc,OAAA6M,EAAA3J,MAAA,KAAAC,UAAA,KAeTqqB,EAAkB,eAAAlgB,GAAArL,EAAAA,EAAAA,UAAG,YACzB,IACE,IAAM5I,QAAkBkiB,KACpB8R,GACFL,EAAkB3zB,EAAUsR,OAEhC,CAAE,MAAO3K,GACPsC,QAAQtC,MAAM,kCAAmCA,EACnD,CACF,IAAC,kBATuB,OAAAsN,EAAApK,MAAA,KAAAC,UAAA,KAWlBsqB,EAAiB,eAAA/f,GAAAzL,EAAAA,EAAAA,UAAG,YACxB,IACE,IAAM3I,QAAiB4kB,KACnBmP,GACFJ,EAAiB3zB,EAASqR,OAE9B,CAAE,MAAO3K,GACPsC,QAAQtC,MAAM,iCAAkCA,EAClD,CACF,IAAC,kBATsB,OAAA0N,EAAAxK,MAAA,KAAAC,UAAA,KAYvBmqB,IACAE,IACAC,IAGA,IAAMC,EAAcz0B,EAAWozB,YAAY,SAAS,WAClDiB,IACAE,IACAC,GACF,IAGA,OAAO,WACLJ,GAAY,EACZK,GACF,CACF,GAAG,CAACz0B,KAGJyc,EAAAA,EAAAA,YAAU,YACiB,WAAO,IAADiY,EACvBC,EAAQ30B,EAAW40B,WAAWC,OAAOrU,MAAK,SAAAsU,GAAC,MAAe,SAAXA,EAAEhkB,IAAe,IACtE,GAAS,MAAL6jB,GAAa,OAARD,EAALC,EAAOzU,SAAPwU,EAAe/D,cAAe,CAChC,IAAMpJ,EAAcoN,EAAMzU,OAAOqH,YAGjCwN,YAAW,WACTpY,EAAAA,QAAMC,MACJ,iCACA,yCAAW2K,EAAY5jB,yBAChB4jB,EAAYljB,sCACZkjB,EAAYjjB,6BAChBijB,EAAYjjB,eAAiB,EAC9B,2HACA,oDACF,CACE,CAAE4N,KAAM,2BAAQtB,MAAO,WACvB,CACEsB,KAAMqV,EAAYjjB,eAAiB,EAAI,2BAAS,2BAChD6M,QAAS,WAAF,OAAQoW,EAAYjjB,eAAiB,EAC1CtE,EAAW6c,SAAS,YACpB7c,EAAW6c,SAAS,SAAS,EAC/BjM,MAAO,YAIf,GAAG,KAGH5Q,EAAWg1B,UAAU,CAAErE,mBAAehf,EAAW4V,iBAAa5V,GAChE,CACF,CAEAsjB,EACF,GAAG,CAACj1B,IAEJ,IAAMk1B,EAAkB,SAACvoB,GACvB,OAAQA,GACN,IAAK,SAAU,OAAO8D,EAAE,oBACxB,IAAK,OAAQ,OAAOA,EAAE,kBACtB,IAAK,YAAa,OAAOA,EAAE,kBAC3B,IAAK,WAAY,OAAOA,EAAE,uBAC1B,QAAS,MAAO,GAEpB,EAYA,OACEqM,EAAAA,GAAAA,MAACQ,GAAAA,aAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,eAAe9N,gBAAgB,aACnDoN,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CACT1S,8BAA8B,EAC9BJ,sBAAuBrP,GAAOkmB,cAActkB,SAAA,EAG5CH,EAAAA,GAAAA,KAACihB,GAAAA,eAAc,CACbC,OAAQ,CAAC,UAAW,UAAW,WAC/BhhB,MAAO3B,GAAOmmB,eAAevkB,UAE7BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAEJ,EAAE,iBAC9BC,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOvO,SAASmQ,SAAEJ,EAAE,oBACjCC,EAAAA,GAAAA,KAAC8N,GAAAA,QAAK,CACJnQ,OAAQiD,EAAQ,OAChBV,MAAO3B,GAAOomB,YACd1f,WAAW,kBAMjBmH,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOqmB,kBAAkBzkB,SAAA,EACpCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOsmB,aAAa1kB,SAC9BojB,EAASjjB,KAAI,SAACwkB,GAAO,OACpB1Y,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAEfN,MAAO,CAAC3B,GAAOwmB,YAAa,CAAE/lB,gBAAiB8lB,EAAQrlB,QACvDgB,QAAS,WAAF,OAAQnR,EAAW6c,SAAS2Y,EAAQtB,OAAO,EAClD3V,cAAe,GAAI1N,SAAA,EAEnBiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOymB,qBAAqB7kB,SAAA,EACvCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAM0kB,EAAQzkB,KAAMwF,KAAMD,GAAmB,IAAKnG,MAAM,SACjEqlB,EAAQrB,MAAQ,IACfzjB,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO0mB,eAAe9kB,UACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2mB,UAAU/kB,SAAE2kB,EAAQrB,cAI9CzjB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4mB,aAAahlB,SAC9BqkB,EAAgBM,EAAQ7oB,QAdtB6oB,EAAQ7oB,GAgBI,UAMzBmQ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO6mB,YAAYjlB,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAEJ,EAAE,sBACrCqM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAO8mB,UACd5kB,QAAS,WAAF,OAAQnR,EAAW6c,SAAS,gBAAgB,EACnD0B,cAAe,GAAI1N,SAAA,EAEnBiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+mB,aAAanlB,SAAA,EAC/BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEqW,EAAMpf,cACtC4I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,yBAEpCC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOgnB,eACpBnZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEqW,EAAMnf,kBACtC2I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,gCAEpCC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOgnB,eACpBnZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,cACDc,IAA1BuV,EAAMlf,iBAAkCgG,MAAMkZ,EAAMlf,iBAEjD,KADA,GAAG4E,KAAK8J,MAA8B,IAAxBwQ,EAAMlf,uBAG1B0I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,0BAGtCqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOinB,YAAYrlB,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOknB,aAAatlB,SAAC,0CAClCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAMD,GAAmB,IAAKnG,MAAM,sBAM3E2M,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO6mB,YAAYjlB,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmnB,SAASvlB,SAAA,EAC3BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOonB,WAAWxlB,SAAA,EAC7BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,qBAAqByF,KAAMD,GAAmB,IAAKnG,MAAM,aACxEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOqnB,UAAUzlB,SAAEJ,EAAE,uBAEpCqM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOsnB,SAAS1lB,SAAA,CAAC,UACzBJ,EAAE,sBAAuB,KAAK,UAC9BA,EAAE,sBAAuB,KAAK,UAC9BA,EAAE,sBAAuB,KAAK,UAC9BA,EAAE,oCAOnB,CAEA,IAAMxB,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBylB,cAAe,CACbjd,cAAe7B,GAAiB,IAElC+e,eAAgB,CACdnd,WAA4B,YAAhB9L,EAAAA,QAASC,IAAmBmR,EAAAA,QAAUqM,eAAqB,EACvE1R,cAAe7B,GAAiB,GAChCmgB,uBAAwB,GACxBC,wBAAyB,IAE3B1f,OAAQ,CACNC,QAASb,GAAgB,GACzB5G,WAAY,SACZD,eAAgB,UAElB7O,MAAO,CACLyP,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2G,UAAWT,GAAiB,IAE9B3V,SAAU,CACRwP,SAAUoG,GAAmB,IAC7BnG,MAAO,UACP2G,UAAWT,GAAiB,IAE9Bgf,YAAa,CACXrgB,MAAOmB,GAAgB,IACvBlB,OAAQoB,GAAiB,IACzBS,UAAWT,GAAiB,IAE9BwB,aAAc,CACZ3H,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2H,WAAY3B,GAAgB,GAC5B4B,aAAc1B,GAAiB,MAEjCyf,YAAa,CACXhf,UAAWT,GAAiB,IAE9Bif,kBAAmB,CACjBte,QAASb,GAAgB,GACzBW,UAAWT,GAAiB,IAE9Bkf,aAAc,CACZlmB,cAAe,MACfod,SAAU,OACVnd,eAAgB,gBAChBS,iBAAkBoG,GAAgB,IAEpCsf,YAAWzjB,GAAA,CACTgD,MAAO,MACPC,OAAQoB,GAAiB,IACzB3G,gBAAiB,UACjBC,aAAc,GACdqH,QAASb,GAAgB,GACzB4B,aAAc1B,GAAiB,GAC/B9G,WAAY,SACZD,eAAgB,UACbuF,GAAa,CACdE,OAAQ,CAAEC,MAAO,EAAGC,OAAQ,GAC5BE,QAAS,GACTE,OAAQ,EACRE,UAAW,KAGfmgB,qBAAsB,CACpB3d,aAAc1B,GAAiB,IAEjCwf,aAAc,CACZ3lB,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPE,WAAY,OACZwJ,UAAW,UAEbkc,UAAS/jB,GAAA,CACPtC,gBAAiB,OACjB0H,OAAQjB,GAAgB,GACxBxG,aAAc,IACXkF,GAAa,CACdE,OAAQ,CAAEC,MAAO,EAAGC,OAAQ,GAC5BE,QAAS,GACTE,OAAQ,EACRE,UAAW,KAGfygB,aAAc,CACZ3mB,cAAe,MACf2H,QAASb,GAAgB,IAE3BgW,SAAU,CACRxV,KAAM,EACNpH,WAAY,UAEd6c,UAAW,CACTlc,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,UACP4H,aAAc1B,GAAiB,KAEjCgW,UAAW,CACTnc,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET8lB,YAAa,CACXjhB,MAAO,EACPtF,gBAAiB,WAEnBwmB,YAAa,CACX7mB,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZ8J,eAAgB,EAChBC,eAAgB,UAChBxJ,gBAAiBuG,GAAiB,MAEpC8f,aAAc,CACZjmB,SAAUoG,GAAmB,IAC7BnG,MAAO,UACPuH,YAAavB,GAAgB,GAC7B9F,WAAY,OAEd+lB,SAAQpkB,GAAA,CACNtC,gBAAiB,OACjB0H,OAAQjB,GAAgB,GACxBa,QAASb,GAAgB,GACzBxG,aAAc,IACXkF,GAAa,CACdE,OAAQ,CAAEC,MAAO,EAAGC,OAAQ,GAC5BE,QAAS,GACTE,OAAQ,EACRE,UAAW,KAGf8gB,WAAY,CACVhnB,cAAe,MACfE,WAAY,SACZwI,aAAc1B,GAAiB,MAEjCigB,UAAW,CACTpmB,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZyH,WAAY3B,GAAgB,IAE9BogB,SAAU,CACRtd,WAAY3C,GAAmB,IAC/BnG,MAAO,OACPD,SAAUoG,GAAmB,KAE/Bqf,eAAgB,CACde,SAAU,WACVC,KAAM,EACNC,OAAQ,EACRlnB,gBAAiB,UACjBC,aAAc,GACdgd,SAAU,GACVkK,UAAW,GACXvnB,eAAgB,SAChBC,WAAY,SACZE,kBAAmB,GAErBmmB,UAAW,CACT1lB,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,U,+kBC5bX,IAAA6F,GAA0BC,EAAAA,QAAWC,IAAI,UAAjClB,GAAKgB,GAALhB,MAAOC,GAAMe,GAANf,OACTkB,GAAkB,SAAAC,GAAU,OAAKpB,GAAQoB,EAAc,GAAI,EAC3DC,GAAmB,SAAAD,GAAU,OAAKnB,GAASmB,EAAc,GAAI,EAC7DE,GAAqB,SAAAC,GACzB,IAAMC,EAAc5J,KAAK6J,IAAIzB,GAAOC,IAAU,IAC9C,OAAOrI,KAAK8J,MAAMH,EAAOC,EAC3B,EAuVMvH,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBqH,OAAQ,CACNC,QAASb,GAAgB,GACzBzG,gBAAiB,OACjBuH,kBAAmB,EACnBC,kBAAmB,UACnB7H,cAAe,MACfE,WAAY,SACZD,eAAgB,iBAElB7O,MAAO,CACLyP,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,QAETzP,SAAU,CACRwP,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP2H,WAAY3B,GAAgB,GAC5BvG,UAAW,YAEbgI,YAAa,CACXvI,cAAe,MACfE,WAAY,SACZG,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,IAEhBmnB,gBAAiB,CACf3mB,MAAO,UACPD,SAAUoG,GAAmB,IAC7BwB,WAAY3B,GAAgB,IAE9BS,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAWT,GAAiB,GAC5BnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET4mB,aAAc,CACZ/f,QAASb,GAAgB,IAE3B6gB,YAAa,CACXtnB,gBAAiB,OACjBC,aAAc,GACdoI,aAAc1B,GAAiB,GAC/BW,QAASb,GAAgB,GACzBkB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb0hB,cAAe,CACb5nB,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc1B,GAAiB,MAEjCwC,cAAe,CACbnJ,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,IAEhBunB,aAAc,CACZ/mB,MAAO,UACPE,WAAY,MACZH,SAAUoG,GAAmB,KAE/B6gB,YAAa,CACXhnB,MAAO,OACPD,SAAUoG,GAAmB,KAE/B8gB,gBAAiB,CACflnB,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP4H,aAAc1B,GAAiB,KAC/B4C,WAAY3C,GAAmB,KAEjC4C,eAAgB,CACd3J,WAAY,SACZwI,aAAc1B,GAAiB,KAC/B3G,gBAAiB,UACjBC,aAAc,EACdqH,QAASb,GAAgB,IAE3BgD,cAAe,CACbnE,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,KAE1BkhB,gBAAiB,CACf3nB,gBAAiB,UACjBC,aAAc,EACdqH,QAASb,GAAgB,GACzB4B,aAAc1B,GAAiB,MAEjCihB,UAAW,CACTjoB,cAAe,MACfE,WAAY,SACZwI,aAAc1B,GAAiB,IAEjCkhB,YAAa,CACX9nB,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,GACd+H,YAAavB,GAAgB,IAE/BqhB,WAAY,CACV9nB,gBAAiB,WAEnB+nB,aAAc,CACZ/nB,gBAAiB,WAEnBgoB,gBAAiB,CACfxnB,SAAUoG,GAAmB,IAC7BjG,WAAY,OAEdsnB,WAAY,CACVhhB,KAAM,EACNzG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAETynB,eAAgB,CACdvoB,cAAe,MACfC,eAAgB,WAChB+J,eAAgB,EAChBC,eAAgB,UAChBrB,WAAY5B,GAAiB,MAE/BqW,aAAc,CACZrd,cAAe,MACfE,WAAY,SACZE,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,IAClC1G,aAAc,GACdmI,WAAY3B,GAAgB,IAE9BsD,WAAY,CACV/J,gBAAiB,WAEnBuiB,aAAc,CACZviB,gBAAiB,WAEnBgK,eAAgB,CACdvJ,MAAO,UACPD,SAAUoG,GAAmB,IAC7BwB,WAAY3B,GAAgB,IAE9B+b,iBAAkB,CAChB/hB,MAAO,UACPD,SAAUoG,GAAmB,IAC7BwB,WAAY3B,GAAgB,IAE9BwD,eAAgB,CACdhD,KAAM,EACNpH,WAAY,SACZD,eAAgB,SAChB0H,QAASb,GAAgB,GACzBW,UAAWT,GAAiB,KAE9BuD,UAAW,CACT1J,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2G,UAAWT,GAAiB,IAE9BwhB,aAAc,CACZ3nB,SAAUoG,GAAmB,IAC7BnG,MAAO,OACP2G,UAAWT,GAAiB,GAC5B0B,aAAc1B,GAAiB,GAC/BwD,UAAW,UAEbie,gBAAiB,CACfzoB,cAAe,MACfE,WAAY,SACZG,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,KAClC1G,aAAc,IAEhBooB,cAAe,CACb5nB,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,MACZqH,YAAavB,GAAgB,MAIjC,SA5hBuB,SAAHpN,GAAwB,IAAlB/I,EAAU+I,EAAV/I,WAExBwa,IADchK,EAAAA,EAAAA,kBAANC,GACsBgK,EAAAA,EAAAA,WAAS,IAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCjX,EAAOmX,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArCxa,EAAQya,EAAA,GAAEkd,EAAWld,EAAA,GAC5BE,GAAwCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAA/Bid,GAAFhd,EAAA,GAAiBA,EAAA,KAGpCwB,EAAAA,EAAAA,YAAU,WACR,IAAMyb,EAAY,eAAAtkB,GAAA5K,EAAAA,EAAAA,UAAG,YACnB,IACE4R,GAAW,GAGX,IAAMrS,QAAkB2T,GAAiBvI,sBACzCskB,EAAgB1vB,GAChBc,QAAQW,IAAI,oBAAqBzB,EAAUmJ,QAG3CrI,QAAQW,IAAI,+BACZ,IAAMmuB,QAAuBlT,KAG7B,GAFA5b,QAAQW,IAAI,0BAA2BmuB,EAAiBA,EAAezmB,OAAS,SAE3EymB,GAA4C,IAA1BA,EAAezmB,OAIpC,OAHArI,QAAQW,IAAI,qBACZguB,EAAY,SACZpd,GAAW,GAKb,IAAMwd,EAAsBD,EAAennB,KAAI,SAAAqnB,GAC7C,IAAKA,IAAYA,EAAQtf,WAEvB,OADA1P,QAAQ8I,KAAK,0BAA2BkmB,GACjC,KAGT,IAAMC,EAAiB/vB,EAAUiY,MAAK,SAAAjM,GAAC,OAAIA,EAAE5H,IAAM4H,EAAE5H,GAAGG,aAAeurB,EAAQtf,WAAWjM,UAAU,IAEpG,OAAIwrB,EACFtmB,GAAAA,GAAA,GACKqmB,GAAO,IACVr1B,SAAUs1B,EAAet1B,SACzB0Q,SAAU4kB,EAAe5kB,SACzB6kB,gBAAiBrc,GAAiBtH,uBAAuB0jB,EAAe5kB,UACxE7B,QAASymB,EAAezmB,QACxB3N,cAAeo0B,EAAezmB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAAK,EACnEkJ,OAAOwG,aAAa,GAAKylB,EAAezmB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAC5E,IACJgQ,YAAamlB,EAAenlB,YAC5ByT,KAAM,IAAI7a,KAAKssB,EAAQhX,WAAatV,KAAKC,OAAO2nB,wBAGpDtqB,QAAQ8I,KAAK,+CAAgDkmB,EAAQtf,YAC9D,KACT,IAAGzE,QAAO,SAAA3G,GAAC,OAAIA,GAAKA,EAAE3K,QAAQ,IAE9BqG,QAAQW,IAAI,mCAAoCouB,EAAoB1mB,QAGpE0mB,EAAoB/X,MAAK,SAACgF,EAAGC,GAAC,OAAMA,EAAEjE,WAAa,IAAMgE,EAAEhE,WAAa,EAAE,IAE1E2W,EAAYI,GACZxd,GAAW,EACb,CAAE,MAAO7T,GACPsC,QAAQtC,MAAM,0BAA2BA,GACzC6T,GAAW,GACX+B,EAAAA,QAAMC,MACJ,2BACA,qDAAe7V,EAAMqL,QACrB,CAAC,CAAEF,KAAM,eAAMtB,MAAO,YAE1B,CACF,IAAC,kBAhEiB,OAAAgD,EAAA3J,MAAA,KAAAC,UAAA,KAkElBguB,IAGA,IAAMzD,EAAcz0B,EAAWozB,YAAY,QAAS8E,GACpD,OAAO,kBAAMzD,GAAc,CAC7B,GAAG,CAACz0B,IAGJ,IA6CMw4B,EAAe,eAAA/jB,GAAAzL,EAAAA,EAAAA,UAAG,UAAOmvB,GAE7B,IAAM5vB,QAAkB2T,GAAiBvI,sBAGnCykB,EAAsBD,EAAennB,KAAI,SAAAqnB,GAC7C,IAAKA,IAAYA,EAAQtf,WAEvB,OADA1P,QAAQ8I,KAAK,0BAA2BkmB,GACjC,KAGT,IAAMC,EAAiB/vB,EAAUiY,MAAK,SAAAjM,GAAC,OAAIA,EAAE5H,IAAM4H,EAAE5H,GAAGG,aAAeurB,EAAQtf,WAAWjM,UAAU,IAEpG,OAAIwrB,EACFtmB,GAAAA,GAAA,GACKqmB,GAAO,IACVr1B,SAAUs1B,EAAet1B,SACzB0Q,SAAU4kB,EAAe5kB,SACzB6kB,gBAAiBrc,GAAiBtH,uBAAuB0jB,EAAe5kB,UACxE7B,QAASymB,EAAezmB,QACxB3N,cAAeo0B,EAAezmB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAAK,EACnEkJ,OAAOwG,aAAa,GAAKylB,EAAezmB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAC5E,IACJgQ,YAAamlB,EAAenlB,YAC5ByT,KAAM,IAAI7a,KAAKssB,EAAQhX,WAAatV,KAAKC,OAAO2nB,wBAGpDtqB,QAAQ8I,KAAK,+CAAgDkmB,EAAQtf,YAC9D,KACT,IAAGzE,QAAO,SAAA3G,GAAC,OAAIA,GAAKA,EAAE3K,QAAQ,IAK9B,OAFAo1B,EAAoB/X,MAAK,SAACgF,EAAGC,GAAC,OAAMA,EAAEjE,WAAa,IAAMgE,EAAEhE,WAAa,EAAE,IAEnE+W,CACT,IAAC,gBAnCoBhtB,GAAA,OAAAqJ,EAAAxK,MAAA,KAAAC,UAAA,KAkKrB,OACE4S,EAAAA,GAAAA,MAACQ,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,eAAe9N,gBAAgB,aAEnDoN,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAC,wBAC3BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOvO,SAASmQ,SAAA,CAAC,SAAExQ,EAASqR,OAAO,wBAE/CrR,EAASqR,OAAS,IACjBoL,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAO2I,YACdzG,QAvIqB,WAC7B,GAAwB,IAApB9Q,EAASqR,OAAb,CAIA,IAAM+mB,EAAO,eAAAxY,GAAAjX,EAAAA,EAAAA,UAAG,YACd,IACE4R,GAAW,GACXvR,QAAQW,IAAI,+BACN+b,KACNiS,EAAY,IACQ,QAAhB7rB,EAAAA,QAASC,IACXuQ,EAAAA,QAAMC,MAAM,2BAAQ,yDAExB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,2BAA4BA,GAC1C,UACQoC,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAU,KACtDusB,EAAY,IACQ,QAAhB7rB,EAAAA,QAASC,IACXuQ,EAAAA,QAAMC,MAAM,2BAAQ,yDAExB,CAAE,MAAOzI,GACP9K,QAAQtC,MAAM,mCAAoCoN,GAC9B,QAAhBhI,EAAAA,QAASC,IACXuQ,EAAAA,QAAMC,MAAM,eAAM,iFAEtB,CACF,CAAC,QACChC,GAAW,EACb,CACF,IAAC,kBA1BY,OAAAqF,EAAAhW,MAAA,KAAAC,UAAA,KA4Bb,GAAoB,QAAhBiC,EAAAA,QAASC,GAMbuQ,EAAAA,QAAMC,MAAM,2BAAO,iIAAwB,CACzC,CAAE1K,KAAM,eAAMtB,MAAO,UACrB,CAAEsB,KAAM,eAAMtB,MAAO,cAAeO,QAASsnB,SAPhB,qBAAXC,QAA0BA,OAAO1xB,QAAQ,mIACnDyxB,GA/BV,MAFEpvB,QAAQW,IAAI,uBAyChB,EA4F0C6G,SAAA,EAEhCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,QAAQyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC3DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO6nB,gBAAgBjmB,SAAC,uBAK1CtN,GACCuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAC,0CAGnCH,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPE,KAAM5d,EACN6d,WApGkB,SAAHiC,GAAkB,IAAZhC,EAAIgC,EAAJhC,KAErBwa,EAAkBxa,EAAK2E,WAAa3E,EAAK2E,WAAW8V,WAAW,GAAK,IAAM,EAC1EC,EAAiBF,GAAmB,GAAKxa,EAAKtM,QAAQ8mB,GACxDxa,EAAKtM,QAAQ8mB,GAAiBzmB,KAC9B,qBAGE4mB,EAAqB3a,EAAKtM,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,IAC9D41B,EAAoBD,GAAsB,EAC5C,GAAGzsB,OAAOwG,aAAa,GAAKimB,OAAwB3a,EAAKtM,QAAQinB,GAAoB5mB,OACrF,eAEJ,OACE4K,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+nB,YAAYnmB,SAAA,EAC9BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgoB,cAAcpmB,SAAA,EAChCH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO4J,cAAchI,UAChCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOioB,aAAarmB,SAAEsN,EAAKoa,iBAAmBpa,EAAKzK,cAElEhD,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkoB,YAAYtmB,SAAEsN,EAAKyI,WAGzClW,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmoB,gBAAgBvmB,SAAEsN,EAAKnb,WAE1Cmb,EAAKhL,cACJzC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOiK,eAAerI,UACjCH,EAAAA,GAAAA,KAAC8N,GAAAA,QAAKxM,GAAA,CACJ3D,OAAQ8P,EAAKhL,aACTsC,GAAazD,GAAAA,GAAC,CAAC,EACd/C,GAAOkK,eAAa,IACvBxD,WAAY,kBAMpBmH,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOooB,gBAAgBxmB,SAAA,EAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOqoB,UAAUzmB,SAAA,EAC5BH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAAC3B,GAAOsoB,YAAatoB,GAAOuoB,YAAY3mB,UACnDH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyoB,gBAAgB7mB,SAAC,gCAEvCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO0oB,WAAW9mB,SAAA,CAAEsN,EAAK2E,WAAW,KAAG+V,SAGtD/b,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOqoB,UAAUzmB,SAAA,EAC5BH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CAAC3B,GAAOsoB,YAAatoB,GAAOwoB,cAAc5mB,UACrDH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyoB,gBAAgB7mB,SAAC,gCAEvCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO0oB,WAAW9mB,SAAEkoB,WAIrCjc,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2oB,eAAe/mB,SAAA,EACjCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAOyd,aAAczd,GAAOwK,YACpCtI,QAAS,WAAF,OA5DgBknB,EA4DgBla,OA3D/Cne,EAAW6c,SAAS,iBAAkB,CAAE9D,WAAYsf,EAAQtf,aAD9B,IAACsf,CA4DqB,EAACxnB,SAAA,EAE7CH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,MAAMyF,KAAMD,GAAmB,IAAKnG,MAAM,aACzDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyK,eAAe7I,SAAC,iCAGtCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAOyd,aAAczd,GAAOgjB,cACpC9gB,QAAS,WAAF,OArMW,SAAC4H,GAC3B,GAAKA,EAAL,CAIA,IAAMigB,EAAQ,eAAA3kB,GAAArL,EAAAA,EAAAA,UAAG,YACf,IACE4R,GAAW,GACXvR,QAAQW,IAAI,6BAA6B+O,KACzC,IAAMvV,QAAe+hB,GAAcxM,GAEnC,GADA1P,QAAQW,IAAI,iBAAkBxG,GAC1BA,EAAQ,CACV,IAAMy1B,QAAuBhU,KACvBU,QAAwB6S,EAAgBS,GAC9CjB,EAAYrS,GACZtc,QAAQW,IAAI,oCAAoC2b,EAAgBjU,SAClE,KAAO,CACLrI,QAAQ8I,KAAK,+CACb,IAAMwT,QAAwBV,KACxBmT,QAA4BI,EAAgB7S,GAClDqS,EAAYI,EACd,CACF,CAAE,MAAOrxB,GACPsC,QAAQtC,MAAM,0BAA2BA,GACrB,QAAhBoF,EAAAA,QAASC,IACXuQ,EAAAA,QAAMC,MAAM,eAAM,iFAEtB,CAAC,QACChC,GAAW,EACb,CACF,IAAC,kBAzBa,OAAAvG,EAAApK,MAAA,KAAAC,UAAA,KA2BM,QAAhBiC,EAAAA,QAASC,GAMbuQ,EAAAA,QAAMC,MAAM,2BAAO,mGAAmB,CACpC,CAAE1K,KAAM,eAAMtB,MAAO,UACrB,CAAEsB,KAAM,eAAMf,QAAS6nB,KAPM,qBAAXN,QAA0BA,OAAO1xB,QAAQ,qGACnDgyB,GA9BV,MAFE3vB,QAAQtC,MAAM,iCAwClB,CA2JyBmyB,CAAoB/a,EAAKpF,WAAW,EAAClI,SAAA,EAEpDH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAMD,GAAmB,IAAKnG,MAAM,aAC/DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOijB,iBAAiBrhB,SAAC,yBAKhD,EA8BQuN,aAAc,SAACD,GAAI,OAAKA,EAAKpF,WAAWjM,UAAU,EAClDwR,sBAAuBrP,GAAO8nB,aAC9BrY,8BAA8B,EAC9BC,mBAAoB,WAAF,OAChB7B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0K,eAAe9I,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAMD,GAAmB,IAAKnG,MAAM,aACtEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2K,UAAU/I,SAAC,sDAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4oB,aAAahnB,SAAC,oFAElCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAO6oB,gBACd3mB,QAAS,WAAF,OAAQnR,EAAW6c,SAAS,OAAO,EAAChM,SAAA,EAE3CH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8oB,cAAclnB,SAAC,0CACnCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,gBAAgByF,KAAMD,GAAmB,IAAKnG,MAAM,cAEhE,MAMnB,E,+kBC3VA,IAAA6F,GAA0BC,EAAAA,QAAWC,IAAI,UAAjClB,GAAKgB,GAALhB,MAAOC,GAAMe,GAANf,OACTkB,GAAkB,SAACC,GAAU,OAAMpB,GAAQoB,EAAc,GAAI,EAC7DC,GAAmB,SAACD,GAAU,OAAMnB,GAASmB,EAAc,GAAI,EAC/DE,GAAqB,SAACC,GAC1B,IAAMC,EAAc5J,KAAK6J,IAAIzB,GAAOC,IAAU,IAC9C,OAAOrI,KAAK8J,MAAMH,EAAOC,EAC3B,EA6SMvH,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnB0lB,eAAgB,CACdnd,WAA4B,YAAhB9L,EAAAA,QAASC,GAAmBmR,EAAAA,QAAUqM,cAAgB,GAEpE7S,OAAQ,CACNC,QAASb,GAAgB,IAE3BgjB,UAAW,CACT9pB,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc1B,GAAiB,IAEjC+iB,QAAS,CACPpiB,QAASb,GAAgB,IAE3BkjB,WAAY,CACVviB,UAAWT,GAAiB,IAE9B6gB,aAAc,CACZhnB,SAAUoG,GAAmB,IAC7BnG,MAAO,WAETmpB,eAAgB,CACdppB,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,OACP2G,UAAWX,GAAgB,IAE7BojB,eAAgB,CACdviB,QAASb,GAAgB,IAE3Bgf,cAAe,CACbjd,cAAe7B,GAAiB,IAElCmjB,0BAA2B,CACzB1iB,UAAWT,GAAiB,GAC5B0B,aAAc1B,GAAiB,IAC/B9G,WAAY,UAEdqH,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAWT,GAAiB,GAC5BnG,SAAUoG,GAAmB,IAC7BnG,MAAO,QAET6J,eAAgB,CACdrD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,SACZyH,QAASb,GAAgB,IAE3B6W,UAAW,CACT9c,SAAUoG,GAAmB,IAC7BnG,MAAO,UACP2G,UAAWT,GAAiB,GAC5B0B,aAAc1B,GAAiB,IAEjCojB,WAAY,CACV/pB,gBAAiB,UACjBD,kBAAmB0G,GAAgB,GACnCrG,gBAAiBuG,GAAiB,GAClC1G,aAAc,IAEhB+pB,eAAgB,CACdvpB,MAAO,OACPE,WAAY,MACZH,SAAUoG,GAAmB,KAE/BqT,kBAAmB,CACjB3S,QAASb,GAAgB,GACzBzG,gBAAiB,OACjBC,aAAc,GACdyH,OAAQjB,GAAgB,GACxBW,UAAWT,GAAiB,GAC5BgB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbyD,aAAc,CACZ9I,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPE,WAAY,MACZ4I,WAAY3C,GAAmB,KAEjC4C,eAAgB,CACd3J,WAAY,SACZuH,UAAWT,GAAiB,GAC5B3G,gBAAiB,UACjBsH,QAASb,GAAgB,GACzBxG,aAAc,GAEhBwJ,cAAe,CACbnE,MAAOmB,GAAgB,IACvBlB,OAAQkB,GAAgB,KAE1B6T,iBAAkB,CAChBhT,QAASb,GAAgB,IAE3Bkb,OAAQ,CACNhiB,cAAe,MACfE,WAAY,SACZG,gBAAiB,OACjBsH,QAASb,GAAgB,GACzBrG,gBAAiBuG,GAAiB,KAClC1G,aAAc,GACdoI,aAAc1B,GAAiB,KAC/BgB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb2U,eAAgB,CACdxa,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfC,cAAe,CACb3a,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfE,gBAAiB,CACf5a,gBAAiB,UACjBya,YAAa,UACbC,YAAa,GAEfuP,WAAY,CACVjiB,YAAavB,GAAgB,IAE/BqU,WAAY,CACVta,SAAUoG,GAAmB,IAC7BnG,MAAO,OACPwG,KAAM,EACNsC,WAAY3C,GAAmB,KAEjCsjB,mBAAoB,CAClBzpB,MAAO,UACPE,WAAY,OAEdwpB,kBAAmB,CACjB1pB,MAAO,UACPE,WAAY,OAEdypB,oBAAqB,CACnB3pB,MAAO,UACPE,WAAY,OAEd0pB,gBAAiB,CACfhqB,iBAAkBoG,GAAgB,GAClCW,UAAWT,GAAiB,IAE9BwV,aAAc,CACZxc,cAAe,MACfE,WAAY,SACZD,eAAgB,SAChB0H,QAASb,GAAgB,GACzBxG,aAAc,GACdoI,aAAc1B,GAAiB,IAEjC2jB,cAAe,CACbtqB,gBAAiB,WAEnBuqB,gBAAiB,CACfvqB,gBAAiB,WAEnB+a,WAAY,CACV/S,YAAavB,GAAgB,IAE/B2V,WAAY,CACV3b,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,QAEd6pB,qBAAsB,CACpBxqB,gBAAiB,UACjBC,aAAc,GACdqH,QAASb,GAAgB,GACzBkB,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb4kB,kBAAmB,CACjB9qB,cAAe,MACfE,WAAY,SACZwI,aAAc1B,GAAiB,IAEjC+jB,iBAAkB,CAChBlqB,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZF,MAAO,UACP2H,WAAY3B,GAAgB,IAE9BkkB,gBAAiB,CACfnqB,SAAUoG,GAAmB,IAC7BnG,MAAO,UACP8I,WAAY3C,GAAmB,KAEjCgkB,gBAAiB,CACftjB,QAASb,GAAgB,GACzB8B,WAAY5B,GAAiB,IAE/BkkB,OAAQ,CACN7qB,gBAAiB,UACjBsH,QAASX,GAAiB,KAC1B1G,aAAc,GACdJ,WAAY,SACZF,cAAe,MACfC,eAAgB,SAChB+H,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbilB,eAAgB,CACd9qB,gBAAiB,WAEnB+qB,WAAY,CACV/qB,gBAAiB,WAEnBgrB,WAAY,CACVvqB,MAAO,OACPD,SAAUoG,GAAmB,IAC7BjG,WAAY,OACZqH,YAAavB,GAAgB,MAIjC,SA7hB6B,SAAHpN,GAA+B,IAAzB4rB,EAAK5rB,EAAL4rB,MAAO30B,EAAU+I,EAAV/I,WAC7B+Y,EAAe4b,EAAMzU,OAArBnH,WACRuB,GAAoB9J,EAAAA,EAAAA,kBAATlH,GAAFgR,EAAD7J,EAAO6J,EAAJhR,MAEXkR,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAvCxX,EAAQ0X,EAAA,GAAEigB,EAAWjgB,EAAA,GAC5BG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAArCtX,EAAOuX,EAAA,GAAEF,EAAUE,EAAA,GAC1BE,GAA4CP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAjDkP,EAAcjP,EAAA,GAAE2f,EAAiB3f,EAAA,GACxCE,GAAoCV,EAAAA,EAAAA,WAAS,GAAMW,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAA5C0f,EAAUzf,EAAA,GAAE0f,EAAa1f,EAAA,GAChCG,GAAoCd,EAAAA,EAAAA,WAAS,GAAMe,GAAAb,EAAAA,EAAAA,SAAAY,EAAA,GAA5CmF,EAAUlF,EAAA,GAAEuf,EAAavf,EAAA,GAChCG,GAA8ClB,EAAAA,EAAAA,UAAS,MAAKmB,GAAAjB,EAAAA,EAAAA,SAAAgB,EAAA,GAArDqf,EAAepf,EAAA,GAAEqf,EAAkBrf,EAAA,GAC1CE,GAA8CrB,EAAAA,EAAAA,UAASnR,EAAK5D,UAAY,MAAKqW,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAAtExL,EAAeyL,EAAA,GAAEF,EAAkBE,EAAA,GAGpCQ,EAAoB,eAAA3I,GAAA5K,EAAAA,EAAAA,UAAG,UAAOtD,GAClCmW,EAAmBnW,GACnB4D,EAAKkT,eAAe9W,SAEdw1B,EAAax1B,EACrB,IAAC,gBALyB0F,GAAA,OAAAwI,EAAA3J,MAAA,KAAAC,UAAA,KAQpBgxB,EAAY,eAAA7mB,GAAArL,EAAAA,EAAAA,UAAG,YAAuC,IAAhCtD,EAAQwE,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAGoG,EACrC,IAEE,IAAKyI,EAGH,OAFA1P,QAAQtC,MAAM,iCACd6T,GAAW,GAKb,IACMugB,SADqBjf,GAAiBvI,oBAAoBjO,IAC7B8a,MAAK,SAAAjM,GAAC,OAAIA,EAAE5H,IAAM4H,EAAE5H,GAAGG,aAAeiM,EAAWjM,UAAU,IAE9F,GAAIquB,EAAe,CAEjB,IAAMC,EAAiBppB,GAAAA,GAAA,GAClBmpB,GAAa,IAChBxoB,QAASwoB,EAActpB,QAAQb,KAAI,SAACiB,EAAK2O,GAAK,MAAM,CAClDjU,GAAIN,OAAOwG,aAAa,GAAK+N,GAC7B1O,KAAMD,EAAIC,KACVY,UAAWb,EAAI9O,QAChB,IACDe,cAAei3B,EAActpB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAAK,EAClEkJ,OAAOwG,aAAa,GAAKsoB,EAActpB,QAAQmP,WAAU,SAAA/O,GAAG,OAAIA,EAAI9O,OAAO,KAC3E,IACJE,YAAa83B,EAAc93B,aAAe,2BAC1CqQ,SAAUwI,GAAiBtH,uBAAuBumB,EAAcznB,YAI9DynB,EAAchoB,cAChBioB,EAAkBjoB,YAAcgoB,EAAchoB,aAGhDwnB,EAAYS,GAGZ,IAAMC,QAAuB1a,GAAoB5H,GACjDgiB,EAAcM,EAChB,MAEEhyB,QAAQtC,MAAM,oCAAqCgS,GAGrD6B,GAAW,EACb,CAAE,MAAO7T,GACPsC,QAAQtC,MAAM,0BAA2BA,GACzC6T,GAAW,EACb,CACF,IAAC,kBAjDiB,OAAAvG,EAAApK,MAAA,KAAAC,UAAA,MAoDlBuS,EAAAA,EAAAA,YAAU,WACRye,GACF,GAAG,CAACniB,IAGJ,IA2BMuiB,EAAc,eAAA7mB,GAAAzL,EAAAA,EAAAA,UAAG,YACrB,IACM0X,QACIa,GAAoBve,EAAS2J,UAE7BqT,GAAehd,EAAS2J,IAEhCouB,GAAera,EACjB,CAAE,MAAO3Z,GACPsC,QAAQtC,MAAM,2BAA4BA,EAC5C,CACF,IAAC,kBAXmB,OAAA0N,EAAAxK,MAAA,KAAAC,UAAA,KAcdqxB,EAAe,SAAClK,GACpB,IAAMmK,EAAatR,IAAmBmH,EAAO1kB,GACvCmG,EAAY9P,EAASkB,gBAAkBmtB,EAAO1kB,GAEhD8uB,EAAcxsB,GAAOoiB,OACrBqK,EAAYzsB,GAAOub,WACnBmR,EAAW,kBACXC,EAAY,OAqBhB,OAnBIf,EACE/nB,GACF2oB,EAAc,CAACxsB,GAAOoiB,OAAQpiB,GAAOob,eACrCqR,EAAY,CAACzsB,GAAOub,WAAYvb,GAAO4qB,mBACvC8B,EAAW,mBACXC,EAAY,WACHJ,IAAe1oB,IACxB2oB,EAAc,CAACxsB,GAAOoiB,OAAQpiB,GAAOqb,iBACrCoR,EAAY,CAACzsB,GAAOub,WAAYvb,GAAO6qB,qBACvC6B,EAAW,eACXC,EAAY,WAELJ,IACTC,EAAc,CAACxsB,GAAOoiB,OAAQpiB,GAAOib,gBACrCwR,EAAY,CAACzsB,GAAOub,WAAYvb,GAAO2qB,oBACvC+B,EAAW,kBACXC,EAAY,YAIZ9e,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAEfN,MAAO6qB,EACPtqB,QAAS,WAAF,OAzESmgB,EAyEYD,EAAO1kB,QAxElCkuB,GACHD,EAAkBtJ,IAFD,IAACA,CAyEsB,EACtCG,SAAUoJ,EACVtc,cAAe,GAAI1N,SAAA,EAEnBH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAM6qB,EAAUplB,KAAMD,GAAmB,IAAKnG,MAAOyrB,EAAWhrB,MAAO3B,GAAO0qB,cACxF7c,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO8qB,EAAU7qB,SAAA,CACpBwgB,EAAO1kB,GAAG,KAAG0kB,EAAOnf,UARlBmf,EAAO1kB,GAYlB,EAEA,OAAIpJ,GAEAuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAC,yCAKlC7N,GAgBH8Z,EAAAA,GAAAA,MAACQ,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,SAAA,EACpCH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,gBAAgB9N,gBAAgB,aAEpDgB,EAAAA,GAAAA,KAACihB,GAAAA,eAAc,CACbC,OAAQ,CAAC,UAAW,UAAW,WAC/BhhB,MAAO3B,GAAOmmB,eAAevkB,UAE7BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkqB,UAAUtoB,SAAA,EAC5BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACC,QAAS,WAAF,OAAQnR,EAAW67B,QAAQ,EAAEjrB,MAAO3B,GAAOmqB,QAAQvoB,UAC1EH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,aAAayF,KAAMD,GAAmB,IAAKnG,MAAM,YAGlEO,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACC,QAASmqB,EAAgB1qB,MAAO3B,GAAOsqB,eAAe1oB,UACtEH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CACPlM,KAAM4P,EAAa,QAAU,gBAC7BnK,KAAMD,GAAmB,IACzBnG,MAAOuQ,EAAa,UAAY,eAKtC5D,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOoqB,WAAWxoB,SAAA,EAC7BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOioB,aAAarmB,SAAE7N,EAAS0Q,YAC5CoJ,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOqqB,eAAezoB,SAAA,CAAC,iBAAK7N,EAAS2J,eAKxDmQ,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CACT1S,8BAA8B,EAC9BJ,sBAAuBrP,GAAOkmB,cAActkB,SAAA,EAE5CH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOuqB,0BAA0B3oB,UAC5CH,EAAAA,GAAAA,KAAC+M,GAAwB,CACvBnN,gBAAiBA,EACjBC,iBAAkBgM,OAItBO,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0a,kBAAkB9Y,SAAA,EACpCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+J,aAAanI,SAAE7N,EAASA,WAE3CA,EAASmQ,cACRzC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOiK,eAAerI,UACjCH,EAAAA,GAAAA,KAAC8N,GAAAA,QAAK,CACJnQ,OAAQrL,EAASmQ,YACjBvC,MAAO3B,GAAOkK,cACdxD,WAAW,kBAMnBjF,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO+a,iBAAiBnZ,SAClC7N,EAAS2P,QAAQ3B,KAAI,SAAAqgB,GAAM,OAAIkK,EAAalK,EAAO,MAGrDwJ,IACC/d,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8qB,gBAAgBlpB,SAAA,EAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO,CACX3B,GAAO4c,aACPmP,EAAkB/rB,GAAO+qB,cAAgB/qB,GAAOgrB,iBAChDppB,SAAA,EACAH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CACPlM,KAAMkqB,EAAkB,mBAAqB,eAC7CzkB,KAAMD,GAAmB,IACzBnG,MAAM,OACNS,MAAO3B,GAAOwb,cAEhB/Z,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO6c,WAAWjb,SAC5BmqB,EAAkB,iCAAU,uCAIjCle,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOirB,qBAAqBrpB,SAAA,EACvCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkrB,kBAAkBtpB,SAAA,EACpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,qBAAqByF,KAAMD,GAAmB,IAAKnG,MAAM,aACxEO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmrB,iBAAiBvpB,SAAC,qBAExCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOorB,gBAAgBxpB,SAAE7N,EAASK,qBAKrDqN,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOqrB,gBAAgBzpB,SAChCgqB,GAUA/d,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAOsrB,OAAQtrB,GAAOwrB,YAC9BtpB,QA3LS,WAEnBnR,EAAW67B,QACb,EAyLYtd,cAAe,GAAI1N,SAAA,EAEnBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyrB,WAAW7pB,SAAC,wBAChCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,gBAAgByF,KAAMD,GAAmB,IAAKnG,MAAM,aAfrEO,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO,CAAC3B,GAAOsrB,QAASrQ,GAAkBjb,GAAOurB,gBACjDrpB,QAhMQ,WAClB,GAAI+Y,EAAgB,CAClB4Q,GAAc,GACd,IAAMhoB,EAAYoX,IAAmBlnB,EAASkB,cAC9C+2B,EAAmBnoB,GAGdA,GACH8P,GAAc7J,EAAYmR,EAE9B,CACF,EAsLYuH,UAAWvH,EACX3L,cAAe,GAAI1N,UAEnBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyrB,WAAW7pB,SAAC,wCA3GxCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+K,eAAenJ,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,uBAAuByF,KAAMD,GAAmB,IAAKnG,MAAM,aAC1EO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+d,UAAUnc,SAAC,0CAC/BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CACfN,MAAO3B,GAAOwqB,WACdtoB,QAAS,WAAF,OAAQnR,EAAW67B,QAAQ,EAAChrB,UAEnCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyqB,eAAe7oB,SAAC,uCAoH9C,EC9Se,SAASirB,GAAY/yB,GAAyB,IAAtB4rB,EAAK5rB,EAAL4rB,MAAO30B,EAAU+I,EAAV/I,WAC5C00B,EAAyCC,EAAMzU,OAAvCiO,EAAOuG,EAAPvG,QAASzH,EAAQgO,EAARhO,SAAUtiB,EAASswB,EAATtwB,UAE3BoW,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxCwV,EAAQtV,EAAA,GAAEqhB,EAAWrhB,EAAA,GAC5BG,GAA0BJ,EAAAA,EAAAA,UAAS,GAAEK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA9BlX,EAAKmX,EAAA,GAAEkhB,EAAQlhB,EAAA,GACtBE,GAA8CP,EAAAA,EAAAA,UAAS,GAAEQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAjCihB,GAAFhhB,EAAA,GAAoBA,EAAA,KAG1CwB,EAAAA,EAAAA,YAAU,WACR,GAAI0R,EAAS,CACX,IAAMtG,EAAiBsG,EAAQ7Z,QAAO,SAAA6J,GAAI,OAAIA,EAAKrL,SAAS,IAAEpB,OACxD3J,EAAiBomB,EAAQzc,OAEzBwqB,EAAkBtvB,KAAK8J,MAAMmR,EAAiB9f,EAAiB,KACrEi0B,EAASE,GACTD,EAAmBpU,EAAiB9f,GAGpCg0B,EAAYG,GAAmB,IAG/B1V,GAAoB,CAClBplB,kBAAmB2G,EACnB1D,aAAcwjB,EACdnB,SAAUA,GAAY,YACrByV,OAAM,SAAAp1B,GACPsC,QAAQtC,MAAM,mCAAoCA,EACpD,GACF,CACF,GAAG,CAAConB,EAASzH,IAwGb,OACEhW,EAAAA,GAAAA,KAAC4M,GAAAA,aAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,UACpCiM,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAAC1S,8BAA8B,EAAM7N,SAAA,EAC9CiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAC,8BAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOvO,SAASmQ,SACb,SAAb6V,EAAsB,uCAAwB,aAAbA,EAA0B,2BAAS,iCA1F3E5J,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmtB,qBAAqBvrB,SAAA,EACvCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO,CACX3B,GAAO8c,YACP,CAAC5B,YAAa6F,EAAW,UAAY,YACrCnf,SAAA,EACAiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO,CACX3B,GAAOotB,UACP,CAAClsB,MAAO6f,EAAW,UAAY,YAC/Bnf,SAAA,CAAElN,EAAM,QACVmZ,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOqtB,aAAazrB,SAAA,CAC9Bsd,EAAQ7Z,QAAO,SAAA6J,GAAI,OAAIA,EAAKrL,SAAS,IAAEpB,OAAO,MAAIyc,EAAQzc,OAAO,6BAGtEhB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CACX3B,GAAO6c,WACP,CAAC3b,MAAO6f,EAAW,UAAY,YAC/Bnf,SACCmf,EAAW,mDAAa,+DA6C7BlT,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOstB,eAAe1rB,SAAA,EACjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAM,GAAIpG,MAAM,UAC9CO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,kBAC/BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAA,CAC3BjE,KAAKqkB,MAAM7sB,EAAY,IAAI,SAAEA,EAAY,GAAG,gBAGjD0Y,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,2BAA2ByF,KAAM,GAAIpG,MAAM,UAC1DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,kBAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEsd,EAAQ7Z,QAAO,SAAA6J,GAAI,OAAIA,EAAKrL,SAAS,IAAEpB,aAEzEoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOkd,SAAStb,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,uBAAuByF,KAAM,GAAIpG,MAAM,UACtDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAC,kBAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEsd,EAAQ7Z,QAAO,SAAA6J,GAAI,OAAKA,EAAKrL,SAAS,IAAEpB,gBAmB1EoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOuJ,iBAAiB3H,SAAA,EACnCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCH,EAAAA,GAAAA,KAACqN,GAAAA,QAAQ,CACPE,KAAMkQ,EACNjQ,WA7EmB,SAAHtK,GAAyB,IAAnBuK,EAAIvK,EAAJuK,KAAMyC,EAAKhN,EAALgN,MACpC,OACE9D,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CACfN,MAAO3B,GAAOutB,aACdrrB,QAAS,WAAF,OAAQnR,EAAW6c,SAAS,iBAAkB,CAAE9D,WAAYoF,EAAKpF,YAAa,EAAClI,SAAA,EAEtFiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2J,eAAe/H,SAAA,EACjCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO4a,eAAehZ,SAAA,CAAC,iBAAK+P,EAAQ,KAChDzC,EAAKrL,WACJgK,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOwoB,aAAa5mB,SAAA,EAC/BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,YAAYyF,KAAM,GAAIpG,MAAM,UAC3CO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2mB,UAAU/kB,SAAC,qBAGjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOwtB,eAAe5rB,SAAA,EACjCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,QAAQyF,KAAM,GAAIpG,MAAM,UACvCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2mB,UAAU/kB,SAAC,wBAIrCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+J,aAAc0jB,cAAe,EAAE7rB,SAAEsN,EAAKnb,YAC1D8Z,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO0tB,WAAW9rB,SAAA,EAC7BiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO2tB,YAAY/rB,SAAA,CAAC,8BACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAOuN,EAAKrL,UAAY7D,GAAO4tB,YAAc5tB,GAAO6tB,cAAcjsB,SAAEsN,EAAK+L,qBAErF/L,EAAKrL,YACLgK,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO2tB,YAAY/rB,SAAA,CAAC,8BACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4tB,YAAYhsB,SAAEsN,EAAKkM,wBAMzD,EA6CUjM,aAAc,SAACD,EAAMyC,GAAK,OAAKA,EAAM9T,UAAU,EAC/CiwB,eAAe,QAInBjgB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOqrB,gBAAgBzpB,SAAA,CAChCmf,GAMAlT,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAOsrB,OAAQppB,QAnIjC,WACfnR,EAAW6c,SAAS,OACtB,EAiIoEhM,SAAA,EACxDH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,OAAOyF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAO+tB,cAC3DtsB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyrB,WAAW7pB,SAAC,iCAPlCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAOsrB,OAAQppB,QAzHhC,WAChBnR,EAAW6c,SAAS,OACtB,EAuHqEhM,SAAA,EACzDH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,SAASyF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAO+tB,cAC7DtsB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOyrB,WAAW7pB,SAAC,gCASnCsd,EAAQ7Z,QAAO,SAAA6J,GAAI,OAAKA,EAAKrL,SAAS,IAAEpB,OAAS,IAChDoL,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO,CAAC3B,GAAOsrB,OAAQtrB,GAAOguB,iBAAkB9rB,QAhIvD,WACnBnR,EAAW6c,SAAS,WACtB,EA8HkGhM,SAAA,EACtFH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,OAAOyF,KAAM,GAAIpG,MAAM,UAAUS,MAAO3B,GAAO+tB,cAC9DtsB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOiuB,oBAAoBrsB,SAAC,uCAOvD,CAEA,IAAM5B,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBqH,OAAQ,CACNC,QAAS,IAEXvW,MAAO,CACLyP,SAAU,GACVG,WAAY,OACZF,MAAO,UACP4H,aAAc,GAEhBrX,SAAU,CACRwP,SAAU,GACVC,MAAO,QAETisB,qBAAsB,CACpB7sB,WAAY,SACZuH,UAAW,GACXiB,aAAc,IAEhBgU,YAAa,CACX/W,MAAO,IACPC,OAAQ,IACRtF,aAAc,GACdya,YAAa,EACb9a,eAAgB,SAChBC,WAAY,SACZwI,aAAc,IAEhBskB,UAAW,CACTnsB,SAAU,GACVG,WAAY,QAEdisB,aAAc,CACZpsB,SAAU,GACVC,MAAO,QAET2b,WAAY,CACV5b,SAAU,GACVG,WAAY,QAEdksB,eAAgB,CACdltB,cAAe,MACfK,gBAAiB,OACjBC,aAAc,GACdqH,QAAS,GACTjH,iBAAkB,GAClBT,eAAgB,gBAChB+H,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb4W,SAAU,CACR5c,WAAY,UAEd8c,UAAW,CACTnc,SAAU,GACVC,MAAO,OACPX,eAAgB,GAElB4c,UAAW,CACTlc,SAAU,GACVG,WAAY,QAEdwH,aAAc,CACZ3H,SAAU,GACVG,WAAY,OACZ0H,aAAc,GACdhI,iBAAkB,GAClB+G,UAAW,IAEb0B,iBAAkB,CAChBT,aAAc,IAEhBykB,aAAc,CACZ9sB,gBAAiB,OACjBC,aAAc,GACdI,iBAAkB,GAClBgI,aAAc,GACdf,QAAS,GACTK,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbqD,eAAgB,CACdvJ,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc,IAEhB8R,eAAgB,CACd3Z,SAAU,GACVC,MAAO,QAETsnB,aAAc,CACZpoB,cAAe,MACfK,gBAAiB,UACjBC,aAAc,GACdF,kBAAmB,EACnBK,gBAAiB,EACjBP,WAAY,UAEdktB,eAAgB,CACdptB,cAAe,MACfK,gBAAiB,UACjBC,aAAc,GACdF,kBAAmB,EACnBK,gBAAiB,EACjBP,WAAY,UAEdqmB,UAAW,CACTzlB,MAAO,OACPD,SAAU,GACV4H,WAAY,GAEdkB,aAAc,CACZ9I,SAAU,GACVC,MAAO,OACP4H,aAAc,IAEhB4kB,WAAY,CACVtjB,eAAgB,EAChBC,eAAgB,OAChBrB,WAAY,IAEd2kB,YAAa,CACX1sB,SAAU,GACVC,MAAO,OACP4H,aAAc,GAEhB8kB,YAAa,CACX1sB,MAAO,UACPE,WAAY,OAEdysB,cAAe,CACb3sB,MAAO,UACPE,WAAY,OAEdiqB,gBAAiB,CACftjB,QAAS,GACTiB,WAAY,IAEdsiB,OAAQ,CACN7qB,gBAAiB,UACjBC,aAAc,GACdG,gBAAiB,GACjBT,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZwI,aAAc,GACdV,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb0nB,gBAAiB,CACfvtB,gBAAiB,OACjBya,YAAa,UACbC,YAAa,GAEf4S,WAAY,CACVtlB,YAAa,GAEfgjB,WAAY,CACVvqB,MAAO,OACPD,SAAU,GACVG,WAAY,QAEd6sB,oBAAqB,CACnB/sB,MAAO,UACPD,SAAU,GACVG,WAAY,U,wBC7WH8sB,GAAmB,eAAAp0B,GAAAC,EAAAA,EAAAA,UAAG,YACjC,IACEK,QAAQW,IAAI,uDAGZ,IAAM+W,QAAwB5X,EAAAA,QAAaC,QAAQ,aAC7ChJ,EAAY2gB,EAAkBhW,KAAKC,MAAM+V,GAAmB,GAClE1X,QAAQW,IAAI,wCAAW5J,EAAUsR,QAGjC,IAAMpQ,QAAqB4a,GAAiBvI,sBAC5CtK,QAAQW,IAAI,4BAAS1I,EAAaoQ,QAGlC,IAAM0rB,EAAiB,GACnBC,EAAW,EAAE3a,EAAA,YAGf,IAAM3J,EAAaukB,EAAIvkB,YAAcukB,EAAI3wB,GAEzC,IAAKoM,EAAW,OAAD,EAEf,IAAM/V,EAAW1B,EAAakf,MAAK,SAAAjM,GAAC,OAClCA,EAAE5H,IAAO4H,EAAE5H,GAAGG,aAAeiM,EAAWjM,UAAW,IAGjD9J,IAEFo6B,EAAeppB,KAAK,CAClBrH,GAAI,OAAO3J,EAAS2J,MAAMZ,KAAKC,QAC/B+M,WAAY/V,EAAS2J,GAAGG,WACxBsU,UAAWkc,EAAIlc,WAAarV,KAAKC,MACjCqV,UAAWtV,KAAKC,QAElBqxB,IAEJ,EAnBA,IAAK,IAAMC,KAAOl9B,QAASsiB,IAyB3B,aAHMvZ,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAU2xB,IACvD/zB,QAAQW,IAAI,kFAAiBqzB,wBAEtB,CACLz0B,SAAS,EACTwJ,QAAS,4BAAQirB,mCAErB,CAAE,MAAOt2B,GAEP,OADAsC,QAAQtC,MAAM,oDAAaA,GACpB,CACL6B,SAAS,EACTwJ,QAASrL,EAAMqL,QAEnB,CACF,IAAC,kBArD+B,OAAArJ,EAAAkB,MAAA,KAAAC,UAAA,KA0DnBqzB,GAAmB,eAAA3pB,GAAA5K,EAAAA,EAAAA,UAAG,YACjC,IAME,OALAK,QAAQW,IAAI,yEAGNb,EAAAA,QAAaqC,QAAQ,WAAYT,KAAKU,UAAU,KAE/C,CACL7C,SAAS,EACTwJ,QAAS,mDAEb,CAAE,MAAOrL,GAEP,OADAsC,QAAQtC,MAAM,oDAAaA,GACpB,CACL6B,SAAS,EACTwJ,QAASrL,EAAMqL,QAEnB,CACF,IAAC,kBAlB+B,OAAAwB,EAAA3J,MAAA,KAAAC,UAAA,KAuBnBszB,GAAY,eAAAnpB,GAAArL,EAAAA,EAAAA,UAAG,YAC1B,IACE,IAAMmlB,EAAU,GAGVsP,QAAkBN,KACxBhP,EAAQna,KAAK,8BAASypB,EAAU70B,QAAU,qBAAQ,6BAGlD,IAAM80B,QAAsBH,KAe5B,OAdApP,EAAQna,KAAK,wBAAQ0pB,EAAc90B,QAAU,qBAAQ,mCAG/CO,EAAAA,QAAaqC,QAAQ,gBAAiBT,KAAKU,UAAU,KAC3D0iB,EAAQna,KAAK,gDAEb3K,QAAQW,IAAI,oDAAamkB,GAEzBxR,EAAAA,QAAMC,MACJ,2BACAuR,EAAQla,KAAK,MACb,CAAC,CAAE/B,KAAM,eAAMtB,MAAO,cAGjB,CACT,CAAE,MAAO7J,GASP,OARAsC,QAAQtC,MAAM,wCAAWA,GAEzB4V,EAAAA,QAAMC,MACJ,2BACA,2DAAgB7V,EAAMqL,QACtB,CAAC,CAAEF,KAAM,eAAMtB,MAAO,cAGjB,CACT,CACF,IAAC,kBApCwB,OAAAyD,EAAApK,MAAA,KAAAC,UAAA,K,wBC5EZyzB,GAAa,eAAA50B,GAAAC,EAAAA,EAAAA,UAAG,YAC3B,IAIE,OAHAK,QAAQW,IAAI,2DAGQ,QAAhBmC,EAAAA,QAASC,UAELjD,EAAAA,QAAaqC,QAAQ,eAAgB,QAC3CnC,QAAQW,IAAI,yFACL,UAImB4zB,OAG1BjhB,EAAAA,QAAMC,MACJ,2BACA,yJAEK,IAEPD,EAAAA,QAAMC,MACJ,2BACA,uIAEK,EAEX,CAAE,MAAO7V,GAMP,OALAsC,QAAQtC,MAAM,4CAAeA,GAC7B4V,EAAAA,QAAMC,MACJ,2BACA,+DAAkB7V,EAAMqL,YAEnB,CACT,CACF,IAAC,kBApCyB,OAAArJ,EAAAkB,MAAA,KAAAC,UAAA,KA0CpB0zB,GAAsB,eAAAhqB,GAAA5K,EAAAA,EAAAA,UAAG,YAC7B,IACE,IAAK60B,GAEH,OADAx0B,QAAQW,IAAI,qCACL,EAIT,IAAM8zB,EAAUD,GAAWE,kBAAoB,qBAGzCF,GAAWG,mBAAmBF,EAAS,CAAEG,eAAe,IAAQ9B,OAAM,WAAO,IAInF,IADA,IAAM+B,EAAa,GACVC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMC,EAAgB,iBAAiBD,eACjCE,EAAgB,GAAGP,IAAUM,IAEnC,WACqBP,GAAWS,aAAaD,IAClCE,QACPL,EAAWlqB,KAAK,CACdzB,UAAW4rB,EACXK,KAAMH,GAGZ,CAAE,MAAOnzB,GACP7B,QAAQW,IAAI,wCAAUo0B,wBAAsBlzB,EAC9C,CACF,CAKA,GAHA7B,QAAQW,IAAI,gBAAMk0B,EAAWxsB,qDAGH,IAAtBwsB,EAAWxsB,OACb,OAAO,EAIT,IAAK,IAAM+sB,KAAQP,EAAY,CAC7B,IAAMQ,EAAmB,GAAGZ,kBAAwBW,EAAKlsB,iBAGnDosB,EAAa,GAAGb,kBAAwBW,EAAKlsB,wBACnD,UACQsrB,GAAWe,UAAU,CACzBlqB,KAAMgqB,EACNG,GAAIF,IAENt1B,QAAQW,IAAI,+CAAY00B,QAAuBC,IACjD,CAAE,MAAOzzB,GACP7B,QAAQW,IAAI,4BAAQ00B,wBAAyBxzB,EAC/C,CAGA,UACQ2yB,GAAWe,UAAU,CACzBlqB,KAAM+pB,EAAKD,KACXK,GAAIH,IAENr1B,QAAQW,IAAI,+CAAYy0B,EAAKD,WAAWE,IAC1C,CAAE,MAAOxzB,GACP7B,QAAQtC,MAAM,8CAAW23B,wBAAyBxzB,EACpD,CACF,CAEA,OAAO,CACT,CAAE,MAAOnE,GAEP,OADAsC,QAAQtC,MAAM,4EAAiBA,IACxB,CACT,CACF,IAAC,kBAxE2B,OAAA6M,EAAA3J,MAAA,KAAAC,UAAA,KA8Ef40B,GAAW,eAAAzqB,GAAArL,EAAAA,EAAAA,UAAG,YACzB,IACEK,QAAQW,IAAI,uDAGZ,IAAM+0B,QAAsBpB,KAM5B,OALAt0B,QAAQW,IAAI,gCAAa+0B,GAKlBA,CACT,CAAE,MAAOh4B,GAEP,OADAsC,QAAQtC,MAAM,8CAAYA,IACnB,CACT,CACF,IAAC,kBAhBuB,OAAAsN,EAAApK,MAAA,KAAAC,UAAA,KC3HxB,IAAM80B,GACK,QADLA,GAGO,iDAKPC,GAAY,CAChB,CAAE9xB,KAAM,KAAM2D,KAAM,eAAMouB,KAAM,4BAChC,CAAE/xB,KAAM,KAAM2D,KAAM,UAAWouB,KAAM,4BACrC,CAAE/xB,KAAM,KAAM2D,KAAM,oBAAWouB,KAAM,4BACrC,CAAE/xB,KAAM,KAAM2D,KAAM,aAAWouB,KAAM,6BAgXjCjwB,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnByvB,gBAAiB,CACfjnB,cAAe,IAEjBnB,OAAQ,CACNC,QAAS,GACTC,kBAAmB,EACnBC,kBAAmB,UACnBxH,gBAAiB,QAEnBjP,MAAO,CACLyP,SAAU,GACVG,WAAY,OACZF,MAAO,WAETivB,QAAS,CACP1vB,gBAAiB,OACjBoH,UAAW,GACXuC,eAAgB,EAChBpC,kBAAmB,EACnBkT,YAAa,WAEftS,aAAc,CACZ3H,SAAU,GACVG,WAAY,OACZF,MAAO,OACPiH,OAAQ,IAEVioB,eAAgB,CACdhmB,eAAgB,EAChBC,eAAgB,WAElBgmB,cAAe,CACbjwB,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZyH,QAAS,GACTC,kBAAmB,EACnBC,kBAAmB,WAErBgT,eAAgB,CACdxa,gBAAiB,WAEnB8a,WAAY,CACVta,SAAU,GACVC,MAAO,QAETovB,QAAS,CACPlwB,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZyH,QAAS,GACTC,kBAAmB,EACnBC,kBAAmB,WAErBsoB,UAAW,CACTtvB,SAAU,GACVC,MAAO,QAETsvB,UAAW,CACTvvB,SAAU,GACVC,MAAO,WAETuvB,cAAe,CACb1oB,QAAS,GACTF,UAAW,GACXvH,WAAY,UAEdowB,aAAc,CACZjwB,gBAAiB,UACjBI,gBAAiB,GACjBL,kBAAmB,GACnBE,aAAc,GAEhBiwB,iBAAkB,CAChBzvB,MAAO,OACPD,SAAU,GACVG,WAAY,OAEdwvB,aAAc,CACZxwB,cAAe,MACfE,WAAY,UAEduwB,aAAc,CACZ5vB,SAAU,GACVwH,YAAa,IAEfqoB,aAAc,CACZ7vB,SAAU,GACVC,MAAO,QAET6vB,YAAa,CACX3wB,cAAe,MACfE,WAAY,SACZD,eAAgB,gBAChB0H,QAAS,GACTC,kBAAmB,EACnBC,kBAAmB,WAErB+oB,YAAa,CACX5wB,cAAe,MACfE,WAAY,UAEd2wB,YAAa,CACXxoB,YAAa,IAEfyoB,aAAc,CACZjwB,SAAU,GACVC,MAAO,QAETiwB,mBAAoB,CAClBlwB,SAAU,GACVC,MAAO,OACP2G,UAAW,GAEbupB,YAAa,CACX9wB,WAAY,SACZO,gBAAiB,IAEnBwwB,YAAa,CACXpwB,SAAU,GACVC,MAAO,UAIX,SA9euB,SAAHpH,GAAwB,IAAlB/I,EAAU+I,EAAV/I,WACxBsa,GAAoB9J,EAAAA,EAAAA,kBAAZC,EAAC6J,EAAD7J,EAAGnH,EAAIgR,EAAJhR,KACXkR,GAAgDC,EAAAA,EAAAA,UAASnR,EAAK5D,UAASgV,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAhE+lB,EAAgB7lB,EAAA,GAAE8lB,EAAmB9lB,EAAA,GAC5CG,GAAwDJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAhE4lB,EAAoB3lB,EAAA,GAAE4lB,EAAuB5lB,EAAA,GACpDE,GAA8CP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAAtD2lB,EAAe1lB,EAAA,GAAE2lB,EAAkB3lB,EAAA,IAE1CwB,EAAAA,EAAAA,YAAU,WAER,IAAMokB,EAAoB,eAAAjtB,GAAA5K,EAAAA,EAAAA,UAAG,YAC3B,IACE,IAAM83B,QAAsB33B,EAAAA,QAAaC,QAAQ,iBAC7C03B,GACFN,EAAoBM,EAExB,CAAE,MAAO/5B,GACPsC,QAAQtC,MAAM,mCAAoCA,EACpD,CACF,IAAC,kBATyB,OAAA6M,EAAA3J,MAAA,KAAAC,UAAA,KAW1B22B,GACF,GAAG,KAGHpkB,EAAAA,EAAAA,YAAU,WACR,IAAMskB,EAAY,eAAA1sB,GAAArL,EAAAA,EAAAA,UAAG,YACnB,IACE,IAAMg4B,QAA2B73B,EAAAA,QAAaC,QAAQ,wBACtDs3B,EAA+C,SAAvBM,GAExB,IAAMC,QAAsB93B,EAAAA,QAAaC,QAAQ,mBACjDw3B,EAAqC,SAAlBK,EACrB,CAAE,MAAOl6B,GACPsC,QAAQtC,MAAM,0BAA2BA,EAC3C,CACF,IAAC,kBAViB,OAAAsN,EAAApK,MAAA,KAAAC,UAAA,KAYlB62B,GACF,GAAG,IAGH,IAAMvkB,EAAc,eAAA/H,GAAAzL,EAAAA,EAAAA,UAAG,UAAOk4B,GAC5B,UACQ/3B,EAAAA,QAAaqC,QAAQ,gBAAiB01B,GAC5C53B,EAAKkT,eAAe0kB,GACpBV,EAAoBU,GAGpBvkB,EAAAA,QAAMC,MACJ,iCACA,2EACA,CAAC,CAAE1K,KAAM,eAAMtB,MAAO,YAE1B,CAAE,MAAO7J,GACPsC,QAAQtC,MAAM,iCAAkCA,EAClD,CACF,IAAC,gBAfmBqE,GAAA,OAAAqJ,EAAAxK,MAAA,KAAAC,UAAA,KAkBdi3B,EAAmB,eAAAlhB,GAAAjX,EAAAA,EAAAA,UAAG,UAAO4U,GACjC,UACQzU,EAAAA,QAAaqC,QAAQ,uBAAwBoS,EAAM9Q,YACzD4zB,EAAwB9iB,GAEpBA,EACFjB,EAAAA,QAAMC,MAAM,iCAAS,sEAErBD,EAAAA,QAAMC,MAAM,iCAAS,+DAEzB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,sCAAuCA,EACvD,CACF,IAAC,gBAbwBkG,GAAA,OAAAgT,EAAAhW,MAAA,KAAAC,UAAA,KAgBnBk3B,EAAc,eAAAjhB,GAAAnX,EAAAA,EAAAA,UAAG,UAAO4U,GAC5B,UACQzU,EAAAA,QAAaqC,QAAQ,kBAAmBoS,EAAM9Q,YACpD8zB,EAAmBhjB,GAEnBjB,EAAAA,QAAMC,MACJgB,EAAQ,6CAAY,6CACpBA,EAAQ,+GAAuB,+GAEnC,CAAE,MAAO7W,GACPsC,QAAQtC,MAAM,mCAAoCA,EACpD,CACF,IAAC,gBAZmBs6B,GAAA,OAAAlhB,EAAAlW,MAAA,KAAAC,UAAA,MAeA,eAAAkW,GAAApX,EAAAA,EAAAA,UAAG,YACrB,UACQG,EAAAA,QAAaqC,QAAQ,YAAaT,KAAKU,UAAU,KACvDkR,EAAAA,QAAMC,MAAM,iCAAS,+DACvB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,6BAA8BA,GAC5C4V,EAAAA,QAAMC,MAAM,2BAAQ,uFACtB,CACF,GARoB,KAWK,eAAA0D,GAAAtX,EAAAA,EAAAA,UAAG,YAC1B,UACQ+c,KACNpJ,EAAAA,QAAMC,MAAM,iCAAS,+DACvB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,4BAA6BA,GAC3C4V,EAAAA,QAAMC,MAAM,2BAAQ,uFACtB,CACF,GARyB,IAWH,eAAA2D,GAAAvX,EAAAA,EAAAA,UAAG,YACvB,UACQqf,WACAX,KACN/K,EAAAA,QAAMC,MAAM,6CAAW,6FACzB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,gCAAiCA,GAC/C4V,EAAAA,QAAMC,MAAM,2BAAQ,uFACtB,CACF,GATsB,IAwItB,OACElM,EAAAA,GAAAA,KAAC4M,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,UACpCiM,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAAC9S,sBAAuBrP,GAAOkwB,gBAAgBtuB,SAAA,EACxDH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,UACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAEJ,EAAE,uBAGhCqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmwB,QAAQvuB,SAAA,EAC1BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAEJ,EAAE,wBACrCC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOowB,eAAexuB,SAChCouB,GAAUjuB,KAAI,SAAAtL,GAAQ,OA5BJ,SAACA,GAC5B,IAAM81B,EAAa+E,IAAqB76B,EAASyH,KAEjD,OACE2P,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAEfN,MAAO,CAAC3B,GAAOqwB,cAAe9D,GAAcvsB,GAAOib,gBACnD/Y,QAAS,WAAF,OAAQqL,EAAe9W,EAASyH,KAAK,EAAC0D,SAAA,EAE7CiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO4wB,aAAahvB,SAAA,EAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO6wB,aAAajvB,SAAEnL,EAASw5B,QAC5CxuB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8wB,aAAalvB,SAAEnL,EAASoL,UAE7C0qB,IAAc9qB,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAM,GAAIpG,MAAM,cAR5DzK,EAASyH,KAWpB,CAYqCm0B,CAAqB57B,EAAS,UAI7DoX,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmwB,QAAQvuB,SAAA,EAC1BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOowB,eAAexuB,SAAA,EACjCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+wB,YAAYnvB,SAAA,EAC9BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,wBAAwByF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eAC5EpjB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAAAE,SAAA,EACHH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,8BAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmxB,mBAAmBvvB,SAAC,4DAG5CH,EAAAA,GAAAA,KAAC6wB,GAAAA,QAAM,CACL3jB,MAAO6iB,EACPe,cAAeL,EACfM,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,WAAYnB,EAAuB,OAAS,gBAIhD3jB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+wB,YAAYnvB,SAAA,EAC9BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eACnEpjB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAAAE,SAAA,EACHH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,8BAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmxB,mBAAmBvvB,SAAC,wEAG5CH,EAAAA,GAAAA,KAAC6wB,GAAAA,QAAM,CACL3jB,MAAO+iB,EACPa,cAAeJ,EACfK,WAAY,CAAEC,MAAO,UAAWC,KAAM,WACtCC,WAAYjB,EAAkB,OAAS,sBAM/C7jB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmwB,QAAQvuB,SAAA,EAC1BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,kBAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOowB,eAAexuB,SAAA,EACjCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAO4yB,WAAY1wB,QAlJlC,WAClBwL,EAAAA,QAAMC,MACJ,2BACA,uDAAeoiB,OAAqBA,yPACpC,CAAC,CAAE9sB,KAAM,eAAMtB,MAAO,YAE1B,EA4I2EC,SAAA,EAC/DiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,6BAA6ByF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eACjFxvB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,iCAEpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,aAGnD2M,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAO4yB,WAAY1wB,QAjJnC,WACjBwL,EAAAA,QAAMC,MACJ,2BACA,6IACA,CACE,CAAE1K,KAAM,2BAAQtB,MAAO,UACvB,CAAEsB,KAAM,qBAAOf,QAAS,WAEtB2wB,GAAAA,QAAQC,QAAQ,gCAClB,IAGN,EAqI0ElxB,SAAA,EAC9DiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,eAAeyF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eACnExvB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,iCAEpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,aAGnD2M,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAO4yB,WAAY1wB,QA1I5B,WACxBwL,EAAAA,QAAMC,MACJ,2BACA,uRACA,CACE,CAAE1K,KAAM,eAAMtB,MAAO,UACrB,CAAEsB,KAAM,uCAAUf,QAAS,WAEzB2wB,GAAAA,QAAQC,QAAQ,8BAClB,IAGN,EA8HiFlxB,SAAA,EACrEiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,sBAAsByF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eAC1ExvB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,iCAEpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,aAGnD2M,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAO4yB,WAAY1wB,QAnI5B,WACxBnR,EAAW6c,SAAS,UACtB,EAiIiFhM,SAAA,EACrEiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,gBAAgByF,KAAM,GAAIpG,MAAM,UAAUS,MAAO3B,GAAOixB,eACvEpjB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAAAE,SAAA,EACHH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,8BAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmxB,mBAAmBvvB,SAAC,kEAG5CH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,aAGnDO,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOoxB,YAAYxvB,UAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOqxB,YAAYzvB,SAAC,yDAKvCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmwB,QAAQvuB,SAAA,EAC1BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,oCAClCH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOowB,eAAexuB,UACjCiM,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAACN,MAAO3B,GAAO4yB,WAAY1wB,QAlJjC,WACnBwL,EAAAA,QAAMC,MACJ,2BACA,mNACA,CACE,CAAE1K,KAAM,eAAMtB,MAAO,UACrB,CACEsB,KAAM,eACNtB,MAAO,UACPO,QAAQ,WAAD,IAAA6wB,GAAAh5B,EAAAA,EAAAA,UAAE,YACP,UAEQ4W,QAAQkQ,IAAI,CAChB0N,KACAsB,OAIFniB,EAAAA,QAAMC,MAAM,2BAAQ,iLACtB,CAAE,MAAO7V,GACPsC,QAAQtC,MAAM,8CAAYA,GAC1B4V,EAAAA,QAAMC,MAAM,2BAAQ,2DAAc7V,EAAMqL,UAC1C,CACF,IAdO,OAcN,WAdM,OAAA4vB,EAAA/3B,MAAA,KAAAC,UAAA,EAAC,KAkBhB,EAuH4E2G,SAAA,EAChEiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOgxB,YAAYpvB,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,oBAAoByF,KAAM,GAAIpG,MAAM,OAAOS,MAAO3B,GAAOixB,eACxExvB,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOkxB,aAAatvB,SAAC,6CAEpCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,kBAAkByF,KAAM,GAAIpG,MAAM,kBAKvDO,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOywB,cAAc7uB,UAChCH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAO0wB,aAAcxuB,QAzO9B,WACtBwL,EAAAA,QAAMC,MACJnM,EAAE,sBACFA,EAAE,yBACF,CACE,CACEyB,KAAMzB,EAAE,iBACRG,MAAO,UAET,CACEsB,KAAMzB,EAAE,kBACRG,MAAO,cACPO,QAAQ,WAAD,IAAA8wB,GAAAj5B,EAAAA,EAAAA,UAAE,YACP,UAEQsd,WAEAoB,WACAW,KAEN1L,EAAAA,QAAMC,MAAMnM,EAAE,kBAAmB,6FACnC,CAAE,MAAO1J,GACPsC,QAAQtC,MAAM,wBAAyBA,GACvC4V,EAAAA,QAAMC,MAAMnM,EAAE,gBAAiB1J,EAAMqL,QACvC,CACF,IAbO,OAaN,WAbM,OAAA6vB,EAAAh4B,MAAA,KAAAC,UAAA,EAAC,KAiBhB,EA4M+E2G,UACrEH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2wB,iBAAiB/uB,SAAEJ,EAAE,gCAMrD,E,gBC/XMyxB,GAAcjsB,EAAAA,QAAWC,IAAI,UAAUlB,MAAQ,GAExCmtB,GAAoB,SAAHp5B,GAAkC,IAADq5B,EAAAr5B,EAA3Bse,gBAAAA,OAAe,IAAA+a,EAAG,GAAEA,EAC9C3xB,GAAMD,EAAAA,EAAAA,kBAANC,EAGF4xB,EAAgBhb,EAAgB/S,QACpC,SAAAguB,GAAM,OAAIA,GAAqC,kBAApBA,EAAOjhC,QAAqB,IAIzD,GAAIghC,EAAc3wB,OAAS,EACzB,OACEoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOszB,gBAAgB1xB,SAAA,EAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOuzB,WAAW3xB,SAAEJ,EAAE,6BACnCC,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOwzB,cAAc5xB,SAAC,yGAMzC,IAAM6xB,EAAiBL,EAAct1B,MAAM,EAAG,GAAG41B,UAC3CC,EAASF,EAAe1xB,KAAI,SAACsxB,EAAQ1hB,GAAK,MAAK,IAAIA,EAAQ,GAAG,IAG9DiiB,EAAeH,EAAe1xB,KAAI,SAAAsxB,GAEtC,YAAwB3wB,IAApB2wB,EAAOjhC,UAA8C,OAApBihC,EAAOjhC,UAAqB2M,MAAMs0B,EAAOjhC,UACrE,EAEFuL,KAAK8J,MAAwB,IAAlB4rB,EAAOjhC,SAC3B,IAG4B,IAAxBwhC,EAAanxB,SACfkxB,EAAO5uB,KAAK,MACZ6uB,EAAa7uB,KAAK6uB,EAAa,KAGjC,IAAM5kB,EAAO,CACX2kB,OAAQA,EACRE,SAAU,CACR,CACE7kB,KAAM4kB,EACN1yB,MAAO,WAAY,MAAK,qBAATjG,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAqC,EACvD64B,YAAa,IAGjBC,OAAQ,CAACvyB,EAAE,uBAGPwyB,EAAc,CAClBvzB,gBAAiB,UACjBwzB,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfjzB,MAAO,WAAY,MAAK,qBAATjG,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAqC,EACvDm5B,WAAY,WAAY,MAAK,iBAATn5B,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAiC,EACxD0G,MAAO,CACLjB,aAAc,IAEhB2zB,aAAc,CACZxO,EAAG,IACHiO,YAAa,IACbQ,OAAQ,YAIZ,OACEzmB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOu0B,eAAe3yB,SAAA,EACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOw0B,WAAW5yB,SAAEJ,EAAE,6BACnCC,EAAAA,GAAAA,KAACgzB,GAAAA,UAAS,CACRzlB,KAAMA,EACNjJ,MAAOktB,GACPjtB,OAAQ,IACRguB,YAAaA,EACbU,QAAM,EACN/yB,MAAO3B,GAAO20B,MACdC,YAAY,QAIpB,EAEaC,GAAwB,SAAHlwB,GAAkC,IAADmwB,EAAAnwB,EAA3ByT,gBAAAA,OAAe,IAAA0c,EAAG,GAAEA,EAClDtzB,GAAMD,EAAAA,EAAAA,kBAANC,EAGF4xB,EAAgBhb,EAAgB/S,QACpC,SAAAguB,GAAM,OAAIA,GAA8C,kBAA7BA,EAAOlhC,iBAA8B,IAIlE,GAA6B,IAAzBihC,EAAc3wB,OAChB,OACEoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOszB,gBAAgB1xB,SAAA,EAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOuzB,WAAW3xB,SAAEJ,EAAE,sBACnCC,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOwzB,cAAc5xB,SAAC,gFAMzC,IAAM6xB,EAAiBL,EAAct1B,MAAM,EAAG,GAAG41B,UAc3C1kB,EAAO,CACX2kB,OAdaF,EAAe1xB,KAAI,SAACsxB,EAAQ1hB,GAAK,MAAK,IAAIA,EAAQ,GAAG,IAelEkiB,SAAU,CACR,CACE7kB,KAdiBykB,EAAe1xB,KAAI,SAAAsxB,GACxC,IAAM7iB,EAAQ6iB,EAAOlhC,kBACrB,YAAiBuQ,IAAV8N,GAAwBzR,MAAMyR,GAAiB,EAARA,CAChD,IAYMtP,MAAO,WAAY,MAAK,qBAATjG,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAqC,GAEzD,CACE+T,KAbgBykB,EAAe1xB,KAAI,SAAAsxB,GACvC,IAAM7iB,EAAQ6iB,EAAOj+B,aACrB,YAAiBsN,IAAV8N,GAAwBzR,MAAMyR,GAAiB,EAARA,CAChD,IAWMtP,MAAO,WAAY,MAAK,sBAATjG,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAsC,IAG5D84B,OAAQ,CAACvyB,EAAE,2BAA4BA,EAAE,sBAGrCwyB,EAAc,CAClBvzB,gBAAiB,UACjBwzB,uBAAwB,UACxBC,qBAAsB,UACtBC,cAAe,EACfjzB,MAAO,WAAY,MAAK,iBAATjG,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAiC,EACnDm5B,WAAY,WAAY,MAAK,iBAATn5B,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IAAiC,EACxD0G,MAAO,CACLjB,aAAc,IAEhBq0B,cAAe,IAGjB,OACElnB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOu0B,eAAe3yB,SAAA,EACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOw0B,WAAW5yB,SAAEJ,EAAE,6BACnCC,EAAAA,GAAAA,KAACuzB,GAAAA,SAAQ,CACPhmB,KAAMA,EACNjJ,MAAOktB,GACPjtB,OAAQ,IACRguB,YAAaA,EACbryB,MAAO3B,GAAO20B,MACdM,UAAQ,EACRC,uBAAqB,EACrBC,gBAAgB,MAIxB,EAEMn1B,GAASC,EAAAA,QAAWC,OAAO,CAC/Bq0B,eAAgB,CACd9zB,gBAAiB,UACjBC,aAAc,GACdqH,QAAS,GACTe,aAAc,GACdV,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEbquB,MAAO,CACLp0B,eAAgB,EAChBG,aAAc,IAEhB8zB,WAAY,CACVvzB,SAAU,GACVG,WAAY,OACZ0H,aAAc,IAEhBwqB,gBAAiB,CACf7yB,gBAAiB,UACjBC,aAAc,GACdqH,QAAS,GACTe,aAAc,GACdV,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,EACXN,OAAQ,IACR3F,eAAgB,SAChBC,WAAY,UAEdizB,WAAY,CACVryB,MAAO,OACPD,SAAU,GACV2J,UAAW,SACX9B,aAAc,GAEhB0qB,cAAe,CACbtyB,MAAO,OACPD,SAAU,GACV2J,UAAW,YCnMA,SAASwqB,GAAmBt7B,GAAkB,IAAf/I,EAAU+I,EAAV/I,WACpCyQ,GAAMD,EAAAA,EAAAA,kBAANC,EACR+J,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAArCjX,EAAOmX,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BJ,EAAAA,EAAAA,UAAS,CACjC3S,WAAY,EACZC,eAAgB,EAChBof,aAAc,EACdnf,gBAAiB,EACjBqf,gBAAiB,KACjBvM,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GANKqM,EAAKpM,EAAA,GAAEgZ,EAAQhZ,EAAA,IAStB2B,EAAAA,EAAAA,YAAU,WACR6nB,IAGA,IAAM7P,EAAcz0B,EAAWozB,YAAY,QAASkR,GACpD,OAAO,kBAAM7P,GAAc,CAC7B,GAAG,CAACz0B,IAGJ,IAAMskC,EAAgB,eAAA1wB,GAAA5K,EAAAA,EAAAA,UAAG,YACvB4R,GAAW,GACX,IACE,IAAM0Z,QAAsBvN,KAC5B1d,QAAQW,IAAI,yBAA0BsqB,GACtCR,EAASQ,EACX,CAAE,MAAOvtB,GACPsC,QAAQtC,MAAM,gCAAiCA,EACjD,CAAC,QACC6T,GAAW,EACb,CACF,IAAC,kBAXqB,OAAAhH,EAAA3J,MAAA,KAAAC,UAAA,KAiDhBq6B,EAAa,SAAC7Q,GAClB,IAAM9M,EAAO,IAAI7a,KAAK2nB,GACtB,MAAO,GAAG9M,EAAK4d,iBAAiBn4B,OAAOua,EAAK6d,WAAa,GAAGvT,SAAS,EAAG,QAAQ7kB,OAAOua,EAAK8d,WAAWxT,SAAS,EAAG,MACrH,EAGMyT,EAAiB,SAACtjC,GACtB,YAAiBsQ,IAAbtQ,GAAuC,OAAbA,GAAqB2M,MAAM3M,GAChD,KAEF,GAAGuL,KAAK8J,MAAiB,IAAXrV,KACvB,EAuDMujC,EAAmB,SAACle,GACxB,OAAQA,GACN,IAAK,OACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,QACE,MAAO,UAEb,EAGMme,EAAmB,SAACne,GACxB,OAAQA,GACN,IAAK,OACH,OAAOjW,EAAE,iBACX,IAAK,WACH,OAAOA,EAAE,qBACX,IAAK,QACH,OAAOA,EAAE,kBACX,IAAK,SACH,OAAOA,EAAE,mBACX,QACE,OAAOA,EAAE,aAEf,EAEA,OAAIlN,GAEAuZ,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO2H,iBAAiB/F,SAAA,EACnCH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAEJ,EAAE,wBAMxCC,EAAAA,GAAAA,KAAC4M,GAAAA,aAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,UACpCiM,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAAAvgB,SAAA,EACTH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,UACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAEJ,EAAE,uBAGhCqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO61B,uBAAuBj0B,SAAA,EACzCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO81B,SAASl0B,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,iBAAiByF,KAAM,GAAIpG,MAAM,aAChDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEqW,EAAMpf,cACtC4I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,6BAEpCqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO81B,SAASl0B,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,sBAAsByF,KAAM,GAAIpG,MAAM,aACrDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAEqW,EAAMnf,kBACtC2I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,iCAEpCqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO81B,SAASl0B,SAAA,EAC3BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,2BAA2ByF,KAAM,GAAIpG,MAAM,aAC1DO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOmd,UAAUvb,SAAE8zB,EAAezd,EAAMlf,oBACrD0I,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOod,UAAUxb,SAAEJ,EAAE,oCAKrCyW,EAAMG,gBAAgB3V,OAAS,IAC9BoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+1B,gBAAgBn0B,SAAA,EAClCH,EAAAA,GAAAA,KAACyxB,GAAiB,CAAC9a,gBAAiBH,EAAMG,mBAC1C3W,EAAAA,GAAAA,KAACozB,GAAqB,CAACzc,gBAAiBH,EAAMG,sBAIlDvK,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOg2B,iBAAiBp0B,SAAA,EACnCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOi2B,cAAcr0B,SAAA,EAChCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAEJ,EAAE,6BACpCyW,EAAMG,gBAAgB3V,OAAS,IAC9BhB,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACC,QAlLF,WAC1BwL,EAAAA,QAAMC,MACJnM,EAAE,yBACFA,EAAE,iCACF,CACE,CACEyB,KAAMzB,EAAE,iBACRG,MAAO,UAET,CACEsB,KAAMzB,EAAE,kBACRG,MAAO,cACPO,QAAQ,WAAD,IAAA8wB,GAAAj5B,EAAAA,EAAAA,UAAE,YACP,IACE4R,GAAW,SAEL8M,WAEAW,WAEAic,IACN3nB,EAAAA,QAAMC,MAAMnM,EAAE,kBAAmBA,EAAE,iCACrC,CAAE,MAAO1J,GACPsC,QAAQtC,MAAM,4BAA6BA,GAC3C4V,EAAAA,QAAMC,MAAMnM,EAAE,gBAAiBA,EAAE,+BACnC,CAAC,QACCmK,GAAW,EACb,CACF,IAhBO,OAgBN,WAhBM,OAAAqnB,EAAAh4B,MAAA,KAAAC,UAAA,EAAC,KAoBhB,EAkJ2D2G,UAC7CH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO2I,YAAY/G,SAAEJ,EAAE,gCAjIX,IAAjCyW,EAAMG,gBAAgB3V,QAEtBoL,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOk2B,WAAWt0B,SAAA,EAC7BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,oBAAoByF,KAAM,GAAIpG,MAAM,UACnDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOm2B,eAAev0B,SAAEJ,EAAE,yBACvCC,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOo2B,kBAAkBx0B,SAAEJ,EAAE,4BAM9CC,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOq2B,iBAAiBz0B,SAClCqW,EAAMG,gBAAgBrW,KAAI,SAACmN,EAAMyC,GAEhC,IAAMvf,OAA6BsQ,IAAlBwM,EAAK9c,UAA2B2M,MAAMmQ,EAAK9c,UAExD,EADA8c,EAAK9c,SAGT,OACEyb,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAAwBC,MAAO3B,GAAOs2B,YAAY10B,SAAA,EACrDiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOu2B,cAAc30B,SAAA,EAChCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOw2B,YAAY50B,SAAE0zB,EAAWpmB,EAAKyI,SAClDlW,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO,CACX3B,GAAOy2B,cACP,CAAEh2B,gBAAiBk1B,EAAiBzmB,EAAKuI,YACzC7V,UACAH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO02B,aAAa90B,SAAEg0B,EAAiB1mB,EAAKuI,kBAG7D5J,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO22B,aAAa/0B,SAAA,EAC/BiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO42B,YAAYh1B,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO62B,iBAAiBj1B,SAAEsN,EAAK/c,mBAAqB,KACjEsP,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO82B,iBAAiBl1B,SAAEJ,EAAE,4BAE3CqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO42B,YAAYh1B,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO62B,iBAAiBj1B,SAAEsN,EAAK9Z,cAAgB,KAC5DqM,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO82B,iBAAiBl1B,SAAEJ,EAAE,0BAE3CqM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO42B,YAAYh1B,SAAA,EAC9BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO62B,iBAAiBj1B,SAAE8zB,EAAetjC,MACtDqP,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO82B,iBAAiBl1B,SAAEJ,EAAE,+BArBpC0N,EAAKxR,IAAMiU,EA0B1B,aA6FR,CAEA,IAAM3R,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNjH,gBAAiB,WAEnBkH,iBAAkB,CAChBD,KAAM,EACNrH,eAAgB,SAChBC,WAAY,UAEdsH,YAAa,CACXC,UAAW,GACX3G,MAAO,QAET4G,OAAQ,CACNC,QAAS,IAEXvW,MAAO,CACLyP,SAAU,GACVG,WAAY,OACZF,MAAO,UACP4H,aAAc,GAEhB+sB,uBAAwB,CACtBz1B,cAAe,MACfC,eAAgB,gBAChBG,kBAAmB,GACnBsI,aAAc,IAEhBgtB,SAAU,CACRpuB,KAAM,EACNjH,gBAAiB,OACjBC,aAAc,GACdqH,QAAS,GACTzH,WAAY,SACZQ,iBAAkB,EAClBsH,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb6W,UAAW,CACTlc,SAAU,GACVG,WAAY,OACZF,MAAO,UACPX,eAAgB,GAElB6c,UAAW,CACTnc,SAAU,GACVC,MAAO,OACP0J,UAAW,UAEbmrB,gBAAiB,CACfv1B,kBAAmB,GACnBsI,aAAc,IAEhBktB,iBAAkB,CAChBv1B,gBAAiB,OACjBC,aAAc,GACdyH,OAAQ,GACRJ,QAAS,GACTK,YAAa,OACbC,aAAc,CAAEtC,MAAO,EAAGC,OAAQ,GAClCsC,cAAe,GACfC,aAAc,EACdjC,UAAW,GAEb2vB,cAAe,CACb71B,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc,IAEhBF,aAAc,CACZ3H,SAAU,GACVG,WAAY,QAEduH,YAAa,CACXzH,MAAO,UACPD,SAAU,IAEZi1B,WAAY,CACV51B,WAAY,SACZyH,QAAS,IAEXouB,eAAgB,CACdl1B,SAAU,GACVG,WAAY,OACZyG,UAAW,GACX3G,MAAO,QAETk1B,kBAAmB,CACjBn1B,SAAU,GACVC,MAAO,OACP0J,UAAW,SACX/C,UAAW,GAEbwuB,iBAAkB,CAChBvtB,aAAc,IAEhBwtB,YAAa,CACXtuB,kBAAmB,EACnBC,kBAAmB,OACnBpH,gBAAiB,IAEnB01B,cAAe,CACbn2B,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZwI,aAAc,GAEhB0tB,YAAa,CACXv1B,SAAU,GACVC,MAAO,QAETu1B,cAAe,CACbj2B,kBAAmB,EACnBK,gBAAiB,EACjBH,aAAc,IAEhBg2B,aAAc,CACZx1B,MAAO,OACPD,SAAU,GACVG,WAAY,QAEdu1B,aAAc,CACZv2B,cAAe,MACfC,eAAgB,iBAElBu2B,YAAa,CACXlvB,KAAM,EACNpH,WAAY,UAEdu2B,iBAAkB,CAChB51B,SAAU,GACVG,WAAY,OACZF,MAAO,QAET41B,iBAAkB,CAChB71B,SAAU,GACVC,MAAO,U,YC5XJ,SAAS61B,KAEd,IACMC,IADkB,MAATC,GAAAA,aAAS,EAATA,GAAAA,QAAWC,aAAcD,GAAAA,QAAUC,WAAWC,QAAoB,MAATF,GAAAA,aAAS,EAATA,GAAAA,QAAWG,WAAYH,GAAAA,QAAUG,SAASD,OAAU,CAAC,GACtGH,UAAY,CAAC,EACpC,MAAO,CACLK,eAAgBL,EAASK,gBAAkB,GAC3CC,eAAgBN,EAASM,gBAAkB,GAC3CC,YAAaP,EAASO,aAAe,GAGzC,C,+kBCHO,IAAMC,GAAc,CACzBC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,UAGGC,GAEC,aAFDA,GAGD,WASL,SAAeC,GAAW17B,EAAA6B,GAAA,OAAA85B,GAAA98B,MAAC,KAADC,UAAA,CAYhC,SAAA68B,KAAA,OAAAA,IAAA/9B,EAAAA,EAAAA,UAZM,UAA2Bg+B,EAASC,GACzC,IAAMC,EAAMlB,KACZ,IAAKkB,EAAIZ,eAAgB,MAAM,IAAIl5B,MAAM,4CACzC,IAAM+5B,QAAaC,MAAMF,EAAIZ,eAAgB,CAC3Ce,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMx8B,KAAKU,UAAU,CAAEu7B,QAAAA,EAASC,IAAAA,EAAKO,SAAUr7B,EAAAA,QAASC,OAE1D,IAAK+6B,EAAK34B,GAAI,MAAM,IAAIpB,MAAM,wCAC9B,IAAM6Q,QAAakpB,EAAKM,OACxB,GAAS,MAAJxpB,IAAAA,EAAMypB,SAAgB,MAAJzpB,IAAAA,EAAM0pB,OAAQ,MAAM,IAAIv6B,MAAM,wCACrD,OAAO6Q,CACT,KAAChU,MAAA,KAAAC,UAAA,CAgBA,SAAA09B,KAAA,OAAAA,IAAA5+B,EAAAA,EAAAA,UAdM,UAA6B0+B,GAA0D,IAAD3+B,EAAAmB,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC29B,EAAA9+B,EAA5C++B,WAAAA,OAAU,IAAAD,EAAG,IAAIA,EAAAE,EAAAh/B,EAAEi/B,UAAAA,OAAS,IAAAD,EAAG,KAAMA,EAC5Eb,EAAMlB,KACZ,IAAKkB,EAAIX,eAAgB,MAAM,IAAIn5B,MAAM,4CAEzC,IADA,IAAMlL,EAAQ6J,KAAKC,MACZD,KAAKC,MAAQ9J,EAAQ8lC,GAAW,CACrC,IAAMb,QAAaC,MAAM,GAAGF,EAAIX,0BAA0B0B,mBAAmBP,MAC7E,GAAIP,EAAK34B,GAAI,CACX,IAAMyP,QAAakpB,EAAKM,OACxB,GAAqB,UAAb,MAAJxpB,OAAI,EAAJA,EAAM3S,QAAmB,OAAO,EACpC,GAAqB,YAAb,MAAJ2S,OAAI,EAAJA,EAAM3S,QAAqB,MAAM,IAAI8B,MAAM,2BACjD,OACM,IAAIwS,SAAQ,SAAAkV,GAAC,OAAIC,WAAWD,EAAGgT,EAAW,GAClD,CACA,MAAM,IAAI16B,MAAM,uCAClB,IAACw6B,GAAA39B,MAAA,KAAAC,UAAA,CAEM,SAASg+B,GAAYlB,EAASC,GAAkB,IAAbb,EAAKl8B,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3Ci+B,EAAOnB,IAAYP,GAAYC,OACjC,0CACAM,IAAYP,GAAYE,OACxB,0CACA,0CACEzmB,EAAS,IAAIkoB,gBAAep2B,GAAC,CAAEi1B,IAAAA,GAAQb,IAASt5B,WACtD,MAAO,GAAGq7B,IAAOF,mBAAmBhB,MAAQ/mB,GAC9C,CAyBC,SAAAmoB,KAAA,OAAAA,IAAAr/B,EAAAA,EAAAA,UAhBM,UAA6Bg+B,EAASC,GAAkB,IAAbb,EAAKl8B,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzD,IACE,IAAMo+B,QAAcxB,GAAYE,EAASC,GAEzC,OADS,MAALqB,GAAAA,EAAOX,eAAc7F,GAAAA,QAAQC,QAAQuG,EAAMX,SACxCW,CACT,CAAE,MAAOp9B,GAEP,GAAI87B,IAAYP,GAAYG,OAAQ,CAClC,IAAM2B,EAfL,WAA4C,IAAlBC,EAASt+B,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,IACrCg9B,EAAMlB,KAEZ,OAAIkB,EAAIV,YAAoBU,EAAIV,YACzB,8BAA8BgC,GACvC,CAUkBC,CAAiB,KAE7B,aADM3G,GAAAA,QAAQC,QAAQwG,GACf,CAAEb,aAAS/1B,EAAWg2B,OAAQY,EACvC,CACA,IAAMA,EAAML,GAAYlB,EAASC,EAAKb,GAEtC,aADMtE,GAAAA,QAAQC,QAAQwG,GACf,CAAEb,aAAS/1B,EAAWg2B,OAAQY,EACvC,CACF,IAACF,GAAAp+B,MAAA,KAAAC,UAAA,CAEM,SAAew+B,GAAermB,GAAA,OAAAsmB,GAAA1+B,MAAC,KAADC,UAAA,CAUpC,SAAAy+B,KAAA,OAAAA,IAAA3/B,EAAAA,EAAAA,UAVM,UAA+Bi+B,GACpC,IAAMj7B,EAAMD,KAAKC,MACXf,EAzED,SAAmBg8B,GACxB,OAAIA,IAAQJ,GAA6Bt8B,EAAaI,SAClDs8B,IAAQJ,GAA+Bt8B,EAAaG,WACjDH,EAAaE,WACtB,CAqEem+B,CAAU3B,GACnBn7B,OAAY6F,EAMhB,OALI1G,IAASV,EAAaE,YACxBqB,EAAYE,EAAM,OACTf,IAASV,EAAaG,aAC/BoB,EAAYE,EAAM,SAEbb,EAAgB6G,GAAAA,GAAC,CAAE/G,KAAAA,EAAMmD,YAAapC,GAASF,EAAY,CAAEA,UAAAA,GAAc,CAAC,GAAG,CAAF,GAAGuC,OAAQ,oBACjG,KAACpE,MAAA,KAAAC,UAAA,CCjGD,IAAMI,GAAiB,wBAYvB,SAASu+B,GAAsBC,GAK7B,IAJA,IAAMC,EAAM,IAAIC,QAAQ,EAAKF,EAAUp3B,OAAS,GAAM,GAChDu3B,EAAMH,EAAUI,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAAOH,EACxDI,EAAyB,oBAATC,KAAsBA,KAAKH,GAAOI,OAAO30B,KAAKu0B,EAAK,UAAUn8B,SAAS,UACtFw8B,EAAQ,IAAIC,WAAWJ,EAAOz3B,QAC3BysB,EAAI,EAAGA,EAAIgL,EAAOz3B,OAAQysB,IAAKmL,EAAMnL,GAAKgL,EAAOvQ,WAAWuF,GACrE,OAAOmL,CACT,CASA,SAASE,GAAiBC,GAMxB,OAbF,SAA4BR,GAG1B,IAFA,IAAME,EAASC,KAAKH,GACdK,EAAQ,IAAIC,WAAWJ,EAAOz3B,QAC3BysB,EAAI,EAAGA,EAAIgL,EAAOz3B,OAAQysB,IAAKmL,EAAMnL,GAAKgL,EAAOvQ,WAAWuF,GACrE,OAAOmL,CACT,CAOgBI,CAHCD,EAAIP,QAAQ,8BAA+B,IACvDA,QAAQ,4BAA6B,IACrCA,QAAQ,YAAa,KAEXS,MACf,CAEiC,SAAAC,KAKhC,OALgCA,IAAA5gC,EAAAA,EAAAA,UAAjC,UAAkCygC,GAChC,IAAMI,EAAUL,GAAiBC,GAC3BK,EAA4B,qBAAXpR,QAA0BA,OAAOqR,QAAUrR,OAAOqR,OAAOD,QAAW,KAC3F,IAAKA,EAAQ,MAAM,IAAI18B,MAAM,qHAC7B,aAAa08B,EAAOE,UAAU,OAAQH,EAAS,CAAE/4B,KAAM,oBAAqBm5B,KAAM,YAAa,EAAM,CAAC,UACxG,KAAChgC,MAAA,KAAAC,UAAA,CAEM,SAAeggC,GAA2Bj9B,GAAA,OAAAk9B,GAAAlgC,MAAC,KAADC,UAAA,CAyChD,SAAAigC,KAAA,OAAAA,IAAAnhC,EAAAA,EAAAA,UAzCM,UAA2CmE,GAChD,GAAoB,QAAhBhB,EAAAA,QAASC,GAAc,MAAM,IAAIgB,MAAM,+DAC3C,IAAKD,GAAwB,kBAATA,EAAmB,MAAM,IAAIC,MAAM,kCACvD,IAAMg9B,EAAQj9B,EAAKG,OAAOiG,MAAM,KAChC,GAAqB,IAAjB62B,EAAM14B,OAAc,MAAM,IAAItE,MAAM,oDACxC,IAGI2J,EAAQszB,EAHZC,GAAA3vB,EAAAA,EAAAA,SAA2ByvB,EAAK,GAAzBG,EAAID,EAAA,GAAEE,EAAIF,EAAA,GAAEG,EAAIH,EAAA,GAEjBI,EAAM,IAAIC,YAEhB,IACE5zB,EAAShM,KAAKC,MAAM0/B,EAAIE,OAAO/B,GAAsB0B,KACrDF,EAAUt/B,KAAKC,MAAM0/B,EAAIE,OAAO/B,GAAsB2B,IACxD,CAAE,MAAOt/B,GACP,MAAM,IAAIkC,MAAM,6CAClB,CACA,GAAmB,UAAf2J,EAAO8zB,IAAiB,MAAM,IAAIz9B,MAAM,oDAE5C,IAAMV,QA1BP,SAEgCtB,GAAA,OAAAw+B,GAAA3/B,MAAC,KAADC,UAAA,CAwBb4gC,CA3DU,8cA4DtBhB,EAASpR,OAAOqR,OAAOD,OACvBiB,EAAMlC,GAAsB4B,GAC5BO,GAAa,IAAIC,aAAcC,OAAO,GAAGX,KAAQC,KAEvD,WADiBV,EAAOqB,OAAO,CAAEr6B,KAAM,qBAAuBpE,EAAKq+B,EAAKC,IAC/D,MAAM,IAAI59B,MAAM,gHAEzB,IAAMpB,EAAMD,KAAKC,MACjB,IAAKq+B,GAA4B,aAAjBA,EAAQp/B,KAAqB,MAAM,IAAImC,MAAM,4BAC7D,GAAgC,kBAArBi9B,EAAQx8B,UAAsD,kBAAtBw8B,EAAQv+B,UAAwB,MAAM,IAAIsB,MAAM,wCACnG,GAAIpB,EAAMq+B,EAAQv+B,UAAW,MAAM,IAAIsB,MAAM,wCAC7C,GAAgC,kBAArBi9B,EAAQe,WAA0Bf,EAAQe,SAAU,MAAM,IAAIh+B,MAAM,8BAE/E,IAAMi+B,QAAsB7+B,IAC5B,GAAI69B,EAAQe,WAAaC,EAAe,MAAM,IAAIj+B,MAAM,sEAExD,IAAMa,QAAgB9E,EAAAA,QAAaC,QAAQkB,IACrC4D,EAAOD,EAAUlD,KAAKC,MAAMiD,GAAW,GACvCq9B,EAAS,GAAGjB,EAAQe,YAAYf,EAAQkB,OAAS,MAAMlB,EAAQx8B,WACrE,GAAIK,EAAKC,SAASm9B,GAAS,MAAM,IAAIl+B,MAAM,sEAI3C,aAFMjC,EAAiB,CAAEF,KAAMV,EAAaI,SAAUyD,YAAapC,EAAKqC,OAAQ,cAAei9B,OAAAA,UACzFniC,EAAAA,QAAaqC,QAAQlB,GAAgBS,KAAKU,UAAU,GAAD6C,QAAAC,EAAAA,EAAAA,SAAKL,GAAI,CAAEo9B,MAC7D,CAAE98B,IAAI,EAAM67B,QAAAA,EACrB,IAACF,GAAAlgC,MAAA,KAAAC,UAAA,CClFD,IAAMshC,GAAQ,CACZ,CACEvE,IFMW,cELXxmC,MAAO,6CACPgrC,MAAO,gBACPC,KAAM,yJACNzgC,KAAMV,EAAaE,aAErB,CACEw8B,IAAKJ,GACLpmC,MAAO,6CACPgrC,MAAO,gBACPC,KAAM,6FACNzgC,KAAMV,EAAaG,YAErB,CACEu8B,IAAKJ,GACLpmC,MAAO,qBACPgrC,MAAO,4DACPC,KAAM,6FACNzgC,KAAMV,EAAaI,WAIR,SAASghC,KACtB,IAAAnxB,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAApCoxB,EAAMlxB,EAAA,GAAEmxB,EAASnxB,EAAA,GACxBG,GAA4BJ,EAAAA,EAAAA,UAAS,CAAExP,KAAMV,EAAaC,OAAOsQ,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAA1DvP,EAAMwP,EAAA,GAAEgxB,EAAShxB,EAAA,GACxBE,GAAsCP,EAAAA,EAAAA,UAAS+wB,GAAM,GAAGvE,KAAIhsB,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAArD+wB,EAAW9wB,EAAA,GAAE+wB,EAAc/wB,EAAA,GAClCE,GAA8BV,EAAAA,EAAAA,UAASgsB,GAAYC,QAAOtrB,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAAnD6rB,EAAO5rB,EAAA,GAAE6wB,EAAU7wB,EAAA,GAC1BG,GAAoCd,EAAAA,EAAAA,UAAS,IAAGe,GAAAb,EAAAA,EAAAA,SAAAY,EAAA,GAAzC2wB,EAAU1wB,EAAA,GAAE2wB,EAAa3wB,EAAA,GAChCG,GAA0BlB,EAAAA,EAAAA,UAAS,MAAKmB,GAAAjB,EAAAA,EAAAA,SAAAgB,EAAA,GAAjC2sB,EAAK1sB,EAAA,GAAEwwB,EAAQxwB,EAAA,GACtBE,GAAkCrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,SAAAmB,EAAA,GAA1CuwB,EAAStwB,EAAA,GAAEuwB,EAAYvwB,EAAA,GAC9BkS,GAAkCxT,EAAAA,EAAAA,UAAS,CAAE8xB,aAAc,KAAMzgC,UAAW,KAAM0gC,YAAa,IAAIte,GAAAvT,EAAAA,EAAAA,SAAAsT,EAAA,GACnGI,GADgBH,EAAA,GAAcA,EAAA,IACEzT,EAAAA,EAAAA,UAAS,KAAG6T,GAAA3T,EAAAA,EAAAA,SAAA0T,EAAA,GAArC+c,EAAQ9c,EAAA,GAAEme,EAAWne,EAAA,IAE5B7R,EAAAA,EAAAA,YAAU,WACR,IAAMjT,EAAI,eAAAT,GAAAC,EAAAA,EAAAA,UAAG,kBrBcV,WAAoC,OAAAkD,EAAAjC,MAAC,KAADC,UAAA,CqBb/BwiC,GACN,IAAM7gC,QAAUjB,IACV+hC,QAAYhhC,IAClBmgC,EAAUjgC,GACVggC,EAAUc,GACV,IAAMhgC,QAAWH,IACjBigC,EAAY9/B,EACd,IAAC,kBARS,OAAA5D,EAAAkB,MAAA,KAAAC,UAAA,KASVV,GACF,GAAG,KAEkBojC,EAAAA,EAAAA,UAAQ,kBAAMpB,GAAMhrB,MAAK,SAAAqsB,GAAC,OAAIA,EAAE5F,MAAQ8E,CAAW,GAAC,GAAE,CAACA,IAA5E,IACMpE,GAASiF,EAAAA,EAAAA,UAAQ,kBF+ClB,SAAsB5F,EAASC,GACpC,OAAOiB,GAAYlB,EAASC,EAAGj1B,GAAA,CAAI86B,IAAK,MADM5iC,UAAAwH,OAAA,QAAAC,IAAAzH,UAAA,GAAAA,UAAA,GAAG,CAAC,GAEpD,CEjD+B6iC,CAAa/F,EAAS+E,EAAa,CAAEvE,SAAUr7B,EAAAA,QAASC,IAAK,GAAE,CAAC46B,EAAS+E,IAEhGiB,EAAS,eAAAp5B,GAAA5K,EAAAA,EAAAA,UAAG,YAChB,IAEE,IAAMikC,QAAUnG,GAAYE,EAAS+E,GACrCK,EAASa,GAEJ,MAADA,GAAAA,EAAGtF,eFSN,SAA4BrmB,EAAAQ,GAAA,OAAAumB,GAAAp+B,MAAC,KAADC,UAAA,CETRgjC,CAAclG,EAAS+E,EAAa,CAAEvE,SAAUr7B,EAAAA,QAASC,MAE9EkgC,GAAa,GACb,IAAMa,QF3BL,SAA4B9L,GAAA,OAAAuG,GAAA39B,MAAC,KAADC,UAAA,CE2BVkjC,CAAcH,EAAEvF,QAAS,CAAEI,WAAY,IAAME,UAAW,OAC3E,GAAImF,EAAM,OACFzE,GAAgBqD,GACtB,IAAMlgC,QAAUjB,IACV+hC,QAAYhhC,IAClBmgC,EAAUjgC,GACVggC,EAAUc,GACVhwB,EAAAA,QAAMC,MAAM,2BAAQ,uFACtB,CACF,CAAE,MAAO1R,GACPyR,EAAAA,QAAMC,MAAM,yCAAY,MAAD1R,OAAC,EAADA,EAAGkH,UAAW,iCACvC,CAAC,QACSk6B,GAAa,EAAQ,CACjC,IAAC,kBAtBc,OAAA14B,EAAA3J,MAAA,KAAAC,UAAA,KAwBTmjC,EAAc,eAAAh5B,GAAArL,EAAAA,EAAAA,UAAG,kBACf0/B,GAAgBqD,GACtB,IAAMlgC,QAAUjB,IACV+hC,QAAYhhC,IAClBmgC,EAAUjgC,GACVggC,EAAUc,GACVhwB,EAAAA,QAAMC,MAAM,qBAAO,mJACrB,IAAC,kBAPmB,OAAAvI,EAAApK,MAAA,KAAAC,UAAA,KASdojC,EAAY,eAAA74B,GAAAzL,EAAAA,EAAAA,UAAG,YACnB,IAEE,GAAoB,QAAhBmD,EAAAA,QAASC,GACX,UACQ89B,GAA4BgC,EACpC,CAAE,MAAOhhC,SAED8B,EAAsBk/B,EAC9B,YAEMl/B,EAAsBk/B,GAE9B,IAAMrgC,QAAUjB,IACV+hC,QAAYhhC,IAClBmgC,EAAUjgC,GACVggC,EAAUc,GACVR,EAAc,IACdxvB,EAAAA,QAAMC,MAAM,2BAAQ,yDACtB,CAAE,MAAO1R,GACPyR,EAAAA,QAAMC,MAAM,4BAAS,MAAD1R,OAAC,EAADA,EAAGkH,UAAW,uCACpC,CACF,IAAC,kBAtBiB,OAAAqC,EAAAxK,MAAA,KAAAC,UAAA,KAwBlB,OACEwG,EAAAA,GAAAA,KAAC4M,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,UACpCiM,EAAAA,GAAAA,MAACsU,GAAAA,QAAU,CAAC9S,sBAAuBrP,GAAOs+B,OAAO18B,SAAA,EAC/CiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO8H,OAAOlG,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAC,6BAC1B+6B,GACC9uB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOu+B,YAAY38B,SAAA,EAC9BH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,mBAAmByF,KAAM,GAAIpG,MAAM,UAClDO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOw+B,WAAW58B,SAAC,mDAGlCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOy+B,cAAc78B,SAAA,EAChCH,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAK,cAAcyF,KAAM,GAAIpG,MAAM,UAC7CO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO0+B,aAAa98B,SAAC,2BAGtCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO3B,GAAO2+B,YAAY/8B,SAAA,CAAC,sBAAU,MAANvF,OAAM,EAANA,EAAQL,OAAQ,cAGvDyF,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAO4+B,SAASh9B,SAC1B26B,GAAMx6B,KAAI,SAAA67B,GAAC,OACV/vB,EAAAA,GAAAA,MAAC5L,GAAAA,QAAgB,CAAaN,MAAO,CAAC3B,GAAO6+B,SAAU/B,IAAgBc,EAAE5F,KAAOh4B,GAAO8+B,cAAe58B,QAAS,WAAF,OAAQ66B,EAAea,EAAE5F,IAAI,EAACp2B,SAAA,EACzIH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO++B,UAAUn9B,SAAEg8B,EAAEpsC,SAClCiQ,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOg/B,UAAUp9B,SAAEg8B,EAAEpB,SAClC/6B,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOi/B,SAASr9B,SAAEg8B,EAAEnB,SAHZmB,EAAE5F,IAIN,OAIvBv2B,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOk/B,WAAWt9B,SAAA,EAC7BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO,CAAC3B,GAAOm/B,WAAYpH,IAAYP,GAAYC,QAAUz3B,GAAOo/B,eAAgBl9B,QAAS,WAAF,OAAQ86B,EAAWxF,GAAYC,OAAO,EAAC71B,UAClJH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOq/B,YAAYz9B,SAAC,0BAEnCH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO,CAAC3B,GAAOm/B,WAAYpH,IAAYP,GAAYE,QAAU13B,GAAOo/B,eAAgBl9B,QAAS,WAAF,OAAQ86B,EAAWxF,GAAYE,OAAO,EAAC91B,UAClJH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOq/B,YAAYz9B,SAAC,gCAEnCH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO,CAAC3B,GAAOm/B,WAAYpH,IAAYP,GAAYG,QAAU33B,GAAOo/B,eAAgBl9B,QAAS,WAAF,OAAQ86B,EAAWxF,GAAYG,OAAO,EAAC/1B,UAClJH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOq/B,YAAYz9B,SAAC,iBAIrCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOs/B,OAAO19B,SAAA,EACzBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOu/B,QAAQ39B,SAAC,iIAC7BH,EAAAA,GAAAA,KAACC,EAAAA,QAAI,CAACC,MAAO3B,GAAOw/B,MAAM59B,SACP,QAAhB1E,EAAAA,QAASC,IACRsE,EAAAA,GAAAA,KAAC8N,GAAAA,QAAK,CACJnQ,OAAQ,CAAEqgC,IAAK,iEAAiEzG,oBAAwB,MAALK,OAAK,EAALA,EAAOqG,UAAWhH,MACrH/2B,MAAO,CAAEoE,MAAO,IAAKC,OAAQ,QAG/BvE,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACw9B,YAAU,EAACh+B,MAAO,CAAET,MAAO,OAAQ0J,UAAW,UAAWhJ,UAAO,MAALy3B,OAAK,EAALA,EAAOX,SAAUA,OAGtF7qB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO4/B,UAAUh+B,SAAA,EAC5BH,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAO6/B,WAAY39B,QAAS67B,EAAUn8B,UAC7DH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8/B,eAAel+B,SAAEw7B,EAAY,wBAAW,gCAE9D37B,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAO+/B,aAAc79B,QAASk8B,EAAex8B,UACpEH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOggC,iBAAiBp+B,SAAC,kDAK5CH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,oCAClCiM,EAAAA,GAAAA,MAAC1L,EAAAA,QAAI,CAACR,MAAO,CAAET,MAAO,OAAQ4H,aAAc,GAAIlH,SAAA,CAAC,6BAAOu6B,MACxDtuB,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOigC,UAAUr+B,SAAA,EAC5BH,EAAAA,GAAAA,KAACgN,GAAAA,QAAS,CACRC,YAAY,gHACZC,MAAOsuB,EACPruB,aAAcsuB,EACdv7B,MAAO3B,GAAOkgC,SAEhBz+B,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO3B,GAAO6/B,WAAY39B,QAASm8B,EAAaz8B,UAChEH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO8/B,eAAel+B,SAAC,uBAIxCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOmgC,SAASv+B,SAAA,EAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4I,aAAahH,SAAC,8BAClCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOogC,YAAYx+B,SAAC,qFACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOogC,YAAYx+B,SAAC,uDACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOogC,YAAYx+B,SAAC,yEACjCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOogC,YAAYx+B,SAAC,uDAK3C,CAEA,IAAM5B,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CAAEuH,KAAM,EAAGjH,gBAAiB,WACvC69B,OAAQ,CAAEv2B,QAAS,IACnBD,OAAQ,CAAEgB,aAAc,IACxBtX,MAAO,CAAEyP,SAAU,GAAIG,WAAY,MAAOF,MAAO,WACjDq9B,YAAa,CAAE12B,UAAW,EAAGzH,cAAe,MAAOE,WAAY,SAAU+/B,IAAK,EAAG5/B,gBAAiB,UAAWD,kBAAmB,GAAIK,gBAAiB,EAAGH,aAAc,IACtK+9B,cAAe,CAAE52B,UAAW,EAAGzH,cAAe,MAAOE,WAAY,SAAU+/B,IAAK,EAAG5/B,gBAAiB,UAAWD,kBAAmB,GAAIK,gBAAiB,EAAGH,aAAc,IACxK89B,WAAY,CAAEt9B,MAAO,OAAQ2H,WAAY,GACzC61B,aAAc,CAAEx9B,MAAO,OAAQ2H,WAAY,GAC3C81B,YAAa,CAAE92B,UAAW,EAAG3G,MAAO,QACpC0H,aAAc,CAAEf,UAAW,GAAIiB,aAAc,GAAI7H,SAAU,GAAIG,WAAY,MAAOF,MAAO,QACzF09B,SAAU,CAAEyB,IAAK,IACjBxB,SAAU,CAAEp+B,gBAAiB,OAAQC,aAAc,GAAIqH,QAAS,GAAIoT,YAAa,EAAGD,YAAa,WACjG4jB,aAAc,CAAE5jB,YAAa,WAC7B6jB,UAAW,CAAE99B,SAAU,GAAIG,WAAY,MAAOF,MAAO,QACrD89B,UAAW,CAAEn3B,UAAW,EAAG5G,SAAU,GAAIC,MAAO,WAChD+9B,SAAU,CAAEp3B,UAAW,EAAG5G,SAAU,GAAIC,MAAO,QAC/Cg+B,WAAY,CAAE9+B,cAAe,MAAOigC,IAAK,IACzClB,WAAY,CAAEt+B,gBAAiB,EAAGL,kBAAmB,GAAI2a,YAAa,EAAGD,YAAa,UAAWxa,aAAc,EAAGD,gBAAiB,QACnI2+B,cAAe,CAAElkB,YAAa,WAC9BmkB,YAAa,CAAEn+B,MAAO,QACtBo+B,OAAQ,CAAEz3B,UAAW,GAAIpH,gBAAiB,OAAQC,aAAc,GAAIqH,QAAS,GAAIoT,YAAa,EAAGD,YAAa,WAC9GqkB,QAAS,CAAEt+B,SAAU,GAAIG,WAAY,MAAOF,MAAO,QACnDs+B,MAAO,CAAE33B,UAAW,GAAIvH,WAAY,UACpCs/B,UAAW,CAAE/3B,UAAW,GAAIzH,cAAe,MAAOigC,IAAK,IACvDR,WAAY,CAAEp/B,gBAAiB,UAAWI,gBAAiB,GAAIL,kBAAmB,GAAIE,aAAc,GACpGo/B,eAAgB,CAAE5+B,MAAO,OAAQE,WAAY,OAC7C2+B,aAAc,CAAEt/B,gBAAiB,UAAWI,gBAAiB,GAAIL,kBAAmB,GAAIE,aAAc,GACtGs/B,iBAAkB,CAAE9+B,MAAO,UAAWE,WAAY,OAClD6+B,UAAW,CAAEp4B,UAAW,GAAIzH,cAAe,MAAOigC,IAAK,GAAI//B,WAAY,UACvE4/B,MAAO,CAAEx4B,KAAM,EAAGjH,gBAAiB,OAAQ0a,YAAa,EAAGD,YAAa,UAAWxa,aAAc,EAAGF,kBAAmB,GAAIwF,OAAQ,IACnIm6B,SAAU,CAAEt4B,UAAW,GAAIpH,gBAAiB,OAAQC,aAAc,GAAIqH,QAAS,GAAIoT,YAAa,EAAGD,YAAa,WAChHklB,YAAa,CAAEv4B,UAAW,EAAG3G,MAAO,UC1OvB,SAASo/B,GAAgBxmC,GAAkB,IAAf/I,EAAU+I,EAAV/I,WACzCwa,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA7BrN,EAAIuN,EAAA,GAAE80B,EAAO90B,EAAA,GACpBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAtCtX,EAAOuX,EAAA,GAAEF,EAAUE,EAAA,GAC1BE,GAAgCP,EAAAA,EAAAA,UAAS,IAAGQ,GAAAN,EAAAA,EAAAA,SAAAK,EAAA,GAArCowB,EAAQnwB,EAAA,GAAEwxB,EAAWxxB,EAAA,GAC5BE,GAAgCV,EAAAA,EAAAA,UAAS,IAAGW,GAAAT,EAAAA,EAAAA,SAAAQ,EAAA,GAArCs0B,EAAQr0B,EAAA,GAAEs0B,EAAWt0B,EAAA,IAE5BqB,EAAAA,EAAAA,YAAU,YACRzT,EAAAA,EAAAA,UAAC,YACC,IAAM2D,QAAWH,IACjBigC,EAAY9/B,EACd,GAHA3D,EAIF,GAAG,IAEH,IAAM2mC,EAAY,SAACC,GAEjB,GADAF,EAAYE,GAAO,sEACC,QAAhBzjC,EAAAA,QAASC,GACXuQ,EAAAA,QAAMC,MAAM,2BAAQgzB,GAAO,6CAG3B,IAAMlX,OAAO9b,MAAM,iCAAQgzB,GAAO,yCAAa,CAAE,MAAO/gC,GAAI,CAEhE,EAEMghC,EAAc,eAAAx7B,GAAArL,EAAAA,EAAAA,UAAG,YAErB,GADA0mC,EAAY,IACPviC,EAAKG,OAAV,CAKA,IAAMwiC,EAAU3iC,EAAKG,OAAO47B,QAAQ,oBAAqB,IACzD,IAEE,GADAtuB,GAAW,GACS,QAAhBzO,EAAAA,QAASC,GACX,UACQ89B,GAA4B4F,EACpC,CAAE,MAAO5kC,GAEP,IAAI,4BAA4B6kC,KAAKD,GAGnC,MAAM5kC,QAFA8B,EAAsB8iC,EAIhC,YAEM9iC,EAAsB8iC,GAEV,QAAhB3jC,EAAAA,QAASC,IACXuQ,EAAAA,QAAMC,MAAM,eAAM,sEAEpB5c,EAAWkpC,QAAQ,OACrB,CAAE,MAAOh+B,GACP7B,QAAQtC,MAAM,4BAASmE,GACvBykC,GAAW,MAADzkC,OAAC,EAADA,EAAGkH,UAAW,uCAC1B,CAAC,QACCwI,GAAW,EACb,CA5BA,MAFE+0B,EAAU,uCA+Bd,IAAC,kBAlCmB,OAAAt7B,EAAApK,MAAA,KAAAC,UAAA,KAoCpB,OACEwG,EAAAA,GAAAA,KAAC4M,GAAAA,QAAY,CAAC1M,MAAO3B,GAAOG,UAAUyB,UACpCiM,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAO+gC,KAAKn/B,SAAA,EACvBH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOxO,MAAMoQ,SAAC,4DAC3BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOghC,cAAcp/B,SAAC,gCACnCH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACw9B,YAAU,EAACh+B,MAAO3B,GAAOihC,cAAcr/B,SAAEu6B,GAAY,2BAC3D16B,EAAAA,GAAAA,KAACgN,GAAAA,QAAS,CACRC,YAAY,sEACZ/M,MAAO3B,GAAOkgC,MACdvxB,MAAOzQ,EACP0Q,aAAc2xB,EACdW,eAAe,iBAEdV,IAAY/+B,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOlI,MAAM8J,SAAE4+B,KAC3C/+B,EAAAA,GAAAA,KAACQ,GAAAA,QAAgB,CAACN,MAAO,CAAC3B,GAAOmhC,IAAK7sC,GAAW,CAAE4R,QAAS,KAAQhE,QAAS0+B,EAAgBpe,SAAUluB,EAAQsN,UAC7GH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOohC,QAAQx/B,SAAEtN,EAAU,wBAAW,uBAK7D,CAEA,IAAM0L,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CAAEuH,KAAM,EAAGjH,gBAAiB,UAAWH,WAAY,SAAUD,eAAgB,UACxF0gC,KAAM,CAAEh7B,MAAO,MAAOtF,gBAAiB,OAAQC,aAAc,GAAIqH,QAAS,GAAIzB,UAAW,EAAGgC,cAAe,KAC3G9W,MAAO,CAAEyP,SAAU,GAAIG,WAAY,MAAOF,MAAO,OAAQ4H,aAAc,IACvEk4B,cAAe,CAAE9/B,MAAO,OAAQ4H,aAAc,GAC9Cm4B,cAAe,CAAE//B,MAAO,OAAQ4H,aAAc,IAC9Co3B,MAAO,CAAEl6B,OAAQ,GAAImV,YAAa,EAAGD,YAAa,UAAWxa,aAAc,EAAGF,kBAAmB,GAAIsI,aAAc,GACnHhR,MAAO,CAAEoJ,MAAO,UAAW4H,aAAc,GACzCq4B,IAAK,CAAEn7B,OAAQ,GAAIvF,gBAAiB,UAAWC,aAAc,EAAGJ,WAAY,SAAUD,eAAgB,UACtG+gC,QAAS,CAAElgC,MAAO,OAAQE,WAAY,SCxElCigC,IAAMC,EAAAA,EAAAA,WACNC,IAAQC,EAAAA,EAAAA,WAGd,SAASC,KACP,IAAQjgC,GAAMD,EAAAA,EAAAA,kBAANC,EA+BFkgC,EAAc,SAACjkC,GACnB,OAAO+D,EAAE,cAAc/D,EAAI0Q,gBAC7B,EAEA,OACEN,EAAAA,GAAAA,MAACwzB,GAAIM,UAAS,CACZC,cAjCK,SAAA9nC,GAAA,IAAG4rB,EAAK5rB,EAAL4rB,MAAK,MAAQ,CACrBmc,WAAY,SAAFl9B,GAAiC,IACrC+nB,EADSoV,EAAOn9B,EAAPm9B,QAAS5gC,EAAKyD,EAALzD,MAAOoG,EAAI3C,EAAJ2C,KAiB7B,MAdmB,SAAfoe,EAAM7jB,KACR6qB,EAAWoV,EAAU,OAAS,eACN,WAAfpc,EAAM7jB,KACf6qB,EAAWoV,EAAU,OAAS,eACN,SAAfpc,EAAM7jB,KACf6qB,EAAWoV,EAAU,SAAW,iBACR,cAAfpc,EAAM7jB,KACf6qB,EAAWoV,EAAU,QAAU,gBACP,aAAfpc,EAAM7jB,KACf6qB,EAAWoV,EAAU,eAAiB,uBACd,aAAfpc,EAAM7jB,OACf6qB,EAAWoV,EAAU,WAAa,qBAG7BrgC,EAAAA,GAAAA,KAACsM,EAAAA,QAAQ,CAAClM,KAAM6qB,EAAUplB,KAAMA,EAAMpG,MAAOA,GACtD,EACA6gC,sBAAuB,UACvBC,wBAAyB,OACzBC,aAAa,EACd,EAWCtgC,MAAO,CAAEugC,cAAe,QAAStgC,SAAA,EAEjCH,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,OACLugC,UAAWxd,GACXlhB,QAAS,CAAE2+B,YAAaX,EAAY,YAEtCjgC,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,SACLugC,UAAWE,GACX5+B,QAAS,CAAE2+B,YAAaX,EAAY,cAEtCjgC,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,OACLugC,UAAWG,GACX7+B,QAAS,CAAE2+B,YAAaX,EAAY,YAEtCjgC,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,YACLugC,UAAWI,GACX9+B,QAAS,CAAE2+B,YAAaX,EAAY,iBAEtCjgC,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,WACLugC,UAAWK,GACX/+B,QAAS,CAAE2+B,YAAaX,EAAY,gBAEtCjgC,EAAAA,GAAAA,KAAC4/B,GAAIc,OAAM,CACTtgC,KAAK,WACLugC,UAAWM,GACXh/B,QAAS,CAAE2+B,YAAaX,EAAY,iBAI5C,CAGe,SAASiB,KACtB,IAAAp3B,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA1DrQ,EAAiBuQ,EAAA,GAAEm3B,EAAoBn3B,EAAA,GAiB9C,OAdA+B,EAAAA,EAAAA,YAAU,WACR,IAAMq1B,EAAS,eAAAz9B,GAAArL,EAAAA,EAAAA,UAAG,YAChB,UACQF,IACN+oC,GAAqB,EACvB,CAAE,MAAO9qC,GACPsC,QAAQtC,MAAM,6BAA8BA,EAC9C,CACF,IAAC,kBAPc,OAAAsN,EAAApK,MAAA,KAAAC,UAAA,KASf4nC,GACF,GAAG,IAGE3nC,GASEuG,EAAAA,GAAAA,KAACqhC,GAAa,KAPjBj1B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO,CAAE+F,KAAM,EAAGrH,eAAgB,SAAUC,WAAY,UAAWsB,SAAA,EACvEH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAEkG,UAAW,GAAI5G,SAAU,GAAIC,MAAO,QAASU,SAAC,4BAMrE,CAGA,SAASkhC,KACP,IAAQthC,GAAMD,EAAAA,EAAAA,kBAANC,EACRoK,GAAkCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAzCm3B,EAASl3B,EAAA,GAAEm3B,EAAYn3B,EAAA,GAW9B,IATA2B,EAAAA,EAAAA,YAAU,WAGR,IvBKmCy1B,EuBFnC,OALAlpC,EAAAA,EAAAA,UAAC,YAAcipC,QAAmB3lC,IAAgB,GAAlDtD,GvBQsB,oBADakpC,GuBLClpC,EAAAA,EAAAA,UAAC,YACnCipC,QAAmB3lC,IACrB,KvBIyC,WAAO,GAClDmC,EAAY0jC,IAAID,GACT,kBAAMzjC,EAAY5J,OAAOqtC,EAAU,EuBJ1C,GAAG,IAEe,OAAdF,EACF,OACEl1B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO,CAAE+F,KAAM,EAAGrH,eAAgB,SAAUC,WAAY,UAAWsB,SAAA,EACvEH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO,CAAEkG,UAAW,GAAI5G,SAAU,GAAIC,MAAO,QAASU,SAAC,6BAMnE,IAAMuhC,EAAiB,SAAC1lC,GACtB,OAAO+D,EAAE,cAAc/D,IACzB,EAEA,OACEoQ,EAAAA,GAAAA,MAAC0zB,GAAMI,UAAS,CAEdyB,iBAAkBL,EAAY,OAAS,aACvCnB,cAAe,CACbK,aAAa,EACboB,iBAAkB,CAChBjiC,WAAY,QAEdkiC,gBAAiB,WACjB1hC,SAAA,EAEFH,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,aACLugC,UAAW9B,GACX58B,QAAS,CAAElS,MAAO,mBAEpBiQ,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,OACLugC,UAAWX,GACX/9B,QAAS,CAAEu+B,aAAa,MAE1BxgC,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,iBACLugC,UAAWmB,GACX7/B,QAAS,CAAElS,MAAO2xC,EAAe,uBAEnC1hC,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,aACLugC,UAAWvV,GACXnpB,QAAS,CACPlS,MAAO2xC,EAAe,eACtBK,mBAAmB,MAGvB/hC,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,gBACLugC,UAAWhN,GACX1xB,QAAS,CAAElS,MAAO2xC,EAAe,sBAEnC1hC,EAAAA,GAAAA,KAAC8/B,GAAMY,OAAM,CACXtgC,KAAK,UACLugC,UAAW1F,GACXh5B,QAAS,CAAElS,MAAO,gCAzCfuxC,EAAY,YAAc,gBA6CrC,CClMe,SAASU,KAEtB,IAAAl4B,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA5Cm4B,EAAUj4B,EAAA,GAAEk4B,EAAal4B,EAAA,GAChCG,GAAkCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,SAAAE,EAAA,GAAzCg4B,EAAS/3B,EAAA,GAAEg4B,EAAYh4B,EAAA,GAgC9B,OA7BA2B,EAAAA,EAAAA,YAAU,WACc,SAAAs2B,IAsBrB,OAtBqBA,GAAA/pC,EAAAA,EAAAA,UAAtB,YACE,IACEK,QAAQW,IAAI,uBAGPG,YACGrB,IACNO,QAAQW,IAAI,2BAIRiV,KACN5V,QAAQW,IAAI,uBAGd,CAAE,MAAOjD,GACPsC,QAAQtC,MAAM,mCAAoCA,GAClD+rC,EAAa/rC,EACf,CAAC,QACC6rC,GAAc,SACRI,EAAAA,WACR,CACF,KAAC/oC,MAAA,KAAAC,UAAA,EAvBc,WACO6oC,EAAA9oC,MAAC,KAADC,UAAA,CAwBtB+oC,EACF,GAAG,IAGCJ,GAEA/1B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOG,UAAUyB,SAAA,EAC5BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO+d,UAAUnc,SAAC,gDAC/BH,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAOikC,aAAariC,SAAEgiC,EAAUzgC,aAM9CugC,GAWHjiC,EAAAA,GAAAA,KAACyiC,EAAAA,iBAAgB,CAAAtiC,UACfiM,EAAAA,GAAAA,MAACs2B,EAAAA,QAAmB,CAAAviC,SAAA,EAClBH,EAAAA,GAAAA,KAAC6M,EAAAA,QAAS,CAACC,SAAS,eAAe9N,gBAAgB,aACnDgB,EAAAA,GAAAA,KAACkhC,GAAY,UAZf90B,EAAAA,GAAAA,MAACnM,EAAAA,QAAI,CAACC,MAAO3B,GAAOG,UAAUyB,SAAA,EAC5BH,EAAAA,GAAAA,KAACqM,EAAAA,QAAiB,CAACxG,KAAK,QAAQpG,MAAM,aACtCO,EAAAA,GAAAA,KAACU,EAAAA,QAAI,CAACR,MAAO3B,GAAO4H,YAAYhG,SAAC,wCAczC,CAjEAmiC,EAAAA,uBAAoC7W,OAAM,WAAO,IAmEjD,IAAMltB,GAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTuH,KAAM,EACNrH,eAAgB,SAChBC,WAAY,SACZG,gBAAiB,UACjBsH,QAAS,IAEXH,YAAa,CACXC,UAAW,GACX5G,SAAU,GACVC,MAAO,QAET6c,UAAW,CACT9c,SAAU,GACVG,WAAY,OACZF,MAAO,UACP4H,aAAc,IAEhBm7B,aAAc,CACZhjC,SAAU,GACVC,MAAO,OACP0J,UAAW,W,g7pBCpGXw5B,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB5hC,IAAjB6hC,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjD5mC,GAAI4mC,EACJI,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBL,GAAUM,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAH,EAAoB3lC,EAAIimC,E,MC5BxB,IAAIE,EAAW,GACfR,EAAoBS,EAAI,CAACvwC,EAAQwwC,EAAUplC,EAAIjN,KAC9C,IAAGqyC,EAAH,CAMA,IAAIC,EAAeC,IACnB,IAAS/V,EAAI,EAAGA,EAAI2V,EAASpiC,OAAQysB,IAAK,CAGzC,IAFA,IAAK6V,EAAUplC,EAAIjN,GAAYmyC,EAAS3V,GACpCgW,GAAY,EACPC,EAAI,EAAGA,EAAIJ,EAAStiC,OAAQ0iC,MACpB,EAAXzyC,GAAsBsyC,GAAgBtyC,IAAa8tB,OAAOC,KAAK4jB,EAAoBS,GAAGM,OAAO3nC,GAAS4mC,EAAoBS,EAAErnC,GAAKsnC,EAASI,MAC9IJ,EAASM,OAAOF,IAAK,IAErBD,GAAY,EACTxyC,EAAWsyC,IAAcA,EAAetyC,IAG7C,GAAGwyC,EAAW,CACbL,EAASQ,OAAOnW,IAAK,GACrB,IAAIrJ,EAAIlmB,SACE+C,IAANmjB,IAAiBtxB,EAASsxB,EAC/B,CACD,CACA,OAAOtxB,CAnBP,CAJC7B,EAAWA,GAAY,EACvB,IAAI,IAAIw8B,EAAI2V,EAASpiC,OAAQysB,EAAI,GAAK2V,EAAS3V,EAAI,GAAG,GAAKx8B,EAAUw8B,IAAK2V,EAAS3V,GAAK2V,EAAS3V,EAAI,GACrG2V,EAAS3V,GAAK,CAAC6V,EAAUplC,EAAIjN,G,KCJ/B2xC,EAAoBiB,EAAKb,IACxB,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,IAAOf,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoB1lC,EAAE4mC,EAAQ,CAAEnvB,EAAGmvB,IAC5BA,G,MCNR,IACIE,EADAC,EAAWllB,OAAOmlB,eAAkBC,GAASplB,OAAOmlB,eAAeC,GAASA,GAASA,EAAa,UAQtGvB,EAAoB7iC,EAAI,SAASmN,EAAOk3B,GAEvC,GADU,EAAPA,IAAUl3B,EAAQm3B,KAAKn3B,IAChB,EAAPk3B,EAAU,OAAOl3B,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPk3B,GAAal3B,EAAM62B,WAAY,OAAO72B,EAC1C,GAAW,GAAPk3B,GAAoC,oBAAfl3B,EAAMo3B,KAAqB,OAAOp3B,CAC5D,CACA,IAAIq3B,EAAKxlB,OAAOtgB,OAAO,MACvBmkC,EAAoBxe,EAAEmgB,GACtB,IAAIC,EAAM,CAAC,EACXR,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI5lB,EAAiB,EAAP+lB,GAAYl3B,EAAyB,iBAAXmR,KAAyB2lB,EAAeS,QAAQpmB,GAAUA,EAAU4lB,EAAS5lB,GACxHU,OAAO2lB,oBAAoBrmB,GAASpgB,SAASjC,GAASwoC,EAAIxoC,GAAO,IAAOkR,EAAMlR,KAI/E,OAFAwoC,EAAa,QAAI,IAAM,EACvB5B,EAAoB1lC,EAAEqnC,EAAIC,GACnBD,CACR,C,KCxBA3B,EAAoB1lC,EAAI,CAAC6lC,EAAS4B,KACjC,IAAI,IAAI3oC,KAAO2oC,EACX/B,EAAoBrG,EAAEoI,EAAY3oC,KAAS4mC,EAAoBrG,EAAEwG,EAAS/mC,IAC5E+iB,OAAO6lB,eAAe7B,EAAS/mC,EAAK,CAAE6oC,YAAY,EAAMr/B,IAAKm/B,EAAW3oC,MCJ3E4mC,EAAoBryB,EAAI,CAAC,EAGzBqyB,EAAoBpoC,EAAKsqC,GACjB51B,QAAQkQ,IAAIL,OAAOC,KAAK4jB,EAAoBryB,GAAGuG,QAAO,CAACiuB,EAAU/oC,KACvE4mC,EAAoBryB,EAAEvU,GAAK8oC,EAASC,GAC7BA,IACL,KCNJnC,EAAoBoC,EAAKF,GAEjB,aAAeA,EAAU,IAAM,CAAC,IAAM,WAAW,IAAM,WAAW,IAAM,WAAW,IAAM,YAAYA,GAAW,YCFxHlC,EAAoBqC,SAAYH,MCDhClC,EAAoBsC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOd,MAAQ,IAAIe,SAAS,cAAb,EAChB,CAAE,MAAO5qC,GACR,GAAsB,kBAAXwtB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB4a,EAAoBrG,EAAI,CAAC4H,EAAKkB,IAAUtmB,OAAOumB,UAAUC,eAAepC,KAAKgB,EAAKkB,G,MCAlF,IAAIG,EAAa,CAAC,EACdC,EAAoB,OAExB7C,EAAoB8C,EAAI,CAAC7N,EAAKrhC,EAAMwF,EAAK8oC,KACxC,GAAGU,EAAW3N,GAAQ2N,EAAW3N,GAAKv0B,KAAK9M,OAA3C,CACA,IAAImvC,EAAQC,EACZ,QAAW3kC,IAARjF,EAEF,IADA,IAAI6pC,EAAUC,SAASC,qBAAqB,UACpCtY,EAAI,EAAGA,EAAIoY,EAAQ7kC,OAAQysB,IAAK,CACvC,IAAItyB,EAAI0qC,EAAQpY,GAChB,GAAGtyB,EAAE6qC,aAAa,QAAUnO,GAAO18B,EAAE6qC,aAAa,iBAAmBP,EAAoBzpC,EAAK,CAAE2pC,EAASxqC,EAAG,KAAO,CACpH,CAEGwqC,IACHC,GAAa,GACbD,EAASG,SAASG,cAAc,WAEzBC,QAAU,QACjBP,EAAOQ,QAAU,IACbvD,EAAoBwD,IACvBT,EAAOU,aAAa,QAASzD,EAAoBwD,IAElDT,EAAOU,aAAa,eAAgBZ,EAAoBzpC,GAExD2pC,EAAOW,IAAMzO,GAEd2N,EAAW3N,GAAO,CAACrhC,GACnB,IAAI+vC,EAAmB,CAAC1nB,EAAM2nB,KAE7Bb,EAAOc,QAAUd,EAAOe,OAAS,KACjCC,aAAaR,GACb,IAAIS,EAAUpB,EAAW3N,GAIzB,UAHO2N,EAAW3N,GAClB8N,EAAOkB,YAAclB,EAAOkB,WAAWC,YAAYnB,GACnDiB,GAAWA,EAAQ3oC,SAASC,GAAQA,EAAGsoC,KACpC3nB,EAAM,OAAOA,EAAK2nB,IAElBL,EAAU9hB,WAAWkiB,EAAiBQ,KAAK,UAAM9lC,EAAW,CAAE+lC,KAAM,UAAWC,OAAQtB,IAAW,MACtGA,EAAOc,QAAUF,EAAiBQ,KAAK,KAAMpB,EAAOc,SACpDd,EAAOe,OAASH,EAAiBQ,KAAK,KAAMpB,EAAOe,QACnDd,GAAcE,SAASoB,KAAKC,YAAYxB,EApCkB,E,KCH3D/C,EAAoBxe,EAAK2e,IACH,qBAAXqE,QAA0BA,OAAOC,aAC1CtoB,OAAO6lB,eAAe7B,EAASqE,OAAOC,YAAa,CAAEn6B,MAAO,WAE7D6R,OAAO6lB,eAAe7B,EAAS,aAAc,CAAE71B,OAAO,KCLvD01B,EAAoB0E,IAAOtE,IAC1BA,EAAOuE,MAAQ,GACVvE,EAAO7iC,WAAU6iC,EAAO7iC,SAAW,IACjC6iC,GCHRJ,EAAoBzG,EAAI,K,MCKxB,IAAIqL,EAAkB,CACrB,IAAK,GAGN5E,EAAoBryB,EAAEmzB,EAAI,CAACoB,EAASC,KAElC,IAAI0C,EAAqB7E,EAAoBrG,EAAEiL,EAAiB1C,GAAW0C,EAAgB1C,QAAW7jC,EACtG,GAA0B,IAAvBwmC,EAGF,GAAGA,EACF1C,EAASzhC,KAAKmkC,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAIx4B,SAAQ,CAACC,EAASC,IAAYq4B,EAAqBD,EAAgB1C,GAAW,CAAC31B,EAASC,KAC1G21B,EAASzhC,KAAKmkC,EAAmB,GAAKC,GAGtC,IAAI7P,EAAM+K,EAAoBzG,EAAIyG,EAAoBoC,EAAEF,GAEpDzuC,EAAQ,IAAIqG,MAgBhBkmC,EAAoB8C,EAAE7N,GAfF2O,IACnB,GAAG5D,EAAoBrG,EAAEiL,EAAiB1C,KAEf,KAD1B2C,EAAqBD,EAAgB1C,MACR0C,EAAgB1C,QAAW7jC,GACrDwmC,GAAoB,CACtB,IAAIE,EAAYnB,IAAyB,SAAfA,EAAMQ,KAAkB,UAAYR,EAAMQ,MAChEY,EAAUpB,GAASA,EAAMS,QAAUT,EAAMS,OAAOX,IACpDjwC,EAAMqL,QAAU,iBAAmBojC,EAAU,cAAgB6C,EAAY,KAAOC,EAAU,IAC1FvxC,EAAM+J,KAAO,iBACb/J,EAAM2wC,KAAOW,EACbtxC,EAAMwxC,QAAUD,EAChBH,EAAmB,GAAGpxC,EACvB,IAGuC,SAAWyuC,EAASA,EAE/D,GAYHlC,EAAoBS,EAAEK,EAAKoB,GAA0C,IAA7B0C,EAAgB1C,GAGxD,IAAIgD,EAAuB,CAACC,EAA4Bx6B,KACvD,IAGIs1B,EAAUiC,GAHTxB,EAAU0E,EAAaC,GAAW16B,EAGhBkgB,EAAI,EAC3B,GAAG6V,EAAS9xB,MAAMvV,GAAgC,IAAxBurC,EAAgBvrC,KAAa,CACtD,IAAI4mC,KAAYmF,EACZpF,EAAoBrG,EAAEyL,EAAanF,KACrCD,EAAoB3lC,EAAE4lC,GAAYmF,EAAYnF,IAGhD,GAAGoF,EAAS,IAAIn1C,EAASm1C,EAAQrF,EAClC,CAEA,IADGmF,GAA4BA,EAA2Bx6B,GACrDkgB,EAAI6V,EAAStiC,OAAQysB,IACzBqX,EAAUxB,EAAS7V,GAChBmV,EAAoBrG,EAAEiL,EAAiB1C,IAAY0C,EAAgB1C,IACrE0C,EAAgB1C,GAAS,KAE1B0C,EAAgB1C,GAAW,EAE5B,OAAOlC,EAAoBS,EAAEvwC,IAG1Bo1C,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBjqC,QAAQ6pC,EAAqBf,KAAK,KAAM,IAC3DmB,EAAmB5kC,KAAOwkC,EAAqBf,KAAK,KAAMmB,EAAmB5kC,KAAKyjC,KAAKmB,G,KClFvF,IAAIE,EAAsBxF,EAAoBS,OAAEpiC,EAAW,CAAC,MAAM,IAAO2hC,EAAoB,QAC7FwF,EAAsBxF,EAAoBS,EAAE+E,E","sources":["src/i18n/translations/cs.js","src/i18n/translations/en.js","src/i18n/translations/es.js","src/i18n/translations/zh.js","src/i18n/i18n.js","src/utils/premium.js","src/components/QuestionLanguageSwitcher.js","src/utils/assetDataService.js","src/utils/styleUtils.js","src/screens/BrowseScreen.js","src/data/mockData.js","src/utils/database.js","src/screens/ExamScreen.js","src/screens/FavoritesScreen.js","src/screens/HomeScreen.js","src/screens/MistakesScreen.js","src/screens/QuestionDetailScreen.js","src/screens/ResultScreen.js","src/utils/fixFavorites.js","src/utils/fixJson.js","src/screens/SettingsScreen.js","src/components/ProgressChart.js","src/screens/StudyProgressScreen.js","src/config/payments.js","src/payments/paymentService.js","src/utils/premiumSigned.js","src/screens/PremiumScreen.js","src/screens/ActivationScreen.js","src/navigation/AppNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Czech translations\r\nconst cs = {\r\n  navigation: {\r\n    home: 'Domů',\r\n    browse: 'Procházet',\r\n    exam: 'Zkouška',\r\n    favorites: 'Oblíbené',\r\n    mistakes: 'Chyby',\r\n    settings: 'Nastavení',\r\n    question_detail: 'Detail otázky',\r\n    exam_result: 'Výsledek zkoušky'\r\n  },\r\n  home: {\r\n    title: 'Aplikace pro řidičský průkaz ČR',\r\n    subtitle: 'Připravte se na českou řidičskou zkoušku s naší komplexní příručkou',\r\n    startExam: 'Začít zkoušku',\r\n    examDescription: 'Začněte simulovanou zkoušku s 25 náhodnými otázkami',\r\n    browseTopic: 'Procházet otázky',\r\n    browseDescription: 'Prozkoumat všechny otázky podle kategorie',\r\n    reviewMistakes: 'Přehled chyb',\r\n    mistakesDescription: 'Procvičte si otázky, které jste zodpověděli špatně',\r\n    favorites: 'Oblíbené',\r\n    favoritesDescription: 'Přehled vašich uložených otázek',\r\n    studyStats: 'Statistiky studia',\r\n    examsTaken: 'Zkoušky',\r\n    questionsAnswered: 'Otázky',\r\n    accuracy: 'Přesnost'\r\n  },\r\n  browse: {\r\n    title: 'Procházet otázky',\r\n    allQuestions: 'Všechny otázky',\r\n    search: 'Hledat otázky',\r\n    categories: {\r\n      traffic_signs: 'Dopravní značky',\r\n      traffic_rules: 'Dopravní pravidla',\r\n      priority: 'Pravidla přednosti',\r\n      parking: 'Pravidla parkování',\r\n      speed_limits: 'Rychlostní limity',\r\n      highway: 'Pravidla dálnice',\r\n      penalties: 'Pokuty',\r\n      general: 'Obecné'\r\n    },\r\n    noQuestionsFound: 'Nebyly nalezeny žádné otázky odpovídající vašim kritériím'\r\n  },\r\n  exam: {\r\n    title: 'Řidičská zkouška',\r\n    subtitle: 'Otestujte své znalosti řízení',\r\n    start: 'Začít zkoušku',\r\n    description: 'Zkouška se skládá z 25 náhodných otázek z různých kategorií. Pro úspěšné složení potřebujete zodpovědět alespoň 20 správně.',\r\n    timeLimit: 'Časový limit: 30 minut',\r\n    questionCount: 'Otázka: {{current}} z {{total}}',\r\n    timeRemaining: 'Čas: {{minutes}}:{{seconds}}',\r\n    submit: 'Odeslat odpovědi',\r\n    next: 'Další',\r\n    previous: 'Předchozí',\r\n    finishExam: 'Dokončit zkoušku',\r\n    chooseMode: 'Vyberte režim zkoušky',\r\n    customExam: 'Vlastní zkouška',\r\n    questionCount: 'Počet otázek (5-50)',\r\n    timeLimit: 'Časový limit (minuty, 0 pro neomezený)',\r\n    cancel: 'Zrušit',\r\n    examPreparation: 'Informace o zkoušce',\r\n    examInfo: '• Česká teoretická zkouška má 25 otázek, potřebujete 20 správných odpovědí pro úspěšné složení\\n• Časový limit je 30 minut\\n• Prosím, absolvujte zkoušku v klidném prostředí\\n• Během zkoušky neukončujte aplikaci'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Vyberte odpověď',\r\n    checkAnswer: 'Zkontrolovat odpověď',\r\n    correct: 'Správně',\r\n    incorrect: 'Nesprávně',\r\n    explanation: 'Vysvětlení',\r\n    nextQuestion: 'Další otázka',\r\n    loading: 'Načítání otázky...'\r\n  },\r\n  result: {\r\n    title: 'Výsledky zkoušky',\r\n    passed: 'Gratulujeme! Úspěšně jste složili zkoušku!',\r\n    failed: 'Bohužel jste neuspěli.',\r\n    score: 'Skóre: {{correct}}/{{total}}',\r\n    requiredToPass: 'Požadováno ke složení: 20/25',\r\n    reviewIncorrect: 'Přehled nesprávných odpovědí',\r\n    retakeExam: 'Opakovat zkoušku',\r\n    backToHome: 'Zpět na úvod',\r\n    examDetails: 'Detaily otázek',\r\n    yourAnswer: 'Vaše odpověď:',\r\n    correctAnswer: 'Správná odpověď:',\r\n    viewExplanation: 'Zobrazit vysvětlení',\r\n    timeSpent: 'Strávený čas',\r\n    correctCount: 'Správně',\r\n    incorrectCount: 'Nesprávně'\r\n  },\r\n  favorites: {\r\n    title: 'Oblíbené otázky',\r\n    noFavorites: 'Zatím jste nepřidali žádné oblíbené položky',\r\n    browseToAdd: 'Procházejte otázky a klepnutím na ikonu srdce uložte důležité otázky',\r\n    browseCatalog: 'Procházet otázky',\r\n    removeFavorite: 'Odstranit z oblíbených',\r\n    addFavorite: 'Přidat do oblíbených',\r\n    edit: 'Upravit',\r\n    cancel: 'Zrušit',\r\n    delete: 'Smazat',\r\n    selectAll: 'Vybrat vše',\r\n    deselectAll: 'Zrušit výběr',\r\n    favoritesCount: '{{count}} uložených otázek',\r\n    viewDetails: 'Zobrazit detaily'\r\n  },\r\n  mistakes: {\r\n    title: 'Chybné otázky',\r\n    noMistakes: 'Zatím nemáte žádné chyby!',\r\n    practiceToContinue: 'Pokračujte v procvičování, otázky, které zodpovíte nesprávně, se objeví zde',\r\n    startPractice: 'Začít procvičování',\r\n    mistakesCount: '{{count}} chybných otázek',\r\n    sortNewest: 'Nejnovější',\r\n    sortOldest: 'Nejstarší',\r\n    clearAll: 'Vymazat vše',\r\n    clearConfirm: 'Opravdu chcete vymazat všechny záznamy o chybách? Tuto akci nelze vrátit zpět.',\r\n    viewExplanation: 'Zobrazit vysvětlení'\r\n  },\r\n  settings: {\r\n    title: 'Nastavení',\r\n    subtitle: 'Přizpůsobte si svou aplikaci',\r\n    language: 'Jazyk',\r\n    about: 'O aplikaci',\r\n    version: 'Verze',\r\n    resetData: 'Resetovat všechna data',\r\n    resetConfirm: 'Jste si jisti? Tímto smažete všechna uložená data a akci nelze vrátit zpět.',\r\n    resetSuccess: 'Všechna data byla resetována.',\r\n    languages: {\r\n      en: 'Angličtina',\r\n      zh: 'Čínština',\r\n      cs: 'Čeština',\r\n      es: 'Španělština'\r\n    },\r\n    appSettings: 'Nastavení aplikace',\r\n    dailyReminder: 'Denní připomenutí',\r\n    reminderDescription: 'Dostávat denní připomenutí ke studiu',\r\n    darkMode: 'Tmavý režim',\r\n    darkModeDescription: 'Použít noční režim pro ochranu očí',\r\n    appInfo: 'Informace o aplikaci',\r\n    rateApp: 'Ohodnotit aplikaci',\r\n    privacyPolicy: 'Zásady ochrany osobních údajů',\r\n    appVersion: 'Aplikace pro řidičský průkaz ČR v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Načítání...',\r\n    error: 'Chyba',\r\n    cancel: 'Zrušit',\r\n    confirm: 'Potvrdit',\r\n    save: 'Uložit',\r\n    delete: 'Smazat',\r\n    edit: 'Upravit',\r\n    done: 'Hotovo',\r\n    yes: 'Ano',\r\n    no: 'Ne'\r\n  }\r\n};\r\n\r\nexport default cs; ","// English translations\r\nconst en = {\r\n  navigation: {\r\n    home: 'Home',\r\n    browse: 'Browse',\r\n    exam: 'Exam',\r\n    favorites: 'Favorites',\r\n    mistakes: 'Mistakes',\r\n    settings: 'Settings',\r\n    question_detail: 'Question Detail',\r\n    exam_result: 'Exam Result',\r\n    study_progress: 'Study Progress'\r\n  },\r\n  home: {\r\n    title: 'Czech Driving License App',\r\n    subtitle: 'Prepare for your Czech driving test with our comprehensive guide',\r\n    startExam: 'Start Exam',\r\n    examDescription: 'Start a simulated driving test with 25 random questions',\r\n    browseTopic: 'Browse Questions',\r\n    browseDescription: 'Explore all questions by category',\r\n    reviewMistakes: 'Review Mistakes',\r\n    mistakesDescription: 'Practice the questions you got wrong',\r\n    favorites: 'Favorites',\r\n    favoritesDescription: 'Review your saved questions',\r\n    studyStats: 'Study Statistics',\r\n    examsTaken: 'Exams',\r\n    questionsAnswered: 'Questions',\r\n    accuracy: 'Accuracy'\r\n  },\r\n  browse: {\r\n    title: 'Browse Questions',\r\n    allQuestions: 'All Questions',\r\n    search: 'Search questions',\r\n    categories: {\r\n      traffic_signs: 'Traffic Signs',\r\n      traffic_rules: 'Traffic Rules',\r\n      priority: 'Priority Rules',\r\n      parking: 'Parking Rules',\r\n      speed_limits: 'Speed Limits',\r\n      highway: 'Highway Rules',\r\n      penalties: 'Penalties',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No questions found matching your criteria'\r\n  },\r\n  exam: {\r\n    title: 'Driving Test',\r\n    subtitle: 'Test your driving knowledge',\r\n    start: 'Start Test',\r\n    description: 'The test consists of 25 random questions from different categories. You need to answer at least 20 correctly to pass.',\r\n    timeLimit: 'Time Limit: 30 minutes',\r\n    questionCount: 'Question: {{current}} of {{total}}',\r\n    timeRemaining: 'Time: {{minutes}}:{{seconds}}',\r\n    submit: 'Submit Answers',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    finishExam: 'Finish Exam',\r\n    chooseMode: 'Choose Exam Mode',\r\n    customExam: 'Custom Exam',\r\n    questionCount: 'Question Count (5-50)',\r\n    timeLimit: 'Time Limit (minutes, 0 for unlimited)',\r\n    cancel: 'Cancel',\r\n    examPreparation: 'Exam Information',\r\n    examInfo: 'About Czech Driving Test',\r\n    examInfoLine1: 'The test has 25 questions, you need 20 correct answers to pass',\r\n    examInfoLine2: 'The time limit is 30 minutes',\r\n    examInfoLine3: 'Topics include traffic rules, signs, and safe driving',\r\n    examInfoLine4: 'This app provides a complete question bank and multilingual support',\r\n    fullExam: 'Full Exam',\r\n    practiceMode: 'Practice Mode',\r\n    quickTest: 'Quick Test',\r\n    exam: 'Exam'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Select an answer',\r\n    checkAnswer: 'Check Answer',\r\n    correct: 'Correct',\r\n    incorrect: 'Incorrect',\r\n    explanation: 'Explanation',\r\n    nextQuestion: 'Next Question',\r\n    loading: 'Loading question...'\r\n  },\r\n  result: {\r\n    title: 'Exam Results',\r\n    passed: 'Congratulations! You passed!',\r\n    failed: 'Unfortunately, you did not pass.',\r\n    score: 'Score: {{correct}}/{{total}}',\r\n    requiredToPass: 'Required to pass: 20/25',\r\n    reviewIncorrect: 'Review Incorrect Answers',\r\n    retakeExam: 'Retake Exam',\r\n    backToHome: 'Back to Home',\r\n    examDetails: 'Question Details',\r\n    yourAnswer: 'Your answer:',\r\n    correctAnswer: 'Correct answer:',\r\n    viewExplanation: 'View Explanation',\r\n    timeSpent: 'Time spent',\r\n    correctCount: 'Correct',\r\n    incorrectCount: 'Incorrect'\r\n  },\r\n  favorites: {\r\n    title: 'Favorite Questions',\r\n    noFavorites: 'You haven\\'t added any favorites yet',\r\n    browseToAdd: 'Browse questions and tap the heart icon to save important questions',\r\n    browseCatalog: 'Browse Questions',\r\n    removeFavorite: 'Remove from Favorites',\r\n    addFavorite: 'Add to Favorites',\r\n    edit: 'Edit',\r\n    cancel: 'Cancel',\r\n    delete: 'Delete',\r\n    selectAll: 'Select All',\r\n    deselectAll: 'Deselect All',\r\n    favoritesCount: '{{count}} questions saved',\r\n    viewDetails: 'View Details'\r\n  },\r\n  mistakes: {\r\n    title: 'Mistake Questions',\r\n    noMistakes: 'You haven\\'t made any mistakes yet!',\r\n    practiceToContinue: 'Continue practicing, questions you answer incorrectly will appear here',\r\n    startPractice: 'Start Practice',\r\n    mistakesCount: '{{count}} mistake questions',\r\n    sortNewest: 'Newest',\r\n    sortOldest: 'Oldest',\r\n    clearAll: 'Clear All',\r\n    clearConfirm: 'Are you sure you want to clear all mistake records? This cannot be undone.',\r\n    viewExplanation: 'View Explanation'\r\n  },\r\n  progress: {\r\n    title: 'Study Progress',\r\n    totalExams: 'Total Exams',\r\n    totalQuestions: 'Total Questions',\r\n    averageAccuracy: 'Avg. Accuracy',\r\n    recentActivity: 'Recent Activity',\r\n    noHistory: 'No study history yet',\r\n    startExam: 'Take an exam to start tracking your progress',\r\n    clearHistory: 'Clear History',\r\n    clearProgressConfirm: 'Are you sure you want to clear all study progress? This cannot be undone.',\r\n    clearProgressSuccess: 'Study progress has been cleared',\r\n    clearProgressError: 'Failed to clear study progress',\r\n    questions: 'Questions',\r\n    correct: 'Correct',\r\n    accuracy: 'Accuracy',\r\n    accuracyTrend: 'Accuracy Trend',\r\n    questionStats: 'Question Statistics',\r\n    notEnoughData: 'At least 2 exam records needed to show trend',\r\n    noData: 'No data available'\r\n  },\r\n  settings: {\r\n    title: 'Settings',\r\n    subtitle: 'Personalize your app experience',\r\n    language: 'Language',\r\n    about: 'About',\r\n    version: 'Version',\r\n    resetData: 'Reset All Data',\r\n    resetConfirm: 'Are you sure? This will delete all your saved data and cannot be undone.',\r\n    resetSuccess: 'All data has been reset.',\r\n    languages: {\r\n      en: 'English',\r\n      zh: 'Chinese',\r\n      cs: 'Czech',\r\n      es: 'Spanish'\r\n    },\r\n    appSettings: 'App Settings',\r\n    dailyReminder: 'Daily Reminder',\r\n    reminderDescription: 'Receive daily study reminders',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDescription: 'Use night mode to protect your eyes',\r\n    appInfo: 'App Information',\r\n    rateApp: 'Rate App',\r\n    privacyPolicy: 'Privacy Policy',\r\n    appVersion: 'Czech Driving License App v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Loading...',\r\n    error: 'Error',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    save: 'Save',\r\n    delete: 'Delete',\r\n    edit: 'Edit',\r\n    done: 'Done',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    success: 'Success'\r\n  }\r\n};\r\n\r\nexport default en; ","// Spanish translations\r\nconst es = {\r\n  navigation: {\r\n    home: 'Inicio',\r\n    browse: 'Explorar',\r\n    exam: 'Examen',\r\n    favorites: 'Favoritos',\r\n    mistakes: 'Errores',\r\n    settings: 'Ajustes',\r\n    question_detail: 'Detalle de pregunta',\r\n    exam_result: 'Resultado del examen'\r\n  },\r\n  home: {\r\n    title: 'App de Licencia de Conducir Checa',\r\n    subtitle: 'Prepárate para tu examen de conducir checo con nuestra guía completa',\r\n    startExam: 'Iniciar Examen',\r\n    examDescription: 'Comienza un examen simulado con 25 preguntas aleatorias',\r\n    browseTopic: 'Explorar Preguntas',\r\n    browseDescription: 'Explora todas las preguntas por categoría',\r\n    reviewMistakes: 'Revisar Errores',\r\n    mistakesDescription: 'Practica las preguntas que respondiste incorrectamente',\r\n    favorites: 'Favoritos',\r\n    favoritesDescription: 'Revisa tus preguntas guardadas',\r\n    studyStats: 'Estadísticas de Estudio',\r\n    examsTaken: 'Exámenes',\r\n    questionsAnswered: 'Preguntas',\r\n    accuracy: 'Precisión'\r\n  },\r\n  browse: {\r\n    title: 'Explorar Preguntas',\r\n    allQuestions: 'Todas las Preguntas',\r\n    search: 'Buscar preguntas',\r\n    categories: {\r\n      traffic_signs: 'Señales de Tráfico',\r\n      traffic_rules: 'Normas de Tráfico',\r\n      priority: 'Reglas de Prioridad',\r\n      parking: 'Reglas de Estacionamiento',\r\n      speed_limits: 'Límites de Velocidad',\r\n      highway: 'Reglas de Autopista',\r\n      penalties: 'Sanciones',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No se encontraron preguntas que coincidan con tus criterios'\r\n  },\r\n  exam: {\r\n    title: 'Examen de Conducir',\r\n    subtitle: 'Pon a prueba tus conocimientos de conducción',\r\n    start: 'Iniciar Examen',\r\n    description: 'El examen consta de 25 preguntas aleatorias de diferentes categorías. Necesitas responder correctamente al menos 20 para aprobar.',\r\n    timeLimit: 'Límite de tiempo: 30 minutos',\r\n    questionCount: 'Pregunta: {{current}} de {{total}}',\r\n    timeRemaining: 'Tiempo: {{minutes}}:{{seconds}}',\r\n    submit: 'Enviar Respuestas',\r\n    next: 'Siguiente',\r\n    previous: 'Anterior',\r\n    finishExam: 'Finalizar Examen',\r\n    chooseMode: 'Elegir Modo de Examen',\r\n    customExam: 'Examen Personalizado',\r\n    questionCount: 'Número de preguntas (5-50)',\r\n    timeLimit: 'Límite de tiempo (minutos, 0 para ilimitado)',\r\n    cancel: 'Cancelar',\r\n    examPreparation: 'Información del Examen',\r\n    examInfo: '• El examen teórico checo tiene 25 preguntas, necesitas 20 respuestas correctas para aprobar\\n• El límite de tiempo es de 30 minutos\\n• Por favor, realiza el examen en un ambiente tranquilo\\n• No salgas de la aplicación durante el examen'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Selecciona una respuesta',\r\n    checkAnswer: 'Comprobar Respuesta',\r\n    correct: 'Correcto',\r\n    incorrect: 'Incorrecto',\r\n    explanation: 'Explicación',\r\n    nextQuestion: 'Siguiente Pregunta',\r\n    loading: 'Cargando pregunta...'\r\n  },\r\n  result: {\r\n    title: 'Resultados del Examen',\r\n    passed: '¡Felicidades! ¡Has aprobado!',\r\n    failed: 'Lamentablemente, no has aprobado.',\r\n    score: 'Puntuación: {{correct}}/{{total}}',\r\n    requiredToPass: 'Necesario para aprobar: 20/25',\r\n    reviewIncorrect: 'Revisar Respuestas Incorrectas',\r\n    retakeExam: 'Volver a Hacer el Examen',\r\n    backToHome: 'Volver al Inicio',\r\n    examDetails: 'Detalles de Preguntas',\r\n    yourAnswer: 'Tu respuesta:',\r\n    correctAnswer: 'Respuesta correcta:',\r\n    viewExplanation: 'Ver Explicación',\r\n    timeSpent: 'Tiempo empleado',\r\n    correctCount: 'Correctas',\r\n    incorrectCount: 'Incorrectas'\r\n  },\r\n  favorites: {\r\n    title: 'Preguntas Favoritas',\r\n    noFavorites: 'Aún no has añadido ningún favorito',\r\n    browseToAdd: 'Explora preguntas y toca el icono de corazón para guardar preguntas importantes',\r\n    browseCatalog: 'Explorar Preguntas',\r\n    removeFavorite: 'Eliminar de Favoritos',\r\n    addFavorite: 'Añadir a Favoritos',\r\n    edit: 'Editar',\r\n    cancel: 'Cancelar',\r\n    delete: 'Eliminar',\r\n    selectAll: 'Seleccionar Todo',\r\n    deselectAll: 'Deseleccionar Todo',\r\n    favoritesCount: '{{count}} preguntas guardadas',\r\n    viewDetails: 'Ver Detalles'\r\n  },\r\n  mistakes: {\r\n    title: 'Preguntas Erróneas',\r\n    noMistakes: '¡Aún no has cometido ningún error!',\r\n    practiceToContinue: 'Continúa practicando, las preguntas que respondas incorrectamente aparecerán aquí',\r\n    startPractice: 'Comenzar Práctica',\r\n    mistakesCount: '{{count}} preguntas erróneas',\r\n    sortNewest: 'Más recientes',\r\n    sortOldest: 'Más antiguas',\r\n    clearAll: 'Borrar Todo',\r\n    clearConfirm: '¿Estás seguro de que quieres borrar todos los registros de errores? Esta acción no se puede deshacer.',\r\n    viewExplanation: 'Ver Explicación'\r\n  },\r\n  settings: {\r\n    title: 'Ajustes',\r\n    subtitle: 'Personaliza tu experiencia en la aplicación',\r\n    language: 'Idioma',\r\n    about: 'Acerca de',\r\n    version: 'Versión',\r\n    resetData: 'Resetear Todos los Datos',\r\n    resetConfirm: '¿Estás seguro? Esto eliminará todos tus datos guardados y no se puede deshacer.',\r\n    resetSuccess: 'Todos los datos han sido reseteados.',\r\n    languages: {\r\n      en: 'Inglés',\r\n      zh: 'Chino',\r\n      cs: 'Checo',\r\n      es: 'Español'\r\n    },\r\n    appSettings: 'Ajustes de la Aplicación',\r\n    dailyReminder: 'Recordatorio Diario',\r\n    reminderDescription: 'Recibir recordatorios diarios de estudio',\r\n    darkMode: 'Modo Oscuro',\r\n    darkModeDescription: 'Usar modo nocturno para proteger tus ojos',\r\n    appInfo: 'Información de la Aplicación',\r\n    rateApp: 'Valorar Aplicación',\r\n    privacyPolicy: 'Política de Privacidad',\r\n    appVersion: 'App de Licencia de Conducir Checa v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Cargando...',\r\n    error: 'Error',\r\n    cancel: 'Cancelar',\r\n    confirm: 'Confirmar',\r\n    save: 'Guardar',\r\n    delete: 'Eliminar',\r\n    edit: 'Editar',\r\n    done: 'Hecho',\r\n    yes: 'Sí',\r\n    no: 'No'\r\n  }\r\n};\r\n\r\nexport default es; ","// 中文翻译\r\nconst zh = {\r\n  navigation: {\r\n    home: '首页',\r\n    browse: '浏览',\r\n    exam: '考试',\r\n    favorites: '收藏',\r\n    mistakes: '错题',\r\n    settings: '设置',\r\n    question_detail: '题目详情',\r\n    exam_result: '考试结果',\r\n    study_progress: '学习进度'\r\n  },\r\n  home: {\r\n    title: '捷克驾考宝典',\r\n    subtitle: '全面帮助您准备捷克驾驶考试',\r\n    startExam: '开始考试',\r\n    examDescription: '开始模拟驾照考试，共30道随机题目',\r\n    browseTopic: '浏览题库',\r\n    browseDescription: '按类别查看所有考题',\r\n    reviewMistakes: '复习错题',\r\n    mistakesDescription: '练习之前答错的问题',\r\n    favorites: '我的收藏',\r\n    favoritesDescription: '复习保存的题目',\r\n    studyStats: '学习统计',\r\n    examsTaken: '考试次数',\r\n    questionsAnswered: '已答题目',\r\n    accuracy: '正确率'\r\n  },\r\n  browse: {\r\n    title: '浏览题库',\r\n    allQuestions: '所有题目',\r\n    search: '搜索题目',\r\n    categories: {\r\n      traffic_signs: '交通标志',\r\n      traffic_rules: '交通规则',\r\n      priority: '优先通行权',\r\n      parking: '停车规则',\r\n      speed_limits: '速度限制',\r\n      highway: '高速公路',\r\n      penalties: '违章处罚',\r\n      general: '一般问题'\r\n    },\r\n    noQuestionsFound: '没有找到匹配的题目'\r\n  },\r\n  exam: {\r\n    title: '驾照考试',\r\n    subtitle: '测试您的驾照知识',\r\n    start: '开始考试',\r\n    description: '考试包括25道来自不同类别的随机题目。要通过考试，至少需要答对20题。',\r\n    timeLimit: '时间限制：30分钟',\r\n    questionCount: '问题: {{current}}/{{total}}',\r\n    timeRemaining: '时间: {{minutes}}:{{seconds}}',\r\n    submit: '提交答案',\r\n    next: '下一题',\r\n    previous: '上一题',\r\n    finishExam: '完成考试',\r\n    chooseMode: '选择考试模式',\r\n    customExam: '自定义考试',\r\n    questionCount: '题目数量 (5-50)',\r\n    timeLimit: '时间限制 (分钟，0为无限制)',\r\n    cancel: '取消',\r\n    examPreparation: '考试须知',\r\n    examInfo: '关于捷克驾照考试',\r\n    examInfoLine1: '考试包含25道选择题，答对至少20题才能通过',\r\n    examInfoLine2: '考试时间为30分钟',\r\n    examInfoLine3: '考试内容包括交通规则、标志和安全驾驶',\r\n    examInfoLine4: '本应用提供完整的题库和多语言支持',\r\n    fullExam: '完整模拟',\r\n    practiceMode: '练习模式',\r\n    quickTest: '快速测试',\r\n    exam: '考试'\r\n  },\r\n  question: {\r\n    selectAnswer: '选择答案',\r\n    checkAnswer: '检查答案',\r\n    correct: '正确',\r\n    incorrect: '错误',\r\n    explanation: '解释',\r\n    nextQuestion: '下一题',\r\n    loading: '加载题目中...'\r\n  },\r\n  result: {\r\n    title: '考试结果',\r\n    passed: '恭喜，考试通过！',\r\n    failed: '很遗憾，考试未通过',\r\n    score: '得分: {{correct}}/{{total}}',\r\n    requiredToPass: '通过要求: 20/25',\r\n    reviewIncorrect: '复习错题',\r\n    retakeExam: '重新考试',\r\n    backToHome: '返回首页',\r\n    examDetails: '题目详情',\r\n    yourAnswer: '您的回答:',\r\n    correctAnswer: '正确答案:',\r\n    viewExplanation: '查看解析',\r\n    timeSpent: '用时',\r\n    correctCount: '正确',\r\n    incorrectCount: '错误'\r\n  },\r\n  favorites: {\r\n    title: '收藏题目',\r\n    noFavorites: '您还没有添加任何收藏题目',\r\n    browseToAdd: '浏览题库时点击心形图标来收藏重要题目',\r\n    browseCatalog: '浏览题库',\r\n    removeFavorite: '取消收藏',\r\n    addFavorite: '添加收藏',\r\n    edit: '编辑',\r\n    cancel: '取消',\r\n    delete: '删除',\r\n    selectAll: '全选',\r\n    deselectAll: '取消全选',\r\n    favoritesCount: '已收藏 {{count}} 个题目',\r\n    viewDetails: '查看详情'\r\n  },\r\n  mistakes: {\r\n    title: '错题记录',\r\n    noMistakes: '您还没有任何错题记录!',\r\n    practiceToContinue: '继续刷题，答错的题目将自动记录在这里',\r\n    startPractice: '开始做题',\r\n    mistakesCount: '共有 {{count}} 道错题',\r\n    sortNewest: '最新',\r\n    sortOldest: '最早',\r\n    clearAll: '清空',\r\n    clearConfirm: '确定要清空所有错题记录吗？此操作不可恢复。',\r\n    viewExplanation: '查看解析'\r\n  },\r\n  progress: {\r\n    title: '学习进度',\r\n    totalExams: '考试总数',\r\n    totalQuestions: '题目总数',\r\n    averageAccuracy: '平均正确率',\r\n    recentActivity: '最近活动',\r\n    noHistory: '暂无学习记录',\r\n    startExam: '参加考试开始记录您的学习进度',\r\n    clearHistory: '清除历史',\r\n    clearProgressConfirm: '确定要清除所有学习进度记录吗？此操作不可恢复。',\r\n    clearProgressSuccess: '学习进度已清除',\r\n    clearProgressError: '清除学习进度失败',\r\n    questions: '题目',\r\n    correct: '正确',\r\n    accuracy: '正确率',\r\n    accuracyTrend: '正确率趋势',\r\n    questionStats: '答题统计',\r\n    notEnoughData: '至少需要2次考试记录才能显示趋势图',\r\n    noData: '暂无数据'\r\n  },\r\n  settings: {\r\n    title: '设置',\r\n    subtitle: '个性化您的应用体验',\r\n    language: '语言设置',\r\n    about: '关于应用',\r\n    version: '版本号',\r\n    resetData: '重置所有数据',\r\n    resetConfirm: '确定吗？这将删除您保存的所有数据，且无法恢复。',\r\n    resetSuccess: '所有数据已重置。',\r\n    languages: {\r\n      en: '英语',\r\n      zh: '中文',\r\n      cs: '捷克语',\r\n      es: '西班牙语'\r\n    },\r\n    appSettings: '应用设置',\r\n    dailyReminder: '每日提醒',\r\n    reminderDescription: '接收每日学习提醒',\r\n    darkMode: '暗黑模式',\r\n    darkModeDescription: '使用夜间模式保护眼睛',\r\n    appInfo: '应用信息',\r\n    rateApp: '评分应用',\r\n    privacyPolicy: '隐私政策',\r\n    appVersion: '捷克驾考宝典 v1.0.0'\r\n  },\r\n  common: {\r\n    loading: '加载中...',\r\n    error: '错误',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n    save: '保存',\r\n    delete: '删除',\r\n    edit: '编辑',\r\n    done: '完成',\r\n    yes: '是',\r\n    no: '否',\r\n    success: '成功'\r\n  }\r\n};\r\n\r\nexport default zh; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport cs from './translations/cs';\r\nimport en from './translations/en';\r\nimport es from './translations/es';\r\nimport zh from './translations/zh';\r\n\r\n// 标记初始化状态\r\nlet isInitialized = false;\r\n\r\n// 初始化i18n\r\nconst initI18n = async () => {\r\n  if (isInitialized) {\r\n    console.log('i18n already initialized, skipping');\r\n    return;\r\n  }\r\n\r\n  // 尝试从存储中获取用户语言设置\r\n  let userLanguage = 'zh'; // 默认语言\r\n  try {\r\n    const storedLanguage = await AsyncStorage.getItem('userLanguage');\r\n    if (storedLanguage) {\r\n      userLanguage = storedLanguage;\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load language setting', error);\r\n  }\r\n\r\n  await i18n\r\n    .use(initReactI18next)\r\n    .init({\r\n      resources: {\r\n        en: { translation: en },\r\n        zh: { translation: zh },\r\n        cs: { translation: cs },\r\n        es: { translation: es }\r\n      },\r\n      lng: userLanguage,\r\n      fallbackLng: 'zh',\r\n      interpolation: {\r\n        escapeValue: false\r\n      },\r\n      compatibilityJSON: 'v3'\r\n    });\r\n\r\n  // 标记为已初始化\r\n  isInitialized = true;\r\n  return i18n;\r\n};\r\n\r\n/**\r\n * 检查i18n是否已初始化\r\n * @returns {boolean}\r\n */\r\nexport const isI18nInitialized = () => {\r\n  return isInitialized;\r\n};\r\n\r\n// 导出已经初始化的i18n实例，方便直接使用\r\nexport { i18n };\r\n\r\nexport default initI18n; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { AppState, Platform } from 'react-native';\r\n\r\nconst STORAGE_KEY = 'premium-status:v1';\r\nconst TRIAL_KEY = 'web-trial-start-at:v1';\r\nconst USED_CODES_KEY = 'redeem-used-codes:v1';\r\n\r\n/**\r\n * 会员计划定义\r\n * - free: 免费（默认）\r\n * - pro_monthly: 连续包月\r\n * - pro_yearly: 连续包年\r\n * - lifetime: 终身版\r\n */\r\nexport const PremiumPlans = {\r\n  FREE: 'free',\r\n  PRO_MONTHLY: 'pro_monthly',\r\n  PRO_YEARLY: 'pro_yearly',\r\n  LIFETIME: 'lifetime',\r\n};\r\n\r\n/**\r\n * 获取当前会员状态对象\r\n * { plan: string, activatedAt: number, expiresAt?: number }\r\n */\r\nexport async function getPremiumStatus() {\r\n  try {\r\n    const raw = await AsyncStorage.getItem(STORAGE_KEY);\r\n    if (!raw) return { plan: PremiumPlans.FREE };\r\n    const parsed = JSON.parse(raw);\r\n    return parsed || { plan: PremiumPlans.FREE };\r\n  } catch (e) {\r\n    return { plan: PremiumPlans.FREE };\r\n  }\r\n}\r\n\r\n/**\r\n * 设置会员状态\r\n */\r\nexport async function setPremiumStatus(status) {\r\n  const safe = status || { plan: PremiumPlans.FREE };\r\n  await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(safe));\r\n  notifySubscribers();\r\n  return safe;\r\n}\r\n\r\n/**\r\n * 是否为激活的会员（考虑过期）\r\n */\r\nexport async function isPremiumActive() {\r\n  const s = await getPremiumStatus();\r\n  if (!s || !s.plan || s.plan === PremiumPlans.FREE) return false;\r\n  if (s.plan === PremiumPlans.LIFETIME) return true;\r\n  if (!s.expiresAt) return false;\r\n  return Date.now() < Number(s.expiresAt);\r\n}\r\n\r\n// Web 一天试用\r\nexport async function ensureWebTrialStarted() {\r\n  if (Platform.OS !== 'web') return;\r\n  const existed = await AsyncStorage.getItem(TRIAL_KEY);\r\n  if (!existed) await AsyncStorage.setItem(TRIAL_KEY, String(Date.now()));\r\n}\r\n\r\nexport async function isWebTrialActive() {\r\n  if (Platform.OS !== 'web') return false;\r\n  const startRaw = await AsyncStorage.getItem(TRIAL_KEY);\r\n  if (!startRaw) return false;\r\n  const startAt = Number(startRaw);\r\n  const day = 24 * 60 * 60 * 1000;\r\n  return Date.now() - startAt < day;\r\n}\r\n\r\nexport async function getWebTrialInfo() {\r\n  if (Platform.OS !== 'web') return { trialStartAt: null, expiresAt: null, remainingMs: 0 };\r\n  const startRaw = await AsyncStorage.getItem(TRIAL_KEY);\r\n  if (!startRaw) return { trialStartAt: null, expiresAt: null, remainingMs: 0 };\r\n  const startAt = Number(startRaw);\r\n  const expiresAt = startAt + 24 * 60 * 60 * 1000;\r\n  const remainingMs = Math.max(0, expiresAt - Date.now());\r\n  return { trialStartAt: startAt, expiresAt, remainingMs };\r\n}\r\n\r\nexport async function isEntitled() {\r\n  if (await isPremiumActive()) return true;\r\n  if (await isWebTrialActive()) return true;\r\n  return false;\r\n}\r\n\r\n// 强制激活判断（不允许试用）\r\nexport async function isActivated() {\r\n  return isPremiumActive();\r\n}\r\n\r\n/**\r\n * 计算并生成一个本地设备ID（弱标识，仅用于线下兑换码方案）\r\n */\r\nexport async function getOrCreateDeviceId() {\r\n  const key = 'device-id:v1';\r\n  let id = await AsyncStorage.getItem(key);\r\n  if (id) return id;\r\n  id = `dev_${Math.random().toString(36).slice(2)}_${Date.now().toString(36)}`;\r\n  await AsyncStorage.setItem(key, id);\r\n  return id;\r\n}\r\n\r\n/**\r\n * 使用兑换码恢复或开通会员（本地校验格式，真正校验应走服务端）\r\n * 兑换码格式建议：PLAN-YYYYMMDD-XXXXXX\r\n */\r\nexport async function restoreFromRedeemCode(code) {\r\n  if (!code || typeof code !== 'string') {\r\n    throw new Error('兑换码无效');\r\n  }\r\n  const trimmed = code.trim().toUpperCase();\r\n  // 简单格式校验\r\n  const match = trimmed.match(/^FREE-(\\d{8})-([A-Z0-9]{6})$/);\r\n  if (!match) {\r\n    throw new Error('兑换码格式不正确，应为 FREE-YYYYMMDD-XXXXXX');\r\n  }\r\n\r\n  const issuedStr = match[1];\r\n  const y = Number(issuedStr.slice(0, 4));\r\n  const m = Number(issuedStr.slice(4, 6));\r\n  const d = Number(issuedStr.slice(6, 8));\r\n  const issuedAt = new Date(Date.UTC(y, m - 1, d)).getTime();\r\n  const threeYears = 3 * 365 * 24 * 60 * 60 * 1000;\r\n  if (isNaN(issuedAt) || Date.now() - issuedAt > threeYears) {\r\n    throw new Error('兑换码已过期（超过3年有效期）');\r\n  }\r\n\r\n  const usedRaw = await AsyncStorage.getItem(USED_CODES_KEY);\r\n  const used = usedRaw ? JSON.parse(usedRaw) : [];\r\n  if (used.includes(trimmed)) {\r\n    throw new Error('本设备已使用过该兑换码');\r\n  }\r\n\r\n  const now = Date.now();\r\n  await setPremiumStatus({ plan: PremiumPlans.LIFETIME, activatedAt: now, source: 'redeem_code', code: trimmed });\r\n  await AsyncStorage.setItem(USED_CODES_KEY, JSON.stringify([...used, trimmed]));\r\n  return { ok: true };\r\n}\r\n\r\n// 订阅与通知（简易）\r\nconst subscribers = new Set();\r\n\r\nexport function subscribePremiumStatus(listener) {\r\n  if (typeof listener !== 'function') return () => {};\r\n  subscribers.add(listener);\r\n  return () => subscribers.delete(listener);\r\n}\r\n\r\nfunction notifySubscribers() {\r\n  subscribers.forEach((fn) => {\r\n    try { fn(); } catch (_) {}\r\n  });\r\n}\r\n\r\n// 当 App 回到前台时可触发一次校验（预留扩展位）\r\nAppState.addEventListener('change', (state) => {\r\n  if (state === 'active') {\r\n    notifySubscribers();\r\n  }\r\n}); ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\n/**\r\n * 题目语言切换组件\r\n * @param {Object} props\r\n * @param {string} props.currentLanguage - 当前选择的语言代码\r\n * @param {Function} props.onChangeLanguage - 切换语言的回调函数\r\n */\r\nconst QuestionLanguageSwitcher = ({ currentLanguage, onChangeLanguage }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  const languages = [\r\n    { code: 'zh', name: '中文', icon: 'language-outline' },\r\n    { code: 'en', name: 'EN', icon: 'language-outline' },\r\n    { code: 'cs', name: 'CZ', icon: 'language-outline' },\r\n    { code: 'es', name: 'ES', icon: 'language-outline' }\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {languages.map((lang) => (\r\n        <TouchableOpacity\r\n          key={lang.code}\r\n          style={[\r\n            styles.languageButton,\r\n            currentLanguage === lang.code && styles.activeLanguageButton\r\n          ]}\r\n          onPress={() => onChangeLanguage(lang.code)}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.languageText,\r\n              currentLanguage === lang.code && styles.activeLanguageText\r\n            ]}\r\n          >\r\n            {lang.name}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n    paddingHorizontal: 8,\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    borderRadius: 20,\r\n    alignSelf: 'center',\r\n  },\r\n  languageButton: {\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 16,\r\n    marginHorizontal: 4,\r\n  },\r\n  activeLanguageButton: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  languageText: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  activeLanguageText: {\r\n    color: '#ffffff',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default QuestionLanguageSwitcher; ","// 交通信号图标映射，与信号文件名关联\r\n// 预定义一个完整的交通信号图标对象\r\nconst trafficSignalImages = {\r\n  1: require('../../assets/signals/signal1.png'),\r\n  2: require('../../assets/signals/signal2.png'),\r\n  3: require('../../assets/signals/signal3.png'),\r\n  4: require('../../assets/signals/signal4.png'),\r\n  5: require('../../assets/signals/signal5.png'),\r\n  6: require('../../assets/signals/signal6.png'),\r\n  7: require('../../assets/signals/signal7.png'),\r\n  8: require('../../assets/signals/signal8.png'),\r\n  9: require('../../assets/signals/signal9.png'),\r\n  10: require('../../assets/signals/signal10.png'),\r\n  11: require('../../assets/signals/signal11.png'),\r\n  12: require('../../assets/signals/signal12.png'),\r\n  13: require('../../assets/signals/signal13.png'),\r\n  14: require('../../assets/signals/signal14.png'),\r\n  15: require('../../assets/signals/signal15.png'),\r\n  16: require('../../assets/signals/signal16.png'),\r\n  17: require('../../assets/signals/signal17.png'),\r\n  18: require('../../assets/signals/signal18.png'),\r\n  19: require('../../assets/signals/signal19.png'),\r\n  20: require('../../assets/signals/signal20.png'),\r\n  21: require('../../assets/signals/signal21.png'),\r\n  22: require('../../assets/signals/signal22.png'),\r\n  23: require('../../assets/signals/signal23.png'),\r\n  24: require('../../assets/signals/signal24.png'),\r\n  25: require('../../assets/signals/signal25.png'),\r\n  26: require('../../assets/signals/signal26.png'),\r\n  27: require('../../assets/signals/signal27.png'),\r\n  28: require('../../assets/signals/signal28.png'),\r\n  29: require('../../assets/signals/signal29.png'),\r\n  30: require('../../assets/signals/signal30.png'),\r\n  31: require('../../assets/signals/signal31.png'),\r\n  32: require('../../assets/signals/signal32.png'),\r\n  33: require('../../assets/signals/signal33.png'),\r\n  34: require('../../assets/signals/signal34.png'),\r\n  35: require('../../assets/signals/signal35.png'),\r\n  36: require('../../assets/signals/signal36.png'),\r\n  37: require('../../assets/signals/signal37.png'),\r\n  38: require('../../assets/signals/signal38.png'),\r\n  39: require('../../assets/signals/signal39.png'),\r\n  40: require('../../assets/signals/signal40.png'),\r\n  41: require('../../assets/signals/signal41.png'),\r\n  42: require('../../assets/signals/signal42.png'),\r\n  43: require('../../assets/signals/signal43.png'),\r\n  44: require('../../assets/signals/signal44.png'),\r\n  45: require('../../assets/signals/signal45.png'),\r\n  46: require('../../assets/signals/signal46.png'),\r\n  47: require('../../assets/signals/signal47.png'),\r\n  48: require('../../assets/signals/signal48.png'),\r\n  49: require('../../assets/signals/signal49.png'),\r\n  50: require('../../assets/signals/signal50.png'),\r\n  51: require('../../assets/signals/signal51.png'),\r\n  52: require('../../assets/signals/signal52.png'),\r\n  53: require('../../assets/signals/signal53.png'),\r\n};\r\n\r\n// 在文件开头添加图片映射\r\n// 预加载所有实际存在的图片\r\nconst imageAssets = {\r\n    '1': require('../../assets/images/image1.png'),\r\n  '2': require('../../assets/images/image2.png'),\r\n  '3': require('../../assets/images/image3.png'),\r\n  '4': require('../../assets/images/image4.png'),\r\n  '5': require('../../assets/images/image5.png'),\r\n  '6': require('../../assets/images/image6.png'),\r\n  '7': require('../../assets/images/image7.png'),\r\n  '8': require('../../assets/images/image8.png'),\r\n  '9': require('../../assets/images/image9.png'),\r\n  '20': require('../../assets/images/image20.png'),\r\n  '21': require('../../assets/images/image21.png'),\r\n  '22': require('../../assets/images/image22.png'),\r\n  '23': require('../../assets/images/image23.png'),\r\n  '24': require('../../assets/images/image24.png'),\r\n  '25': require('../../assets/images/image25.png'),\r\n  '26': require('../../assets/images/image26.png'),\r\n  '27': require('../../assets/images/image27.png'),\r\n  '28': require('../../assets/images/image28.png'),\r\n  '29': require('../../assets/images/image29.png'),\r\n  '30': require('../../assets/images/image30.png'),\r\n  '31': require('../../assets/images/image31.png'),\r\n  '32': require('../../assets/images/image32.png'),\r\n  '33': require('../../assets/images/image33.png'),\r\n  '34': require('../../assets/images/image34.png'),\r\n  '35': require('../../assets/images/image35.png'),\r\n  '36': require('../../assets/images/image36.png'),\r\n  '37': require('../../assets/images/image37.png'),\r\n  '38': require('../../assets/images/image38.png'),\r\n  '39': require('../../assets/images/image39.png'),\r\n  '40': require('../../assets/images/image40.png'),\r\n  '41': require('../../assets/images/image41.png'),\r\n  '42': require('../../assets/images/image42.png'),\r\n  '43': require('../../assets/images/image43.png'),\r\n  '44': require('../../assets/images/image44.png'),\r\n  '45': require('../../assets/images/image45.png'),\r\n  '46': require('../../assets/images/image46.png'),\r\n  '47': require('../../assets/images/image47.png'),\r\n  '48': require('../../assets/images/image48.png'),\r\n  '49': require('../../assets/images/image49.png'),\r\n  '50': require('../../assets/images/image50.png'),\r\n  '51': require('../../assets/images/image51.png'),\r\n  '52': require('../../assets/images/image52.png'),\r\n  '53': require('../../assets/images/image53.png'),\r\n  '54': require('../../assets/images/image54.png'),\r\n  '55': require('../../assets/images/image55.png'),\r\n  '56': require('../../assets/images/image56.png'),\r\n  '57': require('../../assets/images/image57.png'),\r\n  '58': require('../../assets/images/image58.png'),\r\n  '59': require('../../assets/images/image59.png'),\r\n  '60': require('../../assets/images/image60.png'),\r\n  '61': require('../../assets/images/image61.png'),\r\n  '62': require('../../assets/images/image62.png'),\r\n  '63': require('../../assets/images/image63.png'),\r\n  '64': require('../../assets/images/image64.png'),\r\n  '65': require('../../assets/images/image65.png'),\r\n  '66': require('../../assets/images/image66.png'),\r\n  '67': require('../../assets/images/image67.png'),\r\n  '68': require('../../assets/images/image68.png'),\r\n  '69': require('../../assets/images/image69.png'),\r\n  '70': require('../../assets/images/image70.png'),\r\n  '71': require('../../assets/images/image71.png'),\r\n  '72': require('../../assets/images/image72.png'),\r\n  '73': require('../../assets/images/image73.png'),\r\n  '74': require('../../assets/images/image74.png'),\r\n  '75': require('../../assets/images/image75.png'),\r\n  '76': require('../../assets/images/image76.png'),\r\n  '77': require('../../assets/images/image77.png'),\r\n  '78': require('../../assets/images/image78.png'),\r\n  '79': require('../../assets/images/image79.png'),\r\n  '80': require('../../assets/images/image80.png'),\r\n  '81': require('../../assets/images/image81.png'),\r\n  '82': require('../../assets/images/image82.png'),\r\n  '83': require('../../assets/images/image83.png'),\r\n  '84': require('../../assets/images/image84.png'),\r\n  '85': require('../../assets/images/image85.png'),\r\n  '86': require('../../assets/images/image86.png'),\r\n  '87': require('../../assets/images/image87.png'),\r\n  '88': require('../../assets/images/image88.png'),\r\n  '89': require('../../assets/images/image89.png'),\r\n  '90': require('../../assets/images/image90.png'),\r\n  '91': require('../../assets/images/image91.png'),\r\n  '92': require('../../assets/images/image92.png'),\r\n  '93': require('../../assets/images/image93.png'),\r\n  '94': require('../../assets/images/image94.png'),\r\n  '95': require('../../assets/images/image95.png'),\r\n  '96': require('../../assets/images/image96.png'),\r\n  '97': require('../../assets/images/image97.png'),\r\n  '98': require('../../assets/images/image98.png'),\r\n  '99': require('../../assets/images/image99.png'),\r\n    '100': require('../../assets/images/image100.png'),\r\n  '101': require('../../assets/images/image101.png'),\r\n  '102': require('../../assets/images/image102.png'),\r\n  '103': require('../../assets/images/image103.png'),\r\n  '104': require('../../assets/images/image104.png'),\r\n  '105': require('../../assets/images/image105.png'),\r\n  '106': require('../../assets/images/image106.png'),\r\n  '107': require('../../assets/images/image107.png'),\r\n  '108': require('../../assets/images/image108.png'),\r\n  '109': require('../../assets/images/image109.png'),\r\n  '110': require('../../assets/images/image110.png'),\r\n  '111': require('../../assets/images/image111.png'),\r\n  '112': require('../../assets/images/image112.png'),\r\n  '113': require('../../assets/images/image113.png'),\r\n  '114': require('../../assets/images/image114.png'),\r\n  '115': require('../../assets/images/image115.png'),\r\n  '116': require('../../assets/images/image116.png'),\r\n  '117': require('../../assets/images/image117.png'),\r\n  '118': require('../../assets/images/image118.png'),\r\n  '119': require('../../assets/images/image119.png'),\r\n  '120': require('../../assets/images/image120.png'),\r\n  '121': require('../../assets/images/image121.png'),\r\n  '122': require('../../assets/images/image122.png'),\r\n  '123': require('../../assets/images/image123.png'),\r\n  '124': require('../../assets/images/image124.png'),\r\n  '125': require('../../assets/images/image125.png'),\r\n  '126': require('../../assets/images/image126.png'),\r\n  '127': require('../../assets/images/image127.png'),\r\n  '128': require('../../assets/images/image128.png'),\r\n  '129': require('../../assets/images/image129.png'),\r\n  '130': require('../../assets/images/image130.png'),\r\n  '131': require('../../assets/images/image131.png'),\r\n  '132': require('../../assets/images/image132.png'),\r\n  '133': require('../../assets/images/image133.png'),\r\n  '134': require('../../assets/images/image134.png'),\r\n  '135': require('../../assets/images/image135.png'),\r\n  '136': require('../../assets/images/image136.png'),\r\n  '137': require('../../assets/images/image137.png'),\r\n  '138': require('../../assets/images/image138.png'),\r\n  '139': require('../../assets/images/image139.png'),\r\n  '140': require('../../assets/images/image140.png'),\r\n  '141': require('../../assets/images/image141.png'),\r\n  '142': require('../../assets/images/image142.png'),\r\n  '143': require('../../assets/images/image143.png'),\r\n  '144': require('../../assets/images/image144.png'),\r\n  '145': require('../../assets/images/image145.png'),\r\n  '146': require('../../assets/images/image146.png'),\r\n  '147': require('../../assets/images/image147.png'),\r\n  '148': require('../../assets/images/image148.png'),\r\n  '149': require('../../assets/images/image149.png'),\r\n  '150': require('../../assets/images/image150.png'),\r\n  '151': require('../../assets/images/image151.png'),\r\n  '152': require('../../assets/images/image152.png'),\r\n  '153': require('../../assets/images/image153.png'),\r\n  '154': require('../../assets/images/image154.png'),\r\n  '155': require('../../assets/images/image155.png'),\r\n  '156': require('../../assets/images/image156.png'),\r\n  '157': require('../../assets/images/image157.png'),\r\n  '158': require('../../assets/images/image158.png'),\r\n  '159': require('../../assets/images/image159.png'),\r\n  '160': require('../../assets/images/image160.png'),\r\n  '161': require('../../assets/images/image161.png'),\r\n  '162': require('../../assets/images/image162.png'),\r\n  '163': require('../../assets/images/image163.png'),\r\n  '164': require('../../assets/images/image164.png'),\r\n  '165': require('../../assets/images/image165.png'),\r\n  '166': require('../../assets/images/image166.png'),\r\n  '167': require('../../assets/images/image167.png'),\r\n  '168': require('../../assets/images/image168.png'),\r\n  '169': require('../../assets/images/image169.png'),\r\n  '170': require('../../assets/images/image170.png'),\r\n  '171': require('../../assets/images/image171.png'),\r\n  '172': require('../../assets/images/image172.png'),\r\n  '173': require('../../assets/images/image173.png'),\r\n  '174': require('../../assets/images/image174.png'),\r\n  '175': require('../../assets/images/image175.png'),\r\n  '176': require('../../assets/images/image176.png'),\r\n  '177': require('../../assets/images/image177.png'),\r\n  '178': require('../../assets/images/image178.png'),\r\n  '179': require('../../assets/images/image179.png'),\r\n  '180': require('../../assets/images/image180.png'),\r\n  '181': require('../../assets/images/image181.png'),\r\n  '182': require('../../assets/images/image182.png'),\r\n  '183': require('../../assets/images/image183.png'),\r\n  '184': require('../../assets/images/image184.png'),\r\n  '185': require('../../assets/images/image185.png'),\r\n  '186': require('../../assets/images/image186.png'),\r\n  '187': require('../../assets/images/image187.png'),\r\n  '188': require('../../assets/images/image188.png'),\r\n  '189': require('../../assets/images/image189.png'),\r\n  '190': require('../../assets/images/image190.png'),\r\n  '191': require('../../assets/images/image191.png'),\r\n  '192': require('../../assets/images/image192.png'),\r\n  '193': require('../../assets/images/image193.png'),\r\n  '194': require('../../assets/images/image194.png'),\r\n  '195': require('../../assets/images/image195.png'),\r\n  '196': require('../../assets/images/image196.png'),\r\n  '197': require('../../assets/images/image197.png'),\r\n  '198': require('../../assets/images/image198.png'),\r\n  '199': require('../../assets/images/image199.png'),\r\n  '200': require('../../assets/images/image200.png'),\r\n  '201': require('../../assets/images/image201.png'),\r\n  '202': require('../../assets/images/image202.png'),\r\n  '203': require('../../assets/images/image203.png'),\r\n  '204': require('../../assets/images/image204.png'),\r\n  '205': require('../../assets/images/image205.png'),\r\n  '206': require('../../assets/images/image206.png'),\r\n};\r\n\r\n// Add static mapping for assets/image2/*.jpg\r\nconst image2Assets = {\r\n  '100kmh.jpg': require('../../assets/image2/100kmh.jpg'),\r\n'100meterexit.jpg': require('../../assets/image2/100meterexit.jpg'),\r\n'120kmh.jpg': require('../../assets/image2/120kmh.jpg'),\r\n'200meterexit.jpg': require('../../assets/image2/200meterexit.jpg'),\r\n'300meterexit.jpg': require('../../assets/image2/300meterexit.jpg'),\r\n'30kmh.jpg': require('../../assets/image2/30kmh.jpg'),\r\n'3tonnemax.jpg': require('../../assets/image2/3tonnemax.jpg'),\r\n'50kmh.jpg': require('../../assets/image2/50kmh.jpg'),\r\n'5axel.jpg': require('../../assets/image2/5axel.jpg'),\r\n'60kmh.jpg': require('../../assets/image2/60kmh.jpg'),\r\n'80kmh.jpg': require('../../assets/image2/80kmh.jpg'),\r\n'ambertrafficlight.jpg': require('../../assets/image2/ambertrafficlight.jpg'),\r\n'automaticlevelcrossing.jpg': require('../../assets/image2/automaticlevelcrossing.jpg'),\r\n'backofbus.jpg': require('../../assets/image2/backofbus.jpg'),\r\n'batterynotcharging.jpg': require('../../assets/image2/batterynotcharging.jpg'),\r\n'bewarechildren.jpg': require('../../assets/image2/bewarechildren.jpg'),\r\n'bicyclesidewalk.jpg': require('../../assets/image2/bicyclesidewalk.jpg'),\r\n'brokensingleline.jpg': require('../../assets/image2/brokensingleline.jpg'),\r\n'browofhill.jpg': require('../../assets/image2/browofhill.jpg'),\r\n'buslane.jpg': require('../../assets/image2/buslane.jpg'),\r\n'buslaneaheadright.jpg': require('../../assets/image2/buslaneaheadright.jpg'),\r\n'buslaneleft.jpg': require('../../assets/image2/buslaneleft.jpg'),\r\n'buslaneright.jpg': require('../../assets/image2/buslaneright.jpg'),\r\n'buslanetime.jpg': require('../../assets/image2/buslanetime.jpg'),\r\n'carbicycle1.jpg': require('../../assets/image2/carbicycle1.jpg'),\r\n'carjunction1.jpg': require('../../assets/image2/carjunction1.jpg'),\r\n'carjunction2.jpg': require('../../assets/image2/carjunction2.jpg'),\r\n'carjunction3.jpg': require('../../assets/image2/carjunction3.jpg'),\r\n'carriagewayends.jpg': require('../../assets/image2/carriagewayends.jpg'),\r\n'carsituation10.jpg': require('../../assets/image2/carsituation10.jpg'),\r\n'carsituation12.jpg': require('../../assets/image2/carsituation12.jpg'),\r\n'carsituation13.jpg': require('../../assets/image2/carsituation13.jpg'),\r\n'carsituation14.jpg': require('../../assets/image2/carsituation14.jpg'),\r\n'carsituation15.jpg': require('../../assets/image2/carsituation15.jpg'),\r\n'carsituation16.jpg': require('../../assets/image2/carsituation16.jpg'),\r\n'carsituation17.jpg': require('../../assets/image2/carsituation17.jpg'),\r\n'carsituation18.jpg': require('../../assets/image2/carsituation18.jpg'),\r\n'carsituation19.jpg': require('../../assets/image2/carsituation19.jpg'),\r\n'carsituation2.jpg': require('../../assets/image2/carsituation2.jpg'),\r\n'carsituation20.jpg': require('../../assets/image2/carsituation20.jpg'),\r\n'carsituation21.jpg': require('../../assets/image2/carsituation21.jpg'),\r\n'carsituation22.jpg': require('../../assets/image2/carsituation22.jpg'),\r\n'carsituation23.jpg': require('../../assets/image2/carsituation23.jpg'),\r\n'carsituation24.jpg': require('../../assets/image2/carsituation24.jpg'),\r\n'carsituation25.jpg': require('../../assets/image2/carsituation25.jpg'),\r\n'carsituation26.jpg': require('../../assets/image2/carsituation26.jpg'),\r\n'carsituation27.jpg': require('../../assets/image2/carsituation27.jpg'),\r\n'carsituation28.jpg': require('../../assets/image2/carsituation28.jpg'),\r\n'carsituation29.jpg': require('../../assets/image2/carsituation29.jpg'),\r\n'carsituation3.jpg': require('../../assets/image2/carsituation3.jpg'),\r\n'carsituation30.jpg': require('../../assets/image2/carsituation30.jpg'),\r\n'carsituation31.jpg': require('../../assets/image2/carsituation31.jpg'),\r\n'carsituation32.jpg': require('../../assets/image2/carsituation32.jpg'),\r\n'carsituation33.jpg': require('../../assets/image2/carsituation33.jpg'),\r\n'carsituation34.jpg': require('../../assets/image2/carsituation34.jpg'),\r\n'carsituation35.jpg': require('../../assets/image2/carsituation35.jpg'),\r\n'carsituation36.jpg': require('../../assets/image2/carsituation36.jpg'),\r\n'carsituation37.jpg': require('../../assets/image2/carsituation37.jpg'),\r\n'carsituation38.jpg': require('../../assets/image2/carsituation38.jpg'),\r\n'carsituation39.jpg': require('../../assets/image2/carsituation39.jpg'),\r\n'carsituation4.jpg': require('../../assets/image2/carsituation4.jpg'),\r\n'carsituation40.jpg': require('../../assets/image2/carsituation40.jpg'),\r\n'carsituation41.jpg': require('../../assets/image2/carsituation41.jpg'),\r\n'carsituation42.jpg': require('../../assets/image2/carsituation42.jpg'),\r\n'carsituation43.jpg': require('../../assets/image2/carsituation43.jpg'),\r\n'carsituation44.jpg': require('../../assets/image2/carsituation44.jpg'),\r\n'carsituation45.jpg': require('../../assets/image2/carsituation45.jpg'),\r\n'carsituation46.jpg': require('../../assets/image2/carsituation46.jpg'),\r\n'carsituation47.jpg': require('../../assets/image2/carsituation47.jpg'),\r\n'carsituation48.jpg': require('../../assets/image2/carsituation48.jpg'),\r\n'carsituation49.jpg': require('../../assets/image2/carsituation49.jpg'),\r\n'carsituation5.jpg': require('../../assets/image2/carsituation5.jpg'),\r\n'carsituation50.jpg': require('../../assets/image2/carsituation50.jpg'),\r\n'carsituation51.jpg': require('../../assets/image2/carsituation51.jpg'),\r\n'carsituation52.jpg': require('../../assets/image2/carsituation52.jpg'),\r\n'carsituation53.jpg': require('../../assets/image2/carsituation53.jpg'),\r\n'carsituation54.jpg': require('../../assets/image2/carsituation54.jpg'),\r\n'carsituation6.jpg': require('../../assets/image2/carsituation6.jpg'),\r\n'carsituation7.jpg': require('../../assets/image2/carsituation7.jpg'),\r\n'carsituation8.jpg': require('../../assets/image2/carsituation8.jpg'),\r\n'carsituation9.jpg': require('../../assets/image2/carsituation9.jpg'),\r\n'carslowdown.jpg': require('../../assets/image2/carslowdown.jpg'),\r\n'carturnleft.jpg': require('../../assets/image2/carturnleft.jpg'),\r\n'carturnright.jpg': require('../../assets/image2/carturnright.jpg'),\r\n'cashier.jpg': require('../../assets/image2/cashier.jpg'),\r\n'cattle.jpg': require('../../assets/image2/cattle.jpg'),\r\n'clearing.jpg': require('../../assets/image2/clearing.jpg'),\r\n'clearway.jpg': require('../../assets/image2/clearway.jpg'),\r\n'closeeyesidewalk.jpg': require('../../assets/image2/closeeyesidewalk.jpg'),\r\n'coin-basket.jpg': require('../../assets/image2/coin-basket.jpg'),\r\n'continouswhitelinesahead.jpg': require('../../assets/image2/continouswhitelinesahead.jpg'),\r\n'contraflowbuslane.jpg': require('../../assets/image2/contraflowbuslane.jpg'),\r\n'crossleftlane.jpg': require('../../assets/image2/crossleftlane.jpg'),\r\n'crossrightlane.jpg': require('../../assets/image2/crossrightlane.jpg'),\r\n'crossroads.jpg': require('../../assets/image2/crossroads.jpg'),\r\n'crosswinds.jpg': require('../../assets/image2/crosswinds.jpg'),\r\n'cycletrack.jpg': require('../../assets/image2/cycletrack.jpg'),\r\n'dangerousbend.jpg': require('../../assets/image2/dangerousbend.jpg'),\r\n'dangerouscorner.jpg': require('../../assets/image2/dangerouscorner.jpg'),\r\n'deer.jpg': require('../../assets/image2/deer.jpg'),\r\n'directionalindicator.jpg': require('../../assets/image2/directionalindicator.jpg'),\r\n'diskparking.jpg': require('../../assets/image2/diskparking.jpg'),\r\n'driveonleft.jpg': require('../../assets/image2/driveonleft.jpg'),\r\n'dualcarriagewayahead.jpg': require('../../assets/image2/dualcarriagewayahead.jpg'),\r\n'endofmotorway.jpg': require('../../assets/image2/endofmotorway.jpg'),\r\n'endofobstruction.jpg': require('../../assets/image2/endofobstruction.jpg'),\r\n'etoll.jpg': require('../../assets/image2/etoll.jpg'),\r\n'fallingrocks.jpg': require('../../assets/image2/fallingrocks.jpg'),\r\n'faultbrakingsystem.jpg': require('../../assets/image2/faultbrakingsystem.jpg'),\r\n'flagmanahead.jpg': require('../../assets/image2/flagmanahead.jpg'),\r\n'flashingleftamberlight.jpg': require('../../assets/image2/flashingleftamberlight.jpg'),\r\n'focuscrosswinds.jpg': require('../../assets/image2/focuscrosswinds.jpg'),\r\n'frontturnleft.jpg': require('../../assets/image2/frontturnleft.jpg'),\r\n'frontturnright.jpg': require('../../assets/image2/frontturnright.jpg'),\r\n'gardaeitherside.jpg': require('../../assets/image2/gardaeitherside.jpg'),\r\n'gardafrontproceed.jpg': require('../../assets/image2/gardafrontproceed.jpg'),\r\n'gardastop.jpg': require('../../assets/image2/gardastop.jpg'),\r\n'gardastopbehind.jpg': require('../../assets/image2/gardastopbehind.jpg'),\r\n'go.jpg': require('../../assets/image2/go.jpg'),\r\n'greenleftright.jpg': require('../../assets/image2/greenleftright.jpg'),\r\n'greenrightlight.jpg': require('../../assets/image2/greenrightlight.jpg'),\r\n'greentrafficlight.jpg': require('../../assets/image2/greentrafficlight.jpg'),\r\n'guardedlevelcrossing.jpg': require('../../assets/image2/guardedlevelcrossing.jpg'),\r\n'hardshoulder.jpg': require('../../assets/image2/hardshoulder.jpg'),\r\n'heavyrainroad.jpg': require('../../assets/image2/heavyrainroad.jpg'),\r\n'highbeam.jpg': require('../../assets/image2/highbeam.jpg'),\r\n'horses.jpg': require('../../assets/image2/horses.jpg'),\r\n'junctionlesser.jpg': require('../../assets/image2/junctionlesser.jpg'),\r\n'keepleft.jpg': require('../../assets/image2/keepleft.jpg'),\r\n'keepright.jpg': require('../../assets/image2/keepright.jpg'),\r\n'loosechippings.jpg': require('../../assets/image2/loosechippings.jpg'),\r\n'lowflyingaircraft.jpg': require('../../assets/image2/lowflyingaircraft.jpg'),\r\n'lowoillevel.jpg': require('../../assets/image2/lowoillevel.jpg'),\r\n'mainbearleft.jpg': require('../../assets/image2/mainbearleft.jpg'),\r\n'majorahead.jpg': require('../../assets/image2/majorahead.jpg'),\r\n'max10tonnes.jpg': require('../../assets/image2/max10tonnes.jpg'),\r\n'maxheight.jpg': require('../../assets/image2/maxheight.jpg'),\r\n'maynotcross.jpg': require('../../assets/image2/maynotcross.jpg'),\r\n'mergingdiverging.jpg': require('../../assets/image2/mergingdiverging.jpg'),\r\n'miniroundaboutahead.jpg': require('../../assets/image2/miniroundaboutahead.jpg'),\r\n'motorwayahead.jpg': require('../../assets/image2/motorwayahead.jpg'),\r\n'motorwayend.jpg': require('../../assets/image2/motorwayend.jpg'),\r\n'motorwayentry.jpg': require('../../assets/image2/motorwayentry.jpg'),\r\n'narrowbothsides.jpg': require('../../assets/image2/narrowbothsides.jpg'),\r\n'narrowleft.jpg': require('../../assets/image2/narrowleft.jpg'),\r\n'narrowright.jpg': require('../../assets/image2/narrowright.jpg'),\r\n'nearsidethreeclosed.jpg': require('../../assets/image2/nearsidethreeclosed.jpg'),\r\n'nearsidetwoclosed.jpg': require('../../assets/image2/nearsidetwoclosed.jpg'),\r\n'noentry.jpg': require('../../assets/image2/noentry.jpg'),\r\n'noentrymarking.jpg': require('../../assets/image2/noentrymarking.jpg'),\r\n'noentryunlessclear.jpg': require('../../assets/image2/noentryunlessclear.jpg'),\r\n'noleft.jpg': require('../../assets/image2/noleft.jpg'),\r\n'noparkingarea.jpg': require('../../assets/image2/noparkingarea.jpg'),\r\n'noright.jpg': require('../../assets/image2/noright.jpg'),\r\n'nouturn.jpg': require('../../assets/image2/nouturn.jpg'),\r\n'obstruction.jpg': require('../../assets/image2/obstruction.jpg'),\r\n'offsidethreeclosed.jpg': require('../../assets/image2/offsidethreeclosed.jpg'),\r\n'oncomingheadlights.jpg': require('../../assets/image2/oncomingheadlights.jpg'),\r\n'oncomingstraight.jpg': require('../../assets/image2/oncomingstraight.jpg'),\r\n'oncomingturnleft.jpg': require('../../assets/image2/oncomingturnleft.jpg'),\r\n'oncomingturnright.jpg': require('../../assets/image2/oncomingturnright.jpg'),\r\n'overhangingload.jpg': require('../../assets/image2/overhangingload.jpg'),\r\n'overheadcables.jpg': require('../../assets/image2/overheadcables.jpg'),\r\n'overtakeifsafetodoso.jpg': require('../../assets/image2/overtakeifsafetodoso.jpg'),\r\n'parking.jpg': require('../../assets/image2/parking.jpg'),\r\n'parkingnotallowedattimes.jpg': require('../../assets/image2/parkingnotallowedattimes.jpg'),\r\n'parkingprohibited.jpg': require('../../assets/image2/parkingprohibited.jpg'),\r\n'parkingprohibitedalltimes.jpg': require('../../assets/image2/parkingprohibitedalltimes.jpg'),\r\n'passeitherside.jpg': require('../../assets/image2/passeitherside.jpg'),\r\n'pedestriancrossing.jpg': require('../../assets/image2/pedestriancrossing.jpg'),\r\n'pedestriancrossright.jpg': require('../../assets/image2/pedestriancrossright.jpg'),\r\n'pedestrianisedstreet.jpg': require('../../assets/image2/pedestrianisedstreet.jpg'),\r\n'pooorlylitstreet.jpg': require('../../assets/image2/pooorlylitstreet.jpg'),\r\n'queueslikely.jpg': require('../../assets/image2/queueslikely.jpg'),\r\n'railway.jpg': require('../../assets/image2/railway.jpg'),\r\n'redtrafficlight.jpg': require('../../assets/image2/redtrafficlight.jpg'),\r\n'revcounter.jpg': require('../../assets/image2/revcounter.jpg'),\r\n'roaddivides.jpg': require('../../assets/image2/roaddivides.jpg'),\r\n'roadnarrow.jpg': require('../../assets/image2/roadnarrow.jpg'),\r\n'roadnarrowleft.jpg': require('../../assets/image2/roadnarrowleft.jpg'),\r\n'roadworks.jpg': require('../../assets/image2/roadworks.jpg'),\r\n'roadworksstop.jpg': require('../../assets/image2/roadworksstop.jpg'),\r\n'roundaboutahead.jpg': require('../../assets/image2/roundaboutahead.jpg'),\r\n'schoolahead.jpg': require('../../assets/image2/schoolahead.jpg'),\r\n'schoolcrossingahead.jpg': require('../../assets/image2/schoolcrossingahead.jpg'),\r\n'seriesdangerousbends.jpg': require('../../assets/image2/seriesdangerousbends.jpg'),\r\n'seriesdangerouscorners.jpg': require('../../assets/image2/seriesdangerouscorners.jpg'),\r\n'seriesofbumps.jpg': require('../../assets/image2/seriesofbumps.jpg'),\r\n'sharedtrack.jpg': require('../../assets/image2/sharedtrack.jpg'),\r\n'sharpascent.jpg': require('../../assets/image2/sharpascent.jpg'),\r\n'sharpchangeright.jpg': require('../../assets/image2/sharpchangeright.jpg'),\r\n'sharpdepression.jpg': require('../../assets/image2/sharpdepression.jpg'),\r\n'sharpdescent.jpg': require('../../assets/image2/sharpdescent.jpg'),\r\n'sharprise.jpg': require('../../assets/image2/sharprise.jpg'),\r\n'sheep.jpg': require('../../assets/image2/sheep.jpg'),\r\n'signalslowdown.jpg': require('../../assets/image2/signalslowdown.jpg'),\r\n'signalstraighton.jpg': require('../../assets/image2/signalstraighton.jpg'),\r\n'signalturnleft.jpg': require('../../assets/image2/signalturnleft.jpg'),\r\n'signalturnright.jpg': require('../../assets/image2/signalturnright.jpg'),\r\n'slipperyroad.jpg': require('../../assets/image2/slipperyroad.jpg'),\r\n'solidwhite.jpg': require('../../assets/image2/solidwhite.jpg'),\r\n'staggeredequal.jpg': require('../../assets/image2/staggeredequal.jpg'),\r\n'startofobstruction.jpg': require('../../assets/image2/startofobstruction.jpg'),\r\n'stop.jpg': require('../../assets/image2/stop.jpg'),\r\n'stopcrossing.jpg': require('../../assets/image2/stopcrossing.jpg'),\r\n'stopfrontbehind.jpg': require('../../assets/image2/stopfrontbehind.jpg'),\r\n'stopredlights.jpg': require('../../assets/image2/stopredlights.jpg'),\r\n'straightahead.jpg': require('../../assets/image2/straightahead.jpg'),\r\n'taxirank.jpg': require('../../assets/image2/taxirank.jpg'),\r\n'tdualcarriageway.jpg': require('../../assets/image2/tdualcarriageway.jpg'),\r\n'temporarytrafficsignals.jpg': require('../../assets/image2/temporarytrafficsignals.jpg'),\r\n'tjunction.jpg': require('../../assets/image2/tjunction.jpg'),\r\n'tmajor.jpg': require('../../assets/image2/tmajor.jpg'),\r\n'trafficmergeleft.jpg': require('../../assets/image2/trafficmergeleft.jpg'),\r\n'trafficsignal.jpg': require('../../assets/image2/trafficsignal.jpg'),\r\n'tramcycle.jpg': require('../../assets/image2/tramcycle.jpg'),\r\n'tramlaneleft.jpg': require('../../assets/image2/tramlaneleft.jpg'),\r\n'tramlaneright.jpg': require('../../assets/image2/tramlaneright.jpg'),\r\n'tramway.jpg': require('../../assets/image2/tramway.jpg'),\r\n'tramwaycrossing.jpg': require('../../assets/image2/tramwaycrossing.jpg'),\r\n'tunnel.jpg': require('../../assets/image2/tunnel.jpg'),\r\n'turnleft.jpg': require('../../assets/image2/turnleft.jpg'),\r\n'turnleftahead.jpg': require('../../assets/image2/turnleftahead.jpg'),\r\n'turnright.jpg': require('../../assets/image2/turnright.jpg'),\r\n'turnrightahead.jpg': require('../../assets/image2/turnrightahead.jpg'),\r\n'twowaytraffic.jpg': require('../../assets/image2/twowaytraffic.jpg'),\r\n'uneven.jpg': require('../../assets/image2/uneven.jpg'),\r\n'unevensurface.jpg': require('../../assets/image2/unevensurface.jpg'),\r\n'unguardedlevelcrossing.jpg': require('../../assets/image2/unguardedlevelcrossing.jpg'),\r\n'unprotectedwater.jpg': require('../../assets/image2/unprotectedwater.jpg'),\r\n'wetskiddy.jpg': require('../../assets/image2/wetskiddy.jpg'),\r\n'whitearrows.jpg': require('../../assets/image2/whitearrows.jpg'),\r\n'yequal.jpg': require('../../assets/image2/yequal.jpg'),\r\n'yield.jpg': require('../../assets/image2/yield.jpg'),\r\n'zebracrossing.jpg': require('../../assets/image2/zebracrossing.jpg'),\r\n};\r\n\r\n/**\r\n * 获取问题的翻译版本\r\n * @param {Object} question - 题目对象\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Object} 处理后的题目对象\r\n */\r\nconst getQuestionTranslation = (question, language = 'zh') => {\r\n  try {\r\n    if (!question) {\r\n      throw new Error('题目对象为空');\r\n    }\r\n    \r\n    // 如果问题有翻译字段且包含请求的语言\r\n    if (question.translations && question.translations[language]) {\r\n      const translation = question.translations[language];\r\n      \r\n      // 验证翻译数据的完整性\r\n      if (!translation.question || !translation.answers || !Array.isArray(translation.answers)) {\r\n        throw new Error(`语言 ${language} 的翻译数据不完整`);\r\n      }\r\n      \r\n      // 创建一个新的问题对象，保留原始问题的属性\r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有请求语言的翻译，尝试使用中文版本\r\n    if (language !== 'zh' && question.translations && question.translations.zh) {\r\n      console.warn(`未找到语言 ${language} 的翻译，使用中文版本`);\r\n      const translation = question.translations.zh;\r\n      \r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有任何翻译，抛出错误\r\n    throw new Error(`题目 ${question.id || '未知'} 没有可用的翻译`);\r\n  } catch (error) {\r\n    console.error('获取题目翻译时出错:', error, question);\r\n    // 返回一个带有错误信息的题目对象\r\n    return {\r\n      ...question,\r\n      question: `[翻译错误] ${error.message}`,\r\n      answers: question.answers || [],\r\n      hasError: true\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 加载题目数据集\r\n * @param {number} setNumber - 题目集编号\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 题目数组\r\n */\r\nexport const loadQuestionSet = async (setNumber = 0, language = 'zh') => {\r\n  try {\r\n    // 动态导入JSON数据\r\n    let questionSet;\r\n    \r\n    try {\r\n      if (setNumber === 0) {\r\n        questionSet = await import('../../assets/data/setofquestions0.json');\r\n      } else if (setNumber === 1) {\r\n        questionSet = await import('../../assets/data/setofquestions1.json');\r\n      } else if (setNumber === 2) {\r\n        questionSet = await import('../../assets/data/setofquestions2.json');\r\n      } else {\r\n        // 默认加载第2集的修复版本\r\n        questionSet = await import('../../assets/data/setofquestions3.json');\r\n      }\r\n      console.log(`加载题库 ${setNumber}`);\r\n    } catch (error) {\r\n      console.warn(`加载题集 ${setNumber} 失败，使用默认题集2: ${error.message}`);\r\n    }\r\n    \r\n    // 确保我们有可用的数据\r\n    if (!questionSet) {\r\n      throw new Error(`题库 ${setNumber} 数据为空`);\r\n    }\r\n    \r\n    const questions = Array.isArray(questionSet.default) ? questionSet.default : questionSet;\r\n    \r\n    // 处理题目中的图片引用并应用翻译\r\n    return questions.map(question => {\r\n      // 获取翻译后的问题\r\n      const translatedQuestion = getQuestionTranslation(question, language);\r\n      \r\n      // 确保answers字段格式正确\r\n      if (translatedQuestion.answers) {\r\n        translatedQuestion.options = translatedQuestion.answers.map((ans, idx) => ({\r\n          id: String.fromCharCode(65 + idx), // A, B, C...\r\n          text: ans.text,\r\n          isCorrect: ans.correct\r\n        }));\r\n      }\r\n      \r\n      // 如果有picture属性，提取信号ID\r\n      if (translatedQuestion.picture) {\r\n        const signalMatch = translatedQuestion.picture.match(/signal(\\d+)/i);\r\n        if (signalMatch && signalMatch[1]) {\r\n          const signalId = parseInt(signalMatch[1], 10);\r\n          if (trafficSignalImages[signalId]) {\r\n            translatedQuestion.signalImage = trafficSignalImages[signalId];\r\n          }\r\n        } else if (translatedQuestion.picture.includes('images/image')) {\r\n          // 处理普通图片路径，如 \"images/image47.png\"\r\n          try {\r\n            const imageMatch = translatedQuestion.picture.match(/images\\/image(\\d+)\\.png/i);\r\n            if (imageMatch && imageMatch[1]) {\r\n              const imageNumber = imageMatch[1];\r\n              // 使用预加载的图片资源\r\n              if (imageAssets[imageNumber]) {\r\n                translatedQuestion.signalImage = imageAssets[imageNumber];\r\n                console.log(`加载图片: image${imageNumber}.png`);\r\n              } else {\r\n                console.warn(`未预加载图片: image${imageNumber}.png`);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn(`无法加载图片: ${translatedQuestion.picture}`, error);\r\n          }\r\n        } else if (translatedQuestion.picture.includes('image2/')) {\r\n          // 处理 image2 目录下的 jpg 资源，如 \"image2/motorwayend.jpg\"\r\n          try {\r\n            const fileName = translatedQuestion.picture.split('/').pop();\r\n            if (fileName && image2Assets[fileName]) {\r\n              translatedQuestion.signalImage = image2Assets[fileName];\r\n              console.log(`加载图片: image2/${fileName}`);\r\n            } else {\r\n              console.warn(`未预加载图片: image2/${fileName}`);\r\n            }\r\n          } catch (error) {\r\n            console.warn(`无法加载图片: ${translatedQuestion.picture}`, error);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 确保所有必要的字段都存在\r\n      return {\r\n        ...translatedQuestion,\r\n        id: translatedQuestion.id || `temp_${setNumber}_${Math.random().toString(36).substr(2, 9)}`,\r\n        category: translatedQuestion.category || 'general',\r\n        answers: translatedQuestion.answers || [],\r\n        options: translatedQuestion.options || []\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error(`Failed to load question set ${setNumber}:`, error);\r\n    throw error; // 抛出错误以便上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 加载所有题目数据集\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 合并后的题目数组\r\n */\r\nexport const loadAllQuestionSets = async (language = 'zh') => {\r\n  try {\r\n    const sets = [];\r\n    const errors = [];\r\n    \r\n    // 只尝试加载已知存在的题目集\r\n    const availableSets = [0, 1, 2, 3];\r\n    \r\n    for (const setNumber of availableSets) {\r\n      try {\r\n        console.log(`尝试加载题集 ${setNumber}...`);\r\n        const set = await loadQuestionSet(setNumber, language);\r\n        \r\n        if (set && Array.isArray(set)) {\r\n          console.log(`成功加载题集 ${setNumber}, 共 ${set.length} 题`);\r\n          sets.push(...set);\r\n        } else {\r\n          console.warn(`题集 ${setNumber} 加载成功但格式无效`);\r\n          errors.push(`题目集 ${setNumber} 格式无效`);\r\n        }\r\n      } catch (e) {\r\n        console.error(`题目集 ${setNumber} 加载失败:`, e.message);\r\n        errors.push(`题目集 ${setNumber} 加载失败: ${e.message}`);\r\n        // 继续加载其他题集，不中断流程\r\n      }\r\n    }\r\n    \r\n    // 如果至少加载了一个题集\r\n    if (sets.length > 0) {\r\n      console.log(`总共加载了 ${sets.length} 道题目`);\r\n      \r\n      if (errors.length > 0) {\r\n        // 记录错误但不阻止应用运行\r\n        console.warn('加载过程中出现以下错误:', errors.join('; '));\r\n      }\r\n      \r\n      return sets;\r\n    }\r\n    \r\n    // 如果一个题集都没加载成功，尝试返回一个最小题集\r\n    console.error('没有成功加载任何题集，使用备用题集');\r\n    \r\n    try {\r\n      const backupQuestions = await import('../../assets/data/setofquestions3.json');\r\n      const questions = Array.isArray(backupQuestions.default) ? backupQuestions.default : backupQuestions;\r\n      return questions;\r\n    } catch (backupError) {\r\n      // 如果连备用选项都失败了，抛出累积的错误\r\n      throw new Error(`无法加载任何题库: ${errors.join('; ')}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('加载所有题目集时出错:', error);\r\n    throw error; // 让上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 获取交通信号图标\r\n * @param {number} signalId - 信号ID\r\n * @returns {object} 图标资源\r\n */\r\nexport const getTrafficSignalImage = (signalId) => {\r\n  return trafficSignalImages[signalId] || null;\r\n};\r\n\r\n/**\r\n * 根据类别获取题目\r\n * @param {string} category - 题目类别\r\n * @param {string} language - 语言代码\r\n * @returns {Promise<Array>} 过滤后的题目数组\r\n */\r\nexport const getQuestionsByCategory = async (category, language = 'zh') => {\r\n  const allQuestions = await loadAllQuestionSets(language);\r\n  \r\n  if (!category || category === 'all') {\r\n    return allQuestions;\r\n  }\r\n  \r\n  return allQuestions.filter(q => q.category === category);\r\n};\r\n\r\n/**\r\n * 获取所有可用的题目分类\r\n * @returns {Promise<Array>} 分类数组\r\n */\r\nexport const getAllCategories = async () => {\r\n  try {\r\n    const questions = await loadAllQuestionSets();\r\n    \r\n    if (!Array.isArray(questions) || questions.length === 0) {\r\n      console.warn('获取分类时发现题目数据为空或无效');\r\n      return ['general']; // 返回默认分类\r\n    }\r\n    \r\n    // 使用Set去重\r\n    const categories = Array.from(new Set(\r\n      questions\r\n        .filter(q => q && q.category) // 过滤掉没有分类的题目\r\n        .map(q => q.category)\r\n    ));\r\n    \r\n    // 如果没有找到任何分类，返回一个默认值\r\n    if (categories.length === 0) {\r\n      console.warn('未找到任何分类，使用默认分类');\r\n      return ['general'];\r\n    }\r\n    \r\n    return categories;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    return ['general']; // 出错时返回默认分类，避免应用崩溃\r\n  }\r\n};\r\n\r\n/**\r\n * 获取中文分类名称\r\n * @param {string} category - 原始类别名\r\n * @returns {string} 中文分类名\r\n */\r\nexport const getChineseCategoryName = (category) => {\r\n  const categoryMap = {\r\n    'traffic_signs': '交通标志',\r\n    'rules': '交通规则',\r\n    'safety': '安全常识',\r\n    'vehicle': '车辆知识',\r\n    'emergency': '应急处理',\r\n    'all': '所有题目'\r\n  };\r\n  \r\n  return categoryMap[category] || category;\r\n};\r\n\r\nexport default {\r\n  loadQuestionSet,\r\n  loadAllQuestionSets,\r\n  getTrafficSignalImage,\r\n  getQuestionsByCategory,\r\n  getAllCategories,\r\n  getChineseCategoryName,\r\n  getQuestionTranslation\r\n};","/**\r\n * 样式工具函数\r\n * \r\n * 这个文件提供了帮助处理样式相关问题的工具函数\r\n */\r\n\r\n\r\n/**\r\n * 创建跨平台兼容的阴影样式\r\n * @param {Object} options - 阴影选项\r\n * @param {string} options.color - 阴影颜色\r\n * @param {Object} options.offset - 阴影偏移 { width, height }\r\n * @param {number} options.opacity - 阴影不透明度\r\n * @param {number} options.radius - 阴影半径\r\n * @param {number} options.elevation - Android 高度 (可选)\r\n * @returns {Object} 跨平台兼容的样式对象\r\n */\r\nexport const createShadow = ({\r\n  color = '#000',\r\n  offset = { width: 0, height: 2 },\r\n  opacity = 0.1,\r\n  radius = 3,\r\n  elevation = 3\r\n} = {}) => {\r\n  // 使用boxShadow，不再区分平台\r\n  const { width, height } = offset;\r\n  return {\r\n    // 对于所有平台都使用boxShadow\r\n    boxShadow: `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`,\r\n    // 对于Android仍保留elevation\r\n    elevation: elevation\r\n  };\r\n};\r\n\r\n/**\r\n * 根据平台返回正确的图像props\r\n * 解决了style.resizeMode和style.tintColor废弃的警告\r\n * \r\n * @param {Object} imageStyle 原始图像样式对象\r\n * @returns {Object} 处理后的样式和props对象\r\n */\r\nexport const getImageProps = (imageStyle = {}) => {\r\n  const { resizeMode, tintColor, ...otherStyles } = imageStyle;\r\n  \r\n  // 创建一个新的props对象\r\n  const imageProps = {\r\n    style: otherStyles,\r\n  };\r\n  \r\n  // 如果存在resizeMode，将其提升为组件的props\r\n  if (resizeMode) {\r\n    imageProps.resizeMode = resizeMode;\r\n  }\r\n  \r\n  // 如果存在tintColor，将其提升为组件的props\r\n  if (tintColor) {\r\n    imageProps.tintColor = tintColor;\r\n  }\r\n  \r\n  return imageProps;\r\n};\r\n\r\n/**\r\n * 修复带shadow属性的样式对象，将其转换为boxShadow\r\n * @param {Object} styles - 原始样式对象\r\n * @returns {Object} - 修复后的样式对象\r\n */\r\nexport const fixDeprecatedShadow = (styles = {}) => {\r\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius, ...otherStyles } = styles;\r\n  \r\n  // 如果没有shadow相关属性，直接返回原样式\r\n  if (!shadowColor && !shadowOffset && !shadowOpacity && !shadowRadius) {\r\n    return styles;\r\n  }\r\n  \r\n  // 提取shadow属性值，设置默认值\r\n  const color = shadowColor || '#000';\r\n  const offset = shadowOffset || { width: 0, height: 2 };\r\n  const opacity = shadowOpacity || 0.1;\r\n  const radius = shadowRadius || 3;\r\n  const { width, height } = offset;\r\n  \r\n  // 创建boxShadow\r\n  const boxShadow = `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`;\r\n  \r\n  // 返回修复后的样式\r\n  return {\r\n    ...otherStyles,\r\n    boxShadow\r\n  };\r\n};\r\n\r\nexport default {\r\n  getImageProps,\r\n  createShadow,\r\n  fixDeprecatedShadow\r\n};","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, SafeAreaView, StatusBar, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst BrowseScreen = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n  const [error, setError] = useState('');\r\n\r\n  // 提取fetchData为组件级函数\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // 加载所有题目集\r\n      let allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\r\n      \r\n      // 数据验证，确保即使返回无效数据也不崩溃\r\n      if (!Array.isArray(allQuestions)) {\r\n        console.error('题目数据无效，返回空数组');\r\n        allQuestions = [];\r\n      }\r\n      \r\n      // 确保所有题目都有一个有效的ID\r\n      allQuestions = allQuestions\r\n        .filter(q => q && q.id) // 过滤掉没有id的题目\r\n        .map(q => ({\r\n          ...q,\r\n          id: q.id.toString() // 确保ID是字符串类型\r\n        }));\r\n      \r\n      // 记录加载信息\r\n      console.log(`成功加载 ${allQuestions.length} 道题目`);\r\n      setQuestions(allQuestions);\r\n      \r\n      try {\r\n        // 获取所有类别\r\n        const allCategories = await assetDataService.getAllCategories();\r\n        \r\n        // 转换类别格式\r\n        const formattedCategories = [\r\n          { id: 'all', title: '所有题目' },\r\n          ...allCategories.map(cat => ({\r\n            id: cat,\r\n            title: assetDataService.getChineseCategoryName(cat)\r\n          }))\r\n        ];\r\n        \r\n        setCategories(formattedCategories);\r\n      } catch (categoryError) {\r\n        console.error('加载类别失败:', categoryError);\r\n        // 添加默认类别避免崩溃\r\n        setCategories([{ id: 'all', title: '所有题目' }]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('加载题目时出错:', error);\r\n      // 显示用户友好的错误消息\r\n      setError('加载题库失败，请尝试重新启动应用');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    fetchData();\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [t]);\r\n\r\n  // 过滤题目\r\n  const getFilteredQuestions = () => {\r\n    let filtered = selectedCategory === 'all'\r\n      ? questions\r\n      : questions.filter(q => q.category === selectedCategory);\r\n    \r\n    // 应用搜索过滤\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      filtered = filtered.filter(q => \r\n        q.question.toLowerCase().includes(query) || \r\n        (q.id && q.id.toString().includes(query))\r\n      );\r\n    }\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    if (!question || !question.id) {\r\n      console.error('Cannot navigate: Question or question ID is missing', question);\r\n      Alert.alert('错误', '无法查看题目详情，题目ID不存在');\r\n      return;\r\n    }\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderCategoryItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.categoryButton,\r\n        selectedCategory === item.id && styles.categoryButtonActive\r\n      ]}\r\n      onPress={() => setSelectedCategory(item.id)}\r\n    >\r\n      <Text \r\n        style={[\r\n          styles.categoryButtonText,\r\n          selectedCategory === item.id && styles.categoryButtonTextActive\r\n        ]}\r\n      >\r\n        {item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderQuestionItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionCard}\r\n        onPress={() => handleQuestionPress(item)}\r\n        activeOpacity={0.7}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Ionicons name=\"bookmark-outline\" size={14} color=\"#4c669f\" style={{marginRight: 4}} />\r\n            <Text style={styles.categoryLabel}>\r\n              {assetDataService.getChineseCategoryName(item.category)}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.idContainer}>\r\n            <Ionicons name=\"id-card-outline\" size={14} color=\"#666\" style={{marginRight: 4}} />\r\n            <Text style={styles.questionId}>#{item.id}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <Text style={styles.questionText}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.cardFooter}>\r\n          <TouchableOpacity style={styles.iconButton}>\r\n            <Ionicons name=\"heart-outline\" size={22} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          <View style={styles.footerRight}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n              <Ionicons name=\"chevron-forward\" size={16} color=\"#4c669f\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题库中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  // 添加错误处理界面\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle\" size={60} color=\"#e74c3c\" />\r\n        <Text style={styles.errorTitle}>加载失败</Text>\r\n        <Text style={styles.errorMessage}>{error}</Text>\r\n        <TouchableOpacity \r\n          style={styles.retryButton}\r\n          onPress={() => {\r\n            setError('');\r\n            setLoading(true);\r\n            fetchData();\r\n          }}\r\n        >\r\n          <Text style={styles.retryButtonText}>重试</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const filteredQuestions = getFilteredQuestions();\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>浏览题库</Text>\r\n        <Text style={styles.subtitle}>共 {questions.length} 道题目</Text>\r\n      </View>\r\n\r\n      <QuestionLanguageSwitcher \r\n        currentLanguage={currentLanguage} \r\n        onChangeLanguage={handleLanguageChange} \r\n      />\r\n\r\n      <View style={styles.searchContainer}>\r\n        <Ionicons name=\"search\" size={20} color=\"#999\" style={styles.searchIcon} />\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"搜索题目关键词...\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n          placeholderTextColor=\"#999\"\r\n        />\r\n        {searchQuery !== '' && (\r\n          <TouchableOpacity onPress={() => setSearchQuery('')} style={styles.clearButton}>\r\n            <Ionicons name=\"close-circle\" size={20} color=\"#999\" />\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.categoriesContainer}>\r\n        <Text style={styles.sectionTitle}>分类筛选</Text>\r\n        <FlatList\r\n          horizontal\r\n          data={categories}\r\n          renderItem={renderCategoryItem}\r\n          keyExtractor={(item) => item.id}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.categoriesList}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.resultsContainer}>\r\n        <Text style={styles.resultCount}>\r\n          {filteredQuestions.length} 道{selectedCategory !== 'all' ? assetDataService.getChineseCategoryName(selectedCategory) : ''}题目\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={filteredQuestions}\r\n        renderItem={renderQuestionItem}\r\n        keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n        contentContainerStyle={styles.questionsList}\r\n        showsVerticalScrollIndicator={true}\r\n        ListEmptyComponent={() => (\r\n          <View style={styles.emptyContainer}>\r\n            <Ionicons name=\"search\" size={responsiveFontSize(50)} color=\"#ddd\" />\r\n            <Text style={styles.emptyText}>\r\n              没有找到符合条件的题目\r\n            </Text>\r\n            <TouchableOpacity \r\n              style={styles.resetButton} \r\n              onPress={() => {\r\n                setSelectedCategory('all');\r\n                setSearchQuery('');\r\n              }}\r\n            >\r\n              <Text style={styles.resetButtonText}>重置筛选条件</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginTop: responsiveHeight(0.5),\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(1),\r\n    borderRadius: 10,\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  searchIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: responsiveHeight(5),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n  },\r\n  clearButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(4),\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoriesContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingTop: responsiveHeight(1),\r\n    paddingBottom: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 3,\r\n    elevation: 2,\r\n  },\r\n  categoriesList: {\r\n    paddingHorizontal: responsiveWidth(3),\r\n  },\r\n  categoryButton: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1),\r\n    marginHorizontal: responsiveWidth(1),\r\n    borderRadius: 20,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  categoryButtonActive: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  categoryButtonText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  categoryButtonTextActive: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsContainer: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  resultCount: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  questionsList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  questionCard: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryLabel: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionId: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginVertical: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(1),\r\n    paddingTop: responsiveHeight(1),\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  iconButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  footerRight: {\r\n    flexDirection: 'row',\r\n  },\r\n  viewButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f0f5ff',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 15,\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n    marginRight: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  resetButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  resetButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorTitle: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  errorMessage: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  retryButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  idContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default BrowseScreen; ","// 驾照考试模拟数据\r\nexport const questions = [\r\n  {\r\n    id: '1',\r\n    category: '交通法规',\r\n    question: '在道路上驾驶机动车怎样选择行车道?',\r\n    options: [\r\n      { id: 'A', text: '根据交通标志、标线选择行车道' },\r\n      { id: 'B', text: '根据车速选择行车道' },\r\n      { id: 'C', text: '按照车型选择行车道' },\r\n      { id: 'D', text: '按照自己习惯选择行车道' }\r\n    ],\r\n    correctAnswer: 'A',\r\n    explanation: '在道路上驾驶机动车应根据交通标志、标线选择行车道，这样才能保证行车安全和道路通畅。',\r\n    imageUrl: null,\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '2',\r\n    category: '交通法规',\r\n    question: '驾驶机动车在进出隧道时应注意什么?',\r\n    options: [\r\n      { id: 'A', text: '开启前照灯' },\r\n      { id: 'B', text: '关闭前照灯' },\r\n      { id: 'C', text: '保持安全车距' },\r\n      { id: 'D', text: '以上都是' }\r\n    ],\r\n    correctAnswer: 'D',\r\n    explanation: '驾驶机动车在进出隧道时应开启前照灯，保持安全车距，注意行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '3',\r\n    category: '安全常识',\r\n    question: '行车中遇到对向来车占道行驶时，应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '紧靠道路中心行驶' },\r\n      { id: 'B', text: '向右占道行驶' },\r\n      { id: 'C', text: '靠右减速避让' },\r\n      { id: 'D', text: '加速从左侧通过' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '当遇到对向来车占道行驶时，应当靠右减速避让，确保行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '4',\r\n    category: '交通法规',\r\n    question: '这个标志是何含义？',\r\n    options: [\r\n      { id: 'A', text: '禁止通行' },\r\n      { id: 'B', text: '减速让行' },\r\n      { id: 'C', text: '停车让行' },\r\n      { id: 'D', text: '注意危险' }\r\n    ],\r\n    correctAnswer: 'B',\r\n    explanation: '此标志为减速让行标志，提醒驾驶员减速慢行，注意让行。',\r\n    imageUrl: 'https://example.com/signs/yield.jpg',\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '安全常识',\r\n    question: '驾驶机动车遇到沙尘暴天气时应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '加速驶离沙尘区' },\r\n      { id: 'B', text: '开启前照灯行驶' },\r\n      { id: 'C', text: '开启危险报警闪光灯，就近选择安全地点停车' },\r\n      { id: 'D', text: '以正常速度行驶' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '遇到沙尘暴天气时，能见度低，应开启危险报警闪光灯，就近选择安全地点停车，等天气好转后再行驶。',\r\n    imageUrl: null,\r\n    difficulty: '困难'\r\n  }\r\n]; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport { Platform } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n// 模拟数据\r\nimport { questions } from '../data/mockData';\r\n\r\n// 判断是否是Web平台\r\nconst isWeb = Platform.OS === 'web';\r\n\r\n// 获取数据库连接\r\nconst getDatabase = () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage模拟数据库\r\n    return null;\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    return SQLite.openDatabase('driving_license.db');\r\n  }\r\n};\r\n\r\n// 初始化数据库\r\nexport const initDatabase = async () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage存储数据\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      if (!storedQuestions) {\r\n        // 如果没有存储过题目数据，则存储模拟数据\r\n        await AsyncStorage.setItem('questions', JSON.stringify(questions));\r\n      }\r\n      \r\n      // 初始化收藏和错题记录\r\n      const favorites = await AsyncStorage.getItem('favorites');\r\n      if (!favorites) {\r\n        await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      }\r\n      \r\n      const mistakes = await AsyncStorage.getItem('mistakes');\r\n      if (!mistakes) {\r\n        await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize web database:', error);\r\n    }\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    const db = getDatabase();\r\n    \r\n    // 创建题目表\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS questions (\r\n          id TEXT PRIMARY KEY,\r\n          category TEXT,\r\n          question TEXT,\r\n          options TEXT,\r\n          correctAnswer TEXT,\r\n          explanation TEXT,\r\n          imageUrl TEXT,\r\n          difficulty TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建收藏表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS favorites (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT UNIQUE,\r\n          timestamp INTEGER\r\n        );`\r\n      );\r\n      \r\n      // 创建错题表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS mistakes (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT,\r\n          userAnswer TEXT,\r\n          timestamp INTEGER,\r\n          UNIQUE(questionId)\r\n        );`\r\n      );\r\n      \r\n      // 创建考试记录表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS exam_results (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          score REAL,\r\n          timeSpent INTEGER,\r\n          totalQuestions INTEGER,\r\n          correctCount INTEGER,\r\n          incorrectCount INTEGER,\r\n          answeredQuestions INTEGER,\r\n          unansweredQuestions INTEGER,\r\n          isPassed INTEGER,\r\n          details TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建学习进度表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS study_progress (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          questionsAnswered INTEGER,\r\n          correctAnswers INTEGER,\r\n          timeSpent INTEGER\r\n        );`\r\n      );\r\n    }, error => {\r\n      console.error('Error creating tables:', error);\r\n    }, () => {\r\n      // 检查是否需要插入初始数据\r\n      checkAndInsertInitialData(db);\r\n    });\r\n  }\r\n};\r\n\r\n// 检查并插入初始数据\r\nconst checkAndInsertInitialData = (db) => {\r\n  db.transaction(tx => {\r\n    tx.executeSql(\r\n      'SELECT COUNT(*) as count FROM questions;',\r\n      [],\r\n      (_, { rows }) => {\r\n        const count = rows._array[0].count;\r\n        if (count === 0) {\r\n          // 如果没有数据，插入模拟数据\r\n          insertMockData(db);\r\n        }\r\n      }\r\n    );\r\n  }, error => {\r\n    console.error('Error checking initial data:', error);\r\n  });\r\n};\r\n\r\n// 插入模拟数据\r\nconst insertMockData = (db) => {\r\n  db.transaction(tx => {\r\n    questions.forEach(question => {\r\n      tx.executeSql(\r\n        `INSERT INTO questions (id, category, question, options, correctAnswer, explanation, imageUrl, difficulty)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?);`,\r\n        [\r\n          question.id,\r\n          question.category,\r\n          question.question,\r\n          JSON.stringify(question.options),\r\n          question.correctAnswer,\r\n          question.explanation,\r\n          question.imageUrl,\r\n          question.difficulty\r\n        ]\r\n      );\r\n    });\r\n  }, error => {\r\n    console.error('Error inserting mock data:', error);\r\n  }, () => {\r\n    console.log('Mock data inserted successfully');\r\n  });\r\n};\r\n\r\n// 获取所有题目\r\nexport const getAllQuestions = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      return storedQuestions ? JSON.parse(storedQuestions) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions;',\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 按类别获取题目\r\nexport const getQuestionsByCategory = async (category) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return category === 'all' \r\n        ? allQuestions \r\n        : allQuestions.filter(q => q.category === category);\r\n    } catch (error) {\r\n      console.error('Failed to get questions by category from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      const query = category === 'all' \r\n        ? 'SELECT * FROM questions;' \r\n        : 'SELECT * FROM questions WHERE category = ?;';\r\n      const params = category === 'all' ? [] : [category];\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          query,\r\n          params,\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取随机题目\r\nexport const getRandomQuestions = async (count = 25) => {\r\n  const allQuestions = await getAllQuestions();\r\n  \r\n  // 随机打乱题目顺序\r\n  const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\r\n  \r\n  // 返回指定数量的题目\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\n// 获取题目详情\r\nexport const getQuestionById = async (id) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return allQuestions.find(q => q.id === id) || null;\r\n    } catch (error) {\r\n      console.error('Failed to get question by id from web storage:', error);\r\n      return null;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions WHERE id = ?;',\r\n          [id],\r\n          (_, { rows }) => {\r\n            if (rows.length > 0) {\r\n              const question = rows._array[0];\r\n              question.options = JSON.parse(question.options);\r\n              resolve(question);\r\n            } else {\r\n              resolve(null);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取完整题目信息（包括收藏状态和错题记录）\r\nexport const getCompleteQuestion = async (id) => {\r\n  try {\r\n    // 从所有题目中找到匹配的题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    const question = allQuestions.find(q => q.id.toString() === id.toString());\r\n    \r\n    if (!question) {\r\n      return null;\r\n    }\r\n    \r\n    // 获取收藏状态\r\n    const isFavorite = await isQuestionFavorited(id);\r\n    \r\n    // 转换答案格式\r\n    const formattedQuestion = {\r\n      ...question,\r\n      options: question.answers.map((ans, index) => ({\r\n        id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n        text: ans.text,\r\n        isCorrect: ans.correct\r\n      })),\r\n      isFavorite: isFavorite\r\n    };\r\n    \r\n    return formattedQuestion;\r\n  } catch (error) {\r\n    console.error('Error getting complete question:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 添加收藏\r\nexport const addToFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('addToFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  const now = Date.now();\r\n  console.log(`Adding question ID ${questionId} to favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否已收藏\r\n      const existingIndex = favorites.findIndex(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      if (existingIndex >= 0) {\r\n        console.log(`Question ${questionId} already in favorites`);\r\n        return true;\r\n      }\r\n      \r\n      // 添加新收藏\r\n      favorites.push({\r\n        id: `fav_${questionId}_${now}`,\r\n        questionId: questionId.toString(),\r\n        dateAdded: now,\r\n        timestamp: now\r\n      });\r\n      \r\n      console.log(`Saving favorites with new item: ${favorites.length} items total`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(favorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to add to favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 检查是否已收藏\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 如果未收藏，则添加\r\n              tx.executeSql(\r\n                'INSERT INTO favorites (questionId, timestamp) VALUES (?, ?);',\r\n                [questionId.toString(), now],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            } else {\r\n              // 已收藏，直接返回成功\r\n              resolve(true);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 移除收藏\r\nexport const removeFromFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeFromFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Removing question ID ${questionId} from favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 过滤掉指定的收藏\r\n      const updatedFavorites = favorites.filter(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = fId !== qId;\r\n        if (!result) {\r\n          console.log(`Found favorite to remove: ${fId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated favorites: from ${favorites.length} to ${updatedFavorites.length}`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove from favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          () => resolve(true),\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 检查是否已收藏\r\nexport const isQuestionFavorited = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('isQuestionFavorited: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否存在匹配的收藏\r\n      const found = favorites.some(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      console.log(`Question ${questionId} is${found ? '' : ' not'} favorited`);\r\n      return found;\r\n    } catch (error) {\r\n      console.error('Failed to check favorite status in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            resolve(rows.length > 0);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有收藏题目\r\nexport const getFavoriteQuestions = async () => {\r\n  console.log('Getting favorite questions');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 1. 获取收藏列表\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      console.log(`Found ${favorites.length} favorites in storage`);\r\n      \r\n      // 没有收藏，直接返回空数组\r\n      if (favorites.length === 0) {\r\n        return [];\r\n      }\r\n      \r\n      // 2. 加载所有题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets();\r\n      console.log(`Loaded ${allQuestions.length} questions to match with favorites`);\r\n      \r\n      // 3. 匹配收藏的题目\r\n      const favoriteQuestions = [];\r\n      \r\n      for (const favorite of favorites) {\r\n        const questionId = favorite.questionId || favorite.id;\r\n        if (!questionId) continue;\r\n        \r\n        // 查找对应的题目\r\n        const question = allQuestions.find(q => {\r\n          return q.id && q.id.toString() === questionId.toString();\r\n        });\r\n        \r\n        if (question) {\r\n          // 处理日期\r\n          let dateAdded;\r\n          try {\r\n            dateAdded = new Date(favorite.dateAdded || favorite.timestamp || Date.now());\r\n          } catch (e) {\r\n            dateAdded = new Date();\r\n          }\r\n          \r\n          favoriteQuestions.push({\r\n            ...question,\r\n            id: question.id,\r\n            question: question.question,\r\n            category: question.category,\r\n            dateAdded: dateAdded,\r\n            timestamp: favorite.timestamp || Date.now()\r\n          });\r\n        }\r\n      }\r\n      \r\n      console.log(`Returning ${favoriteQuestions.length} matched favorite questions`);\r\n      return favoriteQuestions;\r\n    } catch (error) {\r\n      console.error('Failed to get favorite questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT q.*, f.timestamp as dateAdded \r\n          FROM questions q\r\n          INNER JOIN favorites f ON q.id = f.questionId\r\n          ORDER BY f.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => {\r\n              // 转换日期\r\n              let dateAdded;\r\n              try {\r\n                dateAdded = new Date(item.dateAdded);\r\n              } catch (e) {\r\n                dateAdded = new Date();\r\n              }\r\n              \r\n              return {\r\n                ...item,\r\n                options: item.options ? JSON.parse(item.options) : [],\r\n                dateAdded: dateAdded\r\n              };\r\n            });\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录错题\r\nexport const recordMistake = async (questionId, userAnswer) => {\r\n  const nowIso = new Date().toISOString();\r\n  const nowTs = Date.now();\r\n  const mistakeId = `mistake_${questionId}_${nowTs}`;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      \r\n      // 统一用字符串比较，避免类型不一致导致查找失败\r\n      const existingIndex = mistakes.findIndex(m => (m.questionId?.toString() || '') === questionId.toString());\r\n      \r\n      if (existingIndex >= 0) {\r\n        // 更新已有错题记录，并刷新排序时间戳\r\n        mistakes[existingIndex].attempts = (mistakes[existingIndex].attempts || 0) + 1;\r\n        mistakes[existingIndex].lastAttempt = nowIso;\r\n        mistakes[existingIndex].userAnswer = userAnswer ?? mistakes[existingIndex].userAnswer ?? null;\r\n        mistakes[existingIndex].timestamp = nowTs;\r\n      } else {\r\n        // 添加新错题记录\r\n        mistakes.push({\r\n          id: mistakeId,\r\n          questionId: questionId?.toString(),\r\n          attempts: 1,\r\n          lastAttempt: nowIso,\r\n          userAnswer: userAnswer ?? null,\r\n          timestamp: nowTs\r\n        });\r\n      }\r\n      \r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(mistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 确保表结构包含需要的列\r\n        tx.executeSql(\r\n          `CREATE TABLE IF NOT EXISTS mistakes (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            questionId TEXT UNIQUE,\r\n            userAnswer TEXT,\r\n            timestamp INTEGER\r\n          );`\r\n        );\r\n        \r\n        // 查询是否已存在该错题\r\n        tx.executeSql(\r\n          'SELECT * FROM mistakes WHERE questionId = ?;',\r\n          [questionId.toString()],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 插入新记录\r\n              tx.executeSql(\r\n                'INSERT INTO mistakes (questionId, userAnswer, timestamp) VALUES (?, ?, ?);',\r\n                [questionId.toString(), userAnswer ?? null, nowTs],\r\n                () => resolve(true),\r\n                (_, error) => { reject(error); return false; }\r\n              );\r\n            } else {\r\n              // 更新已有记录（刷新时间戳以便最新排序）\r\n              tx.executeSql(\r\n                'UPDATE mistakes SET userAnswer = ?, timestamp = ? WHERE questionId = ?;',\r\n                [userAnswer ?? rows._array[0].userAnswer ?? null, nowTs, questionId.toString()],\r\n                () => resolve(true),\r\n                (_, error) => { reject(error); return false; }\r\n              );\r\n            }\r\n          },\r\n          (_, error) => { reject(error); return false; }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 批量记录错题\r\nexport const recordMistakesBatch = async (items) => {\r\n  if (!Array.isArray(items) || items.length === 0) return true;\r\n  const nowTs = Date.now();\r\n  const nowIso = new Date(nowTs).toISOString();\r\n\r\n  if (isWeb) {\r\n    try {\r\n      const stored = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = stored ? JSON.parse(stored) : [];\r\n\r\n      const byId = new Map(mistakes.map(m => [ (m.questionId?.toString() || ''), m ]));\r\n      for (const it of items) {\r\n        const qid = it.id?.toString() || it.questionId?.toString();\r\n        if (!qid) continue;\r\n        const existing = byId.get(qid);\r\n        if (existing) {\r\n          existing.attempts = (existing.attempts || 0) + 1;\r\n          existing.lastAttempt = nowIso;\r\n          if (it.userAnswer !== undefined) existing.userAnswer = it.userAnswer;\r\n          existing.timestamp = nowTs;\r\n        } else {\r\n          byId.set(qid, {\r\n            id: `mistake_${qid}_${nowTs}`,\r\n            questionId: qid,\r\n            attempts: 1,\r\n            lastAttempt: nowIso,\r\n            userAnswer: it.userAnswer ?? null,\r\n            timestamp: nowTs\r\n          });\r\n        }\r\n      }\r\n      const merged = Array.from(byId.values());\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(merged));\r\n      return true;\r\n    } catch (e) {\r\n      console.error('Failed to batch record mistakes (web):', e);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // ensure table\r\n        tx.executeSql(\r\n          `CREATE TABLE IF NOT EXISTS mistakes (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            questionId TEXT UNIQUE,\r\n            userAnswer TEXT,\r\n            timestamp INTEGER\r\n          );`\r\n        );\r\n        for (const it of items) {\r\n          const qid = (it.id ?? it.questionId)?.toString();\r\n          if (!qid) continue;\r\n          const ua = it.userAnswer ?? null;\r\n          tx.executeSql(\r\n            'INSERT OR REPLACE INTO mistakes (questionId, userAnswer, timestamp) VALUES (?, ?, ?);',\r\n            [qid, ua, nowTs]\r\n          );\r\n        }\r\n      }, error => {\r\n        console.error('Batch record mistakes failed (native):', error);\r\n        reject(error);\r\n      }, () => resolve(true));\r\n    });\r\n  }\r\n};\r\n\r\n// 将getMistakes函数定义放在前面，确保正确导出\r\nexport const getMistakes = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const mistakesData = await AsyncStorage.getItem('mistakes');\r\n      const list = mistakesData ? JSON.parse(mistakesData) : [];\r\n      // 保证按时间倒序返回\r\n      return list.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n    } catch (error) {\r\n      console.error('Failed to get mistake questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT m.questionId, m.userAnswer, m.timestamp FROM mistakes m \r\n           ORDER BY m.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => { resolve(rows._array); },\r\n          (_, error) => { reject(error); return false; }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取错题记录 (保留此函数作为兼容)\r\nexport const getMistakeQuestions = getMistakes;\r\n\r\n/**\r\n * 删除单个错题记录\r\n * @param {string} questionId - 题目ID\r\n * @returns {Promise}\r\n */\r\nexport const removeMistake = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeMistake: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Attempting to remove mistake with ID: ${questionId}`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Current mistakes count: ${mistakes.length}`);\r\n      \r\n      // 过滤掉指定的错题\r\n      const updatedMistakes = mistakes.filter(m => {\r\n        // 确保正确比较字符串形式的ID\r\n        const mId = m.questionId?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = mId !== qId;\r\n        if (!result) {\r\n          console.log(`Found mistake to remove: ${mId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated mistakes count: ${updatedMistakes.length}`);\r\n      \r\n      // 更新存储\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(updatedMistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM mistakes WHERE questionId = ?;',\r\n          [questionId.toString()],\r\n          (_, { rowsAffected }) => {\r\n            console.log(`Removed ${rowsAffected} mistake records for ID: ${questionId}`);\r\n            resolve(rowsAffected > 0);\r\n          },\r\n          (_, error) => {\r\n            console.error(`SQL error removing mistake ${questionId}:`, error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有错题记录\r\n * @returns {Promise}\r\n */\r\nexport const clearMistakes = async () => {\r\n  console.log('清空所有错题记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有错题数量以便记录\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Clearing ${mistakes.length} mistakes from web storage`);\r\n      \r\n      // 清空错题\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      \r\n      // 验证是否成功清空\r\n      const afterClear = await AsyncStorage.getItem('mistakes');\r\n      const afterMistakes = afterClear ? JSON.parse(afterClear) : null;\r\n      console.log('After clear:', afterMistakes);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes in web storage:', error);\r\n      throw error; // 抛出错误以便上层处理\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前错题数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM mistakes;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} mistakes from database`);\r\n          \r\n          // 然后清空错题表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM mistakes;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} mistake records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing mistakes:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有数据（用于重置应用）\r\nexport const resetDatabase = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      // 保留题目数据，但清空收藏和错题记录\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to reset web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 清空收藏和错题表\r\n        tx.executeSql('DELETE FROM favorites;');\r\n        tx.executeSql('DELETE FROM mistakes;');\r\n      }, error => {\r\n        console.error('Error resetting database:', error);\r\n        reject(error);\r\n      }, () => {\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录学习进度\r\nexport const recordStudyProgress = async (data) => {\r\n  const { questionsAnswered, correctCount, examType, date = new Date().toISOString() } = data;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有进度记录\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      let progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 添加新记录\r\n      progress.push({\r\n        id: Date.now().toString(),\r\n        date,\r\n        questionsAnswered,\r\n        correctCount,\r\n        examType,\r\n        accuracy: questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0\r\n      });\r\n      \r\n      // 保存更新后的进度记录\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify(progress));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 检查表是否存在，不存在则创建\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `CREATE TABLE IF NOT EXISTS study_progress (\r\n            id TEXT PRIMARY KEY,\r\n            date TEXT,\r\n            questionsAnswered INTEGER,\r\n            correctCount INTEGER,\r\n            examType TEXT,\r\n            accuracy REAL\r\n          );`\r\n        );\r\n      }, error => {\r\n        console.error('Error creating study_progress table:', error);\r\n        reject(error);\r\n      }, () => {\r\n        // 插入新记录\r\n        db.transaction(tx => {\r\n          const id = Date.now().toString();\r\n          const accuracy = questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0;\r\n          \r\n          tx.executeSql(\r\n            `INSERT INTO study_progress (id, date, questionsAnswered, correctCount, examType, accuracy)\r\n            VALUES (?, ?, ?, ?, ?, ?);`,\r\n            [id, date, questionsAnswered, correctCount, examType, accuracy],\r\n            (_, result) => {\r\n              resolve(true);\r\n            },\r\n            (_, error) => {\r\n              console.error('Error inserting study progress:', error);\r\n              reject(error);\r\n              return false;\r\n            }\r\n          );\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取学习进度统计\r\nexport const getStudyProgressStats = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      const progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 获取考试记录\r\n      const examResultsData = await AsyncStorage.getItem('examResults');\r\n      const examResults = examResultsData ? JSON.parse(examResultsData) : [];\r\n      \r\n      // 计算总计数据\r\n      const totalExams = examResults.length;\r\n      const totalQuestions = examResults.reduce((sum, item) => sum + (item.totalQuestions || 0), 0);\r\n      const totalCorrect = examResults.reduce((sum, item) => sum + (item.correctCount || 0), 0);\r\n      const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n      \r\n      return {\r\n        totalExams,\r\n        totalQuestions,\r\n        totalCorrect,\r\n        averageAccuracy,\r\n        progressHistory: progress.slice(-7) // 最近7条记录\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to get study progress from web storage:', error);\r\n      return {\r\n        totalExams: 0,\r\n        totalQuestions: 0,\r\n        totalCorrect: 0,\r\n        averageAccuracy: 0,\r\n        progressHistory: []\r\n      };\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        // 获取考试记录总计\r\n        tx.executeSql(\r\n          `SELECT \r\n            COUNT(*) as totalExams,\r\n            SUM(totalQuestions) as totalQuestions,\r\n            SUM(correctCount) as totalCorrect\r\n          FROM exam_results;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const stats = rows._array[0];\r\n            const totalExams = stats.totalExams || 0;\r\n            const totalQuestions = stats.totalQuestions || 0;\r\n            const totalCorrect = stats.totalCorrect || 0;\r\n            const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n            \r\n            // 获取最近的7条学习记录\r\n            tx.executeSql(\r\n              `SELECT * FROM study_progress ORDER BY date DESC LIMIT 7;`,\r\n              [],\r\n              (_, { rows }) => {\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: rows._array\r\n                });\r\n              },\r\n              (_, error) => {\r\n                console.error('Error getting study progress history:', error);\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: []\r\n                });\r\n              }\r\n            );\r\n          },\r\n          (_, error) => {\r\n            console.error('Error getting study stats:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清除学习进度记录\r\nexport const clearStudyProgress = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM study_progress;',\r\n          [],\r\n          (_, result) => {\r\n            resolve(true);\r\n          },\r\n          (_, error) => {\r\n            console.error('Error clearing study progress:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 保存考试结果\r\nexport const saveExamResult = (examResult) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // 获取现有的考试结果\r\n        let examResults = [];\r\n        try {\r\n          const storedResults = await AsyncStorage.getItem('examResults');\r\n          if (storedResults) {\r\n            examResults = JSON.parse(storedResults);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing exam results:', error);\r\n        }\r\n        \r\n        // 添加新的考试结果\r\n        const newExamResult = {\r\n          ...examResult,\r\n          id: Date.now() // 生成唯一ID\r\n        };\r\n        examResults.push(newExamResult);\r\n        \r\n        // 保存更新后的结果\r\n        await AsyncStorage.setItem('examResults', JSON.stringify(examResults));\r\n        \r\n        // 更新学习进度\r\n        await updateStudyProgress(\r\n          examResult.answeredQuestions,\r\n          examResult.correctCount,\r\n          examResult.timeSpent\r\n        );\r\n        \r\n        resolve({ insertId: Date.now() });\r\n      } catch (error) {\r\n        console.error('Failed to save exam result to web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const {\r\n        date,\r\n        score,\r\n        timeSpent,\r\n        totalQuestions,\r\n        correctCount,\r\n        incorrectCount,\r\n        answeredQuestions,\r\n        unansweredQuestions,\r\n        isPassed,\r\n        questionResults\r\n      } = examResult;\r\n      \r\n      // 将详细题目结果序列化为JSON字符串\r\n      const detailsJson = JSON.stringify(questionResults || {});\r\n      \r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `INSERT INTO exam_results (\r\n            date, score, timeSpent, totalQuestions, correctCount, \r\n            incorrectCount, answeredQuestions, unansweredQuestions, \r\n            isPassed, details\r\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n          [\r\n            date, \r\n            score, \r\n            timeSpent, \r\n            totalQuestions, \r\n            correctCount, \r\n            incorrectCount, \r\n            answeredQuestions, \r\n            unansweredQuestions, \r\n            isPassed ? 1 : 0, \r\n            detailsJson\r\n          ],\r\n          (_, result) => {\r\n            // 同时更新学习进度表\r\n            updateStudyProgress(\r\n              answeredQuestions, \r\n              correctCount,\r\n              timeSpent\r\n            );\r\n            resolve(result);\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有考试记录\r\nexport const getExamResults = () => {\r\n  const db = getDatabase();\r\n  return new Promise((resolve, reject) => {\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        'SELECT * FROM exam_results ORDER BY date DESC',\r\n        [],\r\n        (_, { rows }) => {\r\n          // 将结果转换为JavaScript对象\r\n          const results = rows._array.map(row => ({\r\n            ...row,\r\n            isPassed: row.isPassed === 1,\r\n            details: JSON.parse(row.details || '{}')\r\n          }));\r\n          resolve(results);\r\n        },\r\n        (_, error) => { reject(error); }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\n// 更新学习进度\r\nexport const updateStudyProgress = (questionsAnswered, correctAnswers, timeSpent) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n        \r\n        // 获取现有的学习进度\r\n        let studyProgress = [];\r\n        try {\r\n          const storedProgress = await AsyncStorage.getItem('studyProgress');\r\n          if (storedProgress) {\r\n            studyProgress = JSON.parse(storedProgress);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing study progress:', error);\r\n        }\r\n        \r\n        // 查找当天的记录\r\n        const todayIndex = studyProgress.findIndex(item => item.date === date);\r\n        \r\n        if (todayIndex >= 0) {\r\n          // 更新现有记录\r\n          studyProgress[todayIndex].questionsAnswered += questionsAnswered;\r\n          studyProgress[todayIndex].correctAnswers += correctAnswers;\r\n          studyProgress[todayIndex].timeSpent += timeSpent;\r\n        } else {\r\n          // 添加新记录\r\n          studyProgress.push({\r\n            date,\r\n            questionsAnswered,\r\n            correctAnswers,\r\n            timeSpent,\r\n            id: Date.now()\r\n          });\r\n        }\r\n        \r\n        // 保存更新后的进度\r\n        await AsyncStorage.setItem('studyProgress', JSON.stringify(studyProgress));\r\n        resolve({ rowsAffected: 1 });\r\n      } catch (error) {\r\n        console.error('Failed to update study progress in web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    const db = getDatabase();\r\n    return new Promise((resolve, reject) => {\r\n      const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n      \r\n      // 首先尝试更新当天的记录\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `UPDATE study_progress SET \r\n            questionsAnswered = questionsAnswered + ?,\r\n            correctAnswers = correctAnswers + ?,\r\n            timeSpent = timeSpent + ?\r\n            WHERE date = ?`,\r\n          [questionsAnswered, correctAnswers, timeSpent, date],\r\n          (_, result) => {\r\n            // 如果没有更新任何记录，则插入新记录\r\n            if (result.rowsAffected === 0) {\r\n              tx.executeSql(\r\n                `INSERT INTO study_progress (\r\n                  date, questionsAnswered, correctAnswers, timeSpent\r\n                ) VALUES (?, ?, ?, ?)`,\r\n                [date, questionsAnswered, correctAnswers, timeSpent],\r\n                (_, insertResult) => { resolve(insertResult); },\r\n                (_, error) => { reject(error); }\r\n              );\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有考试记录\r\nexport const clearExamHistory = async () => {\r\n  console.log('清空所有考试历史记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有考试记录以便记录日志\r\n      const storedResults = await AsyncStorage.getItem('examResults');\r\n      const examResults = storedResults ? JSON.parse(storedResults) : [];\r\n      console.log(`Clearing ${examResults.length} exam results from web storage`);\r\n      \r\n      // 清空考试记录\r\n      await AsyncStorage.setItem('examResults', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前记录数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM exam_results;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} exam records from database`);\r\n          \r\n          // 然后清空表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM exam_results;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} exam records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing exam history:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}; ","import { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\nimport assetDataService from '../utils/assetDataService';\nimport { recordMistake, saveExamResult, updateStudyProgress } from '../utils/database';\nimport { recordMistakesBatch } from '../utils/database';\nimport { getImageProps } from '../utils/styleUtils';\nimport { isPremiumActive } from '../utils/premium';\n\n// 获取设备尺寸\nconst { width, height } = Dimensions.get('window');\nconst isSmallDevice = width < 375;\nconst isMediumDevice = width >= 375 && width < 768;\n\n// 响应式尺寸工具函数\nconst responsiveWidth = percentage => (width * percentage) / 100;\nconst responsiveHeight = percentage => (height * percentage) / 100;\nconst responsiveFontSize = size => {\n  const baseFactor = Math.min(width, height) / 375;\n  // 针对小屏幕设备额外缩小字体\n  const scaleFactor = isSmallDevice ? baseFactor * 0.85 : \n                      isMediumDevice ? baseFactor * 0.9 : baseFactor;\n  return Math.round(size * scaleFactor);\n};\n\n// 考试配置\nconst EXAM_CONFIG = {\n  TOTAL_QUESTIONS: 20,           // 考试总题数\n  TIME_LIMIT: 45 * 60,           // 考试时间限制（秒）\n  PASS_SCORE_PERCENTAGE: 70,     // 通过分数线(百分比)\n};\n\nconst ExamScreen = ({ navigation }) => {\n  const { t, i18n } = useTranslation();\n  \n  // 状态管理\n  const [loading, setLoading] = useState(true);\n  const [examStarted, setExamStarted] = useState(false);\n  const [examFinished, setExamFinished] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [remainingTime, setRemainingTime] = useState(EXAM_CONFIG.TIME_LIMIT);\n  const [results, setResults] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\n  const timerRef = useRef(null);\n\n  // 加载题目\n  useEffect(() => {\n    const loadQuestions = async () => {\n      try {\n        setLoading(true);\n        \n        // 加载所有题目数据，使用当前语言\n        const allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\n        \n        // 获取所有类别\n        const allCategories = await assetDataService.getAllCategories();\n        \n        // 构建类别选项\n        const categoryItems = [\n          { id: 'all', title: '所有题目' },\n          ...allCategories.map(cat => ({\n            id: cat,\n            title: assetDataService.getChineseCategoryName(cat)\n          }))\n        ];\n        \n        setCategories(categoryItems);\n        setQuestions(allQuestions);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading exam questions:', error);\n        setLoading(false);\n      }\n    };\n    \n    loadQuestions();\n    \n    // 组件卸载时清除定时器\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [currentLanguage]); // 添加currentLanguage作为依赖，当语言改变时重新加载题目\n\n  // 处理语言切换\n  const handleLanguageChange = async (language) => {\n    // 更新当前语言\n    setCurrentLanguage(language);\n    i18n.changeLanguage(language);\n    \n    // 如果正在考试中，仅重新加载当前题目的翻译\n    if (examStarted && !examFinished) {\n      try {\n        setLoading(true);\n        \n        // 获取当前考试题目的翻译版本\n        const updatedQuestions = questions.map(q => {\n          // 使用assetDataService获取对应语言的题目\n          if (q.translations && q.translations[language]) {\n            const translation = q.translations[language];\n            return {\n              ...q,\n              question: translation.question,\n              answers: translation.answers,\n              options: translation.answers.map((ans, idx) => ({\n                id: String.fromCharCode(65 + idx), // A, B, C...\n                text: ans.text,\n                isCorrect: ans.correct\n              }))\n            };\n          }\n          // 如果没有对应语言的翻译，保持原样\n          return q;\n        });\n        \n        setQuestions(updatedQuestions);\n      } catch (error) {\n        console.error('Error updating question translations:', error);\n        Alert.alert(\n          '语言切换失败',\n          '更新题目翻译时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      // 如果不在考试中，重新加载所有题目\n      try {\n        setLoading(true);\n        const allQuestions = await assetDataService.loadAllQuestionSets(language);\n        setQuestions(allQuestions);\n      } catch (error) {\n        console.error('Error loading questions for new language:', error);\n        Alert.alert(\n          '加载失败',\n          '加载新语言的题目时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  \n  // 开始考试\n  const startExam = async () => {\n    // 根据类别筛选题目\n    let filteredQuestions = questions;\n    if (selectedCategory !== 'all') {\n      filteredQuestions = questions.filter(q => q.category === selectedCategory);\n    }\n\n    // 随机选择题目\n    const shuffled = [...filteredQuestions].sort(() => 0.5 - Math.random());\n\n    // 按会员状态限制题量\n    let allowedCount = EXAM_CONFIG.TOTAL_QUESTIONS;\n    try {\n      const premium = await isPremiumActive();\n      if (!premium) {\n        allowedCount = Math.min(10, EXAM_CONFIG.TOTAL_QUESTIONS);\n        // 引导升级\n        Alert.alert(\n          '高级功能提示',\n          `当前为免费模式，单次可答 ${allowedCount} 题。开通会员可解锁完整考试与更多功能。`,\n          [\n            { text: '稍后', style: 'cancel' },\n            { text: '去开通', style: 'default', onPress: () => navigation.navigate('Premium') }\n          ]\n        );\n      }\n    } catch (_) {}\n\n    const selected = shuffled.slice(0, allowedCount);\n\n    // 格式化题目数据\n    const formattedQuestions = selected.map((q, index) => ({\n      ...q,\n      examId: index + 1,\n      options: q.answers.map((ans, idx) => ({\n        id: String.fromCharCode(65 + idx), // A, B, C...\n        text: ans.text,\n        isCorrect: ans.correct\n      }))\n    }));\n\n    // 如果题目不足，提示错误\n    if (formattedQuestions.length < allowedCount) {\n      Alert.alert(\n        '题目不足',\n        `当前类别下只有 ${formattedQuestions.length} 道题目，无法开始考试。`,\n        [{ text: '确定', style: 'cancel' }]\n      );\n      return;\n    }\n\n    // 初始化考试\n    setQuestions(formattedQuestions);\n    setCurrentIndex(0);\n    setAnswers({});\n    setRemainingTime(EXAM_CONFIG.TIME_LIMIT);\n    setExamStarted(true);\n    setExamFinished(false);\n\n    // 开始计时器\n    timerRef.current = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev <= 1) {\n          // 时间到，结束考试\n          clearInterval(timerRef.current);\n          finishExam();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // 选择答案\n  const selectAnswer = (questionId, optionId) => {\n    const newAnswers = {\n      ...answers,\n      [questionId]: optionId\n    };\n    setAnswers(newAnswers);\n  };\n\n  // 完成考试\n  const finishExam = async () => {\n    try {\n      console.log('Finishing exam...');\n      \n      if (!questions || questions.length === 0) {\n        console.error('No questions available');\n        Alert.alert('错误', '没有加载到题目数据，无法提交考试');\n        return;\n      }\n      \n      // 先设置状态，立即开始转换到结果界面\n      setExamFinished(true);\n      setExamStarted(false);\n      \n      // 停止计时\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        console.log('Timer stopped');\n      }\n      \n      // 计算结果\n      const answeredQuestions = Object.keys(answers).length;\n      let correctCount = 0;\n      let mistakesCount = 0;\n      const questionResults = {};\n      \n      // 创建一个批量处理错题的数组\n      const mistakesToRecord = [];\n      \n      questions.forEach((question, index) => {\n        if (!question || !question.id) {\n          console.warn(`Invalid question at index ${index}:`, question);\n          return;\n        }\n        \n        const userAnswer = answers[question.id];\n        let correctAnswer = 'A'; // 默认值\n        \n        // 检查题目选项是否存在\n        if (question.options && Array.isArray(question.options)) {\n          const correctOption = question.options.find(opt => opt.isCorrect);\n          if (correctOption) {\n            correctAnswer = correctOption.id;\n          } else {\n            console.warn(`No correct answer found for question ${question.id}`);\n          }\n        } else {\n          console.warn(`Question ${question.id} has invalid options`);\n        }\n        \n        const isCorrect = userAnswer === correctAnswer;\n        \n        if (isCorrect) {\n          correctCount++;\n        } else {\n          // 包含未作答（userAnswer 为空）的情况\n          mistakesCount++;\n          mistakesToRecord.push({\n            id: question.id,\n            userAnswer: userAnswer ?? null\n          });\n        }\n        \n        questionResults[question.id] = {\n          userAnswer,\n          correctAnswer,\n          isCorrect\n        };\n      });\n      \n      // 记录错题（批量，避免并发写入遗漏）\n      if (mistakesToRecord.length > 0) {\n        console.log(`Recording ${mistakesToRecord.length} mistakes (batch)...`);\n        try {\n          await recordMistakesBatch(mistakesToRecord);\n          console.log('All mistakes recorded successfully');\n        } catch (e) {\n          console.error('Error batch recording mistakes:', e);\n          // 回退到逐条写入\n          try {\n            await Promise.all(mistakesToRecord.map(m => recordMistake(m.id, m.userAnswer)));\n          } catch (e2) {\n            console.error('Fallback single record also failed:', e2);\n          }\n        }\n      }\n      \n      const score = questions.length > 0 ? (correctCount / questions.length) * 100 : 0;\n      const timeSpent = EXAM_CONFIG.TIME_LIMIT - remainingTime;\n      const isPassed = score >= EXAM_CONFIG.PASS_SCORE_PERCENTAGE;\n      \n      // 保存结果\n      const examResult = {\n        date: new Date().toISOString(),\n      score,\n        timeSpent,\n        totalQuestions: questions.length,\n        correctCount,\n        incorrectCount: mistakesCount,\n        answeredQuestions,\n        unansweredQuestions: questions.length - answeredQuestions,\n        isPassed,\n        questionResults\n      };\n      \n      console.log('Exam result calculated');\n      \n      // 设置结果状态\n      setResults(examResult);\n      \n      // 保存到数据库\n      try {\n        await saveExamResult(examResult);\n        console.log('Exam result saved to database');\n      } catch (error) {\n        console.error('Failed to save exam result:', error);\n        // 即使保存失败也继续显示结果\n      }\n      \n      // 更新学习进度\n      try {\n        await updateStudyProgress(answeredQuestions, correctCount, timeSpent);\n        console.log('Study progress updated');\n      } catch (error) {\n        console.error('Failed to update study progress:', error);\n      }\n        \n      console.log('Exam finished successfully, showing results');\n    } catch (error) {\n      console.error('Error in finishExam:', error);\n      Alert.alert(\n        '错误',\n        '提交考试结果时发生错误，请重试: ' + error.message,\n        [{ text: '确定', style: 'default' }]\n      );\n    }\n  };\n\n  // 返回首页\n  const goToHome = () => {\n    // 导航到首页并传递考试结果参数\n    if (results) {\n      navigation.navigate('Home', {\n        examCompleted: true,\n        examResults: {\n          score: Math.round(results.score),\n          correctCount: results.correctCount,\n          incorrectCount: results.incorrectCount,\n          date: new Date().toISOString()\n        }\n      });\n    } else {\n      navigation.navigate('Home');\n    }\n  };\n\n  // 查看错题\n  const viewMistakes = () => {\n    navigation.navigate('Mistakes');\n  };\n\n  // 重新考试\n  const restartExam = () => {\n    setExamStarted(false);\n    setExamFinished(false);\n    setAnswers({});\n    setResults(null);\n  };\n\n  // 格式化时间\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // 渲染当前题目\n  const renderCurrentQuestion = () => {\n    const question = questions[currentIndex];\n    if (!question) return null;\n    \n    const userAnswer = answers[question.id];\n    \n    return (\n      <View style={styles.questionContainer}>\n        <View style={styles.questionHeader}>\n          <Text style={styles.questionNumber}>\n            题目 {currentIndex + 1}/{questions.length}\n            </Text>\n            <View style={styles.timerContainer}>\n            <Ionicons name=\"time-outline\" size={responsiveFontSize(18)} color=\"#f57c00\" />\n            <Text style={styles.timerText}>{formatTime(remainingTime)}</Text>\n            </View>\n          </View>\n          \n        {/* 添加语言切换器 */}\n        <QuestionLanguageSwitcher \n          currentLanguage={currentLanguage} \n          onChangeLanguage={handleLanguageChange} \n        />\n        \n        <ScrollView style={styles.questionScrollView} showsVerticalScrollIndicator={true}>\n          <Text style={styles.questionText}>{question.question}</Text>\n          \n          {question.signalImage && (\n            <View style={styles.imageContainer}>\n              <Image \n                source={question.signalImage} \n                {...getImageProps({\n                  ...styles.questionImage,\n                  resizeMode: 'contain'\n                })}\n              />\n            </View>\n          )}\n          \n          <View style={styles.optionsContainer}>\n            {question.options.map((option) => (\n              <TouchableOpacity\n                key={option.id}\n                style={[\n                  styles.optionButton,\n                  userAnswer === option.id && styles.selectedOption,\n                  examFinished && option.isCorrect && styles.correctOption,\n                  examFinished && userAnswer === option.id && !option.isCorrect && styles.incorrectOption\n                ]}\n                onPress={() => !examFinished && selectAnswer(question.id, option.id)}\n                disabled={examFinished}\n              >\n                <Text style={styles.optionLetter}>{option.id}</Text>\n                <Text style={styles.optionText}>{option.text}</Text>\n                \n                {examFinished && (\n                  option.isCorrect ? (\n                    <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(20)} color=\"#4caf50\" style={styles.resultIcon} />\n                  ) : (\n                    userAnswer === option.id && (\n                      <Ionicons name=\"close-circle\" size={responsiveFontSize(20)} color=\"#f44336\" style={styles.resultIcon} />\n                    )\n                  )\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n          \n          <View style={styles.navigationContainer}>\n            <TouchableOpacity\n              style={[styles.navButton, currentIndex === 0 && styles.disabledButton]} \n              onPress={() => {\n                if (currentIndex > 0) setCurrentIndex(currentIndex - 1);\n              }}\n              disabled={currentIndex === 0}\n            >\n              <Ionicons name=\"chevron-back\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              <Text style={styles.navButtonText}>\n                上一题\n              </Text>\n            </TouchableOpacity>\n            \n            {currentIndex < questions.length - 1 ? (\n              <TouchableOpacity\n                style={styles.navButton} \n                onPress={() => setCurrentIndex(currentIndex + 1)}\n              >\n                <Text style={styles.navButtonText}>下一题</Text>\n                <Ionicons name=\"chevron-forward\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                style={[styles.navButton, styles.submitButton]} \n                onPress={finishExam}\n              >\n                <Text style={styles.submitButtonText}>交卷</Text>\n                <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(22)} color=\"#fff\" />\n              </TouchableOpacity>\n            )}\n          </View>\n          \n          {/* 添加足够的底部间距，确保按钮完全可见 */}\n          <View style={{ height: 100 }} />\n        </ScrollView>\n        \n        <View style={styles.progressContainer}>\n          <FlatList\n            horizontal\n            data={questions}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item, index }) => (\n              <TouchableOpacity \n                style={[\n                  styles.progressItem, \n                  index === currentIndex && styles.activeProgressItem,\n                  answers[item.id] && styles.answeredProgressItem\n                ]}\n                onPress={() => setCurrentIndex(index)}\n              >\n                <Text \n                  style={[\n                    styles.progressItemText,\n                    index === currentIndex && styles.activeProgressItemText,\n                    answers[item.id] && styles.answeredProgressItemText\n                  ]}\n                >\n                  {index + 1}\n                </Text>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={styles.progressList}\n          />\n        </View>\n      </View>\n    );\n  };\n  \n  // 渲染考试结果\n  const renderExamResults = () => {\n    if (!results) {\n      console.error('No results available to render');\n    return (\n        <View style={styles.errorContainer}>\n          <Ionicons name=\"alert-circle\" size={responsiveFontSize(50)} color=\"#F44336\" />\n          <Text style={styles.errorText}>考试结果加载失败</Text>\n          <TouchableOpacity style={styles.actionButton} onPress={goToHome}>\n            <Text style={styles.actionButtonText}>返回首页</Text>\n          </TouchableOpacity>\n      </View>\n    );\n  }\n    \n    const {\n      score,\n      timeSpent,\n      totalQuestions,\n      correctCount,\n      incorrectCount,\n      answeredQuestions,\n      unansweredQuestions,\n      isPassed\n    } = results;\n    \n    console.log('Rendering exam results:', { score, isPassed });\n  \n  return (\n      <ScrollView style={styles.resultsScrollView} contentContainerStyle={styles.resultsContent}>\n        <View style={styles.examFinishedBanner}>\n          <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(30)} color=\"#fff\" />\n          <Text style={styles.examFinishedText}>考试已完成</Text>\n        </View>\n        \n        <View style={styles.resultHeader}>\n          <LinearGradient\n            colors={isPassed ? ['#43a047', '#2e7d32'] : ['#e53935', '#c62828']}\n            style={styles.resultBanner}\n          >\n            <Text style={styles.resultText}>\n              {isPassed ? '考试通过' : '考试未通过'}\n            </Text>\n            <View style={styles.scoreCircle}>\n              <Text style={styles.scoreValue}>{Math.round(score)}%</Text>\n            </View>\n          </LinearGradient>\n          \n          <View style={styles.resultStats}>\n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{formatTime(timeSpent)}</Text>\n                <Text style={styles.statLabel}>耗时</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{totalQuestions}</Text>\n                <Text style={styles.statLabel}>总题数</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{answeredQuestions}</Text>\n                <Text style={styles.statLabel}>已答题</Text>\n              </View>\n            </View>\n            \n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#4CAF50' }]}>{correctCount}</Text>\n                <Text style={styles.statLabel}>答对</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#F44336' }]}>{incorrectCount}</Text>\n                <Text style={styles.statLabel}>答错</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#FFC107' }]}>{unansweredQuestions}</Text>\n                <Text style={styles.statLabel}>未答</Text>\n              </View>\n            </View>\n          </View>\n            </View>\n            \n        <View style={styles.resultMessage}>\n          <Text style={styles.messageText}>\n            {isPassed \n              ? '恭喜您通过了考试！您可以查看错题，继续练习提高成绩。' \n              : '很遗憾，您未通过考试。建议查看错题，继续练习，再次尝试。'}\n          </Text>\n        </View>\n        \n        {incorrectCount > 0 && (\n          <View style={styles.mistakesInfoCard}>\n            <View style={styles.mistakesInfoHeader}>\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(22)} color=\"#1976D2\" />\n              <Text style={styles.mistakesInfoTitle}>错题已自动收录</Text>\n            </View>\n            <Text style={styles.mistakesInfoText}>\n              本次考试中的 {incorrectCount} 道错题已被自动收录到错题本，您可以随时通过\"错题本\"进行复习和练习。\n            </Text>\n          </View>\n        )}\n        \n        <View style={styles.resultActions}>\n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={viewMistakes}\n              >\n            <Ionicons name=\"alert-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\n            <Text style={styles.actionButtonText}>查看错题</Text>\n              </TouchableOpacity>\n          \n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={restartExam}\n          >\n            <Ionicons name=\"refresh\" size={responsiveFontSize(20)} color=\"#4CAF50\" />\n            <Text style={styles.actionButtonText}>再考一次</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide, styles.primaryButton]} \n            onPress={goToHome}\n          >\n            <Ionicons name=\"home\" size={responsiveFontSize(20)} color=\"#fff\" />\n            <Text style={[styles.actionButtonText, { color: '#fff' }]}>返回首页</Text>\n              </TouchableOpacity>\n            </View>\n      </ScrollView>\n    );\n  };\n\n  // 渲染类别选择\n  const renderCategoryItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.categoryButton,\n        selectedCategory === item.id && styles.categoryButtonActive\n      ]}\n      onPress={() => setSelectedCategory(item.id)}\n    >\n      <Text \n        style={[\n          styles.categoryButtonText,\n          selectedCategory === item.id && styles.categoryButtonTextActive\n        ]}\n      >\n        {item.title}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  // 渲染考试准备界面\n  const renderExamPreparation = () => {\n    return (\n      <View style={styles.prepContainer}>\n        <View style={styles.examInfoCard}>\n          <Text style={styles.examTitle}>驾照理论考试</Text>\n          <Text style={styles.examDescription}>\n            本次考试共{EXAM_CONFIG.TOTAL_QUESTIONS}道题，时间限制{Math.floor(EXAM_CONFIG.TIME_LIMIT / 60)}分钟，\n            通过分数线为{EXAM_CONFIG.PASS_SCORE_PERCENTAGE}%。请选择考试类别，准备好后点击\"开始考试\"按钮。\n          </Text>\n          \n          <View style={styles.categoriesContainer}>\n            <Text style={styles.sectionTitle}>选择考试类别</Text>\n            <FlatList\n              horizontal\n              data={categories}\n              renderItem={renderCategoryItem}\n              keyExtractor={(item) => item.id}\n              showsHorizontalScrollIndicator={false}\n              contentContainerStyle={styles.categoriesList}\n            />\n          </View>\n          \n          <View style={styles.examRules}>\n            <Text style={styles.ruleTitle}>考试须知：</Text>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>题目为随机选择，每次考试题目不同</Text>\n        </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>可任意切换题目顺序作答</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>达到时间限制后将自动交卷</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>考试记录将被保存，可在首页查看</Text>\n            </View>\n          </View>\n        </View>\n        \n        <TouchableOpacity \n          style={styles.startButton}\n          onPress={startExam}\n        >\n          <Text style={styles.startButtonText}>开始考试</Text>\n          <Ionicons name=\"arrow-forward-circle\" size={responsiveFontSize(20)} color=\"#fff\" />\n        </TouchableOpacity>\n    </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\n        <Text style={styles.loadingText}>加载考试中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\n      \n      {!examStarted && !examFinished && renderExamPreparation()}\n      {examStarted && !examFinished && renderCurrentQuestion()}\n      {examFinished && renderExamResults()}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  prepContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n    justifyContent: 'center',\n  },\n  examInfoCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    padding: responsiveWidth(5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examTitle: {\n    fontSize: responsiveFontSize(20),\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: responsiveHeight(2),\n  },\n  examDescription: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n    marginBottom: responsiveHeight(3),\n    lineHeight: responsiveFontSize(20),\n    textAlign: 'center',\n  },\n  categoriesContainer: {\n    marginVertical: responsiveHeight(2),\n  },\n  sectionTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  categoriesList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  categoryButton: {\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    marginRight: responsiveWidth(2),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  categoryButtonActive: {\n    backgroundColor: '#4c669f',\n  },\n  categoryButtonText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  categoryButtonTextActive: {\n    color: '#fff',\n    fontWeight: '500',\n  },\n  examRules: {\n    marginTop: responsiveHeight(2),\n  },\n  ruleTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  ruleItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1),\n  },\n  ruleText: {\n    fontSize: responsiveFontSize(14),\n    color: '#555',\n    marginLeft: responsiveWidth(2),\n  },\n  startButton: {\n    backgroundColor: '#4CAF50',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: responsiveHeight(1.8),\n    borderRadius: 10,\n    marginTop: responsiveHeight(4),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    marginRight: responsiveWidth(2),\n  },\n  // 考试界面样式\n  questionContainer: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  questionHeader: {\n    backgroundColor: '#4c669f',\n    padding: responsiveWidth(4),\n    paddingTop: Platform.OS === 'android' ? (StatusBar.currentHeight + responsiveHeight(1)) : responsiveHeight(1),\n    paddingBottom: responsiveHeight(2),\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  questionNumber: {\n    color: '#fff',\n    fontSize: responsiveFontSize(15),\n    fontWeight: 'bold',\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    paddingHorizontal: responsiveWidth(3),\n    paddingVertical: responsiveHeight(0.5),\n    borderRadius: 20,\n  },\n  timerText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(1),\n    fontSize: responsiveFontSize(14),\n  },\n  questionText: {\n    fontSize: responsiveFontSize(16),\n    color: '#333',\n    fontWeight: '500',\n    lineHeight: responsiveFontSize(24),\n    padding: responsiveWidth(4),\n  },\n  imageContainer: {\n    alignItems: 'center',\n    marginBottom: responsiveHeight(2),\n    backgroundColor: '#f9f9f9',\n    margin: responsiveWidth(4),\n    padding: responsiveWidth(2),\n    borderRadius: 8,\n  },\n  questionImage: {\n    width: responsiveWidth(65),\n    height: responsiveWidth(65),\n  },\n  optionsContainer: {\n    padding: responsiveWidth(4),\n    paddingTop: 0,\n  },\n  optionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveWidth(3.5),\n    borderRadius: 10,\n    marginBottom: responsiveHeight(1.5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  selectedOption: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n    borderWidth: 1,\n  },\n  correctOption: {\n    backgroundColor: '#d3f2d3',\n    borderColor: '#4caf50',\n    borderWidth: 1,\n  },\n  incorrectOption: {\n    backgroundColor: '#f2d3d3',\n    borderColor: '#f44336',\n    borderWidth: 1,\n  },\n  optionLetter: {\n    fontSize: responsiveFontSize(14),\n    fontWeight: 'bold',\n    color: '#666',\n    marginRight: responsiveWidth(3),\n  },\n  optionText: {\n    fontSize: responsiveFontSize(15),\n    color: '#333',\n    flex: 1,\n    lineHeight: responsiveFontSize(22),\n  },\n  resultIcon: {\n    marginLeft: responsiveWidth(2),\n  },\n  navigationContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: responsiveWidth(4),\n    paddingTop: responsiveHeight(2),\n  },\n  navButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  disabledButton: {\n    backgroundColor: '#f5f5f5',\n  },\n  navButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n  },\n  disabledButtonText: {\n    color: '#ccc',\n  },\n  submitButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: responsiveWidth(5),\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginRight: responsiveWidth(2),\n  },\n  progressContainer: {\n    paddingHorizontal: responsiveWidth(5),\n    paddingBottom: responsiveHeight(2),\n  },\n  progressList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  progressItem: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n    borderRadius: responsiveWidth(5),\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: responsiveWidth(2),\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  activeProgressItem: {\n    backgroundColor: '#4c669f',\n    borderColor: '#3b5998',\n  },\n  answeredProgressItem: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n  },\n  progressItemText: {\n    fontSize: responsiveFontSize(12),\n    fontWeight: '500',\n    color: '#666',\n  },\n  activeProgressItemText: {\n    color: '#fff',\n  },\n  answeredProgressItemText: {\n    color: '#4c669f',\n  },\n  // 结果页样式\n  resultsContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n  },\n  resultsScrollView: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  resultsContent: {\n    padding: responsiveWidth(5),\n    paddingBottom: responsiveHeight(5),\n  },\n  resultHeader: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    overflow: 'hidden',\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  resultBanner: {\n    padding: responsiveHeight(3),\n    alignItems: 'center',\n  },\n  resultText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n    marginBottom: responsiveHeight(2),\n    textAlign: 'center',\n  },\n  scoreCircle: {\n    width: responsiveWidth(25),\n    height: responsiveWidth(25),\n    borderRadius: responsiveWidth(12.5),\n    backgroundColor: 'rgba(255,255,255,0.3)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreValue: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n  },\n  resultStats: {\n    padding: responsiveWidth(5),\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: responsiveHeight(2),\n  },\n  statItem: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  statLabel: {\n    fontSize: responsiveFontSize(12),\n    color: '#666',\n    marginTop: responsiveHeight(0.5),\n  },\n  resultMessage: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  messageText: {\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: responsiveFontSize(24),\n  },\n  resultActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveHeight(1.5),\n    borderRadius: 10,\n    margin: responsiveWidth(1),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n    minWidth: responsiveWidth(28),\n  },\n  actionButtonWide: {\n    minWidth: responsiveWidth(42),\n    marginVertical: responsiveHeight(1),\n  },\n  actionButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginLeft: responsiveWidth(2),\n  },\n  questionScrollView: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: responsiveWidth(4),\n    marginBottom: 10,\n  },\n  bottomPadding: {\n    height: responsiveHeight(2),\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  mistakesInfoCard: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  mistakesInfoHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1.5),\n  },\n  mistakesInfoTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginLeft: responsiveWidth(2),\n  },\n  mistakesInfoText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  primaryButton: {\n    backgroundColor: '#4CAF50',\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  examFinishedBanner: {\n    padding: responsiveHeight(2),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4c669f',\n    borderRadius: 10,\n    marginBottom: responsiveHeight(2),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examFinishedText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(2),\n  },\n});\n\nexport default ExamScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, FlatList, SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { getFavoriteQuestions, removeFromFavorites } from '../utils/database';\r\n\r\n// 模拟收藏数据\r\nconst DUMMY_FAVORITES = [\r\n  {\r\n    id: '1',\r\n    category: '交通规则',\r\n    question: '在捷克，汽车应该在道路的哪一侧行驶？',\r\n    dateAdded: new Date('2023-05-10')\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '交通标志',\r\n    question: '红色三角形内有感叹号的标志表示什么？',\r\n    dateAdded: new Date('2023-05-15')\r\n  },\r\n  {\r\n    id: '9',\r\n    category: '优先通行权',\r\n    question: '在没有交通信号灯的十字路口，谁有优先通行权？',\r\n    dateAdded: new Date('2023-05-20')\r\n  }\r\n];\r\n\r\nconst FavoritesScreen = () => {\r\n  const { t } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  // 加载收藏数据的函数\r\n  const loadFavorites = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading favorites...');\r\n      const data = await getFavoriteQuestions();\r\n      console.log(`Loaded ${data.length} favorite items`);\r\n      \r\n      // 处理日期格式\r\n      const processedData = data.map(item => {\r\n        // 确保dateAdded是Date对象\r\n        let dateAdded;\r\n        try {\r\n          dateAdded = item.dateAdded instanceof Date ? \r\n            item.dateAdded : \r\n            new Date(item.dateAdded || item.timestamp || Date.now());\r\n        } catch (e) {\r\n          console.error('Error parsing date:', e);\r\n          dateAdded = new Date();\r\n        }\r\n        \r\n        return {\r\n          ...item,\r\n          dateAdded: dateAdded\r\n        };\r\n      });\r\n      \r\n      setFavorites(processedData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error);\r\n      setLoading(false);\r\n      setFavorites([]); // 出错时设置为空数组\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFavorites();\r\n    \r\n    // 添加监听器，以便在从问题详情页返回时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadFavorites);\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  // 进入/退出编辑模式\r\n  const toggleEditMode = () => {\r\n    setIsEditing(!isEditing);\r\n    setSelectedItems([]);\r\n  };\r\n  \r\n  // 选择/取消选择项目\r\n  const toggleSelectItem = (id) => {\r\n    if (selectedItems.includes(id)) {\r\n      setSelectedItems(selectedItems.filter(itemId => itemId !== id));\r\n    } else {\r\n      setSelectedItems([...selectedItems, id]);\r\n    }\r\n  };\r\n  \r\n  // 删除选中的收藏\r\n  const deleteSelected = async () => {\r\n    try {\r\n      // 从收藏列表中移除选中项目\r\n      for (const itemId of selectedItems) {\r\n        await removeFromFavorites(itemId);\r\n      }\r\n      // 重新加载收藏数据\r\n      await loadFavorites();\r\n      setSelectedItems([]);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Failed to delete selected favorites:', error);\r\n    }\r\n  };\r\n  \r\n  // 全选/取消全选\r\n  const toggleSelectAll = () => {\r\n    if (selectedItems.length === favorites.length) {\r\n      setSelectedItems([]);\r\n    } else {\r\n      setSelectedItems(favorites.map(item => item.id));\r\n    }\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderFavoriteItem = ({ item }) => {\r\n    // 确保日期格式化正确\r\n    let dateString = '';\r\n    try {\r\n      dateString = item.dateAdded instanceof Date ? \r\n        item.dateAdded.toLocaleDateString() : \r\n        new Date(item.dateAdded || Date.now()).toLocaleDateString();\r\n    } catch (e) {\r\n      console.error('Error formatting date:', e);\r\n      dateString = new Date().toLocaleDateString();\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.favoriteItem,\r\n          isEditing && selectedItems.includes(item.id) && styles.selectedItem\r\n        ]}\r\n        onPress={() => {\r\n          if (isEditing) {\r\n            toggleSelectItem(item.id);\r\n          } else {\r\n            handleQuestionPress(item);\r\n          }\r\n        }}\r\n        onLongPress={toggleEditMode}\r\n      >\r\n        {isEditing && (\r\n          <TouchableOpacity \r\n            style={styles.checkboxContainer} \r\n            onPress={() => toggleSelectItem(item.id)}\r\n          >\r\n            <Ionicons \r\n              name={selectedItems.includes(item.id) ? \"checkbox\" : \"square-outline\"} \r\n              size={24} \r\n              color={selectedItems.includes(item.id) ? \"#0066cc\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={styles.favoriteContent}>\r\n          <View style={styles.favoriteHeader}>\r\n            <Text style={styles.favoriteCategory}>{item.category}</Text>\r\n            <Text style={styles.favoriteDate}>{dateString}</Text>\r\n          </View>\r\n          <Text style={styles.favoriteQuestion}>{item.question}</Text>\r\n          <View style={styles.favoriteActions}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text style={styles.title}>{t('favorites.title')}</Text>\r\n          <Text style={styles.subtitle}>已收藏 {favorites.length} 个题目</Text>\r\n        </View>\r\n        {favorites.length > 0 && (\r\n          <View style={styles.headerButtons}>\r\n            {isEditing ? (\r\n              <>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleSelectAll}\r\n                >\r\n                  <Text style={styles.headerButtonText}>\r\n                    {selectedItems.length === favorites.length ? '取消全选' : '全选'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={[styles.headerButton, styles.deleteButton]} \r\n                  onPress={deleteSelected}\r\n                  disabled={selectedItems.length === 0}\r\n                >\r\n                  <Text style={[styles.headerButtonText, styles.deleteButtonText]}>\r\n                    删除\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleEditMode}\r\n                >\r\n                  <Text style={styles.headerButtonText}>取消</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            ) : (\r\n              <TouchableOpacity \r\n                style={styles.headerButton} \r\n                onPress={toggleEditMode}\r\n              >\r\n                <Text style={styles.headerButtonText}>编辑</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {favorites.length > 0 ? (\r\n        <FlatList\r\n          data={favorites}\r\n          renderItem={renderFavoriteItem}\r\n          keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      ) : (\r\n        <View style={styles.emptyContainer}>\r\n          <Ionicons name=\"heart-outline\" size={80} color=\"#bdbdbd\" />\r\n          <Text style={styles.emptyText}>{t('favorites.noFavorites')}</Text>\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  subtitle: {\r\n    fontSize: 15,\r\n    color: '#666',\r\n  },\r\n  headerButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  headerButton: {\r\n    marginLeft: 10,\r\n    padding: 5,\r\n  },\r\n  headerButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 15,\r\n  },\r\n  deleteButton: {\r\n    marginHorizontal: 10,\r\n  },\r\n  deleteButtonText: {\r\n    color: '#F44336',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  favoriteItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 2,\r\n    elevation: 1,\r\n  },\r\n  selectedItem: {\r\n    backgroundColor: '#f0f8ff',\r\n  },\r\n  checkboxContainer: {\r\n    marginRight: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  favoriteContent: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n  },\r\n  favoriteHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8,\r\n  },\r\n  favoriteCategory: {\r\n    color: '#0066cc',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  favoriteDate: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n  },\r\n  favoriteQuestion: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  favoriteActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f8ff',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n  },\r\n  viewButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 14,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 32,\r\n  },\r\n  emptyText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default FavoritesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Dimensions, Image, Platform, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { getFavoriteQuestions, getMistakes, getStudyProgressStats } from '../utils/database';\r\nimport { createShadow } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n// 计算响应式尺寸\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375; // 基于iPhone 8尺寸计算比例\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  // 确保所有hooks在顶层，并且顺序固定\r\n  const { t } = useTranslation();\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    averageAccuracy: 0\r\n  });\r\n  const [favoritesCount, setFavoritesCount] = useState(0);\r\n  const [mistakesCount, setMistakesCount] = useState(0);\r\n\r\n  // 主要功能入口 - 不使用t函数的方式定义，避免hooks依赖问题\r\n  const features = [\r\n    {\r\n      id: 'browse',\r\n      icon: 'list',\r\n      screen: 'Browse',\r\n      color: '#4286f4'\r\n    },\r\n    {\r\n      id: 'exam',\r\n      icon: 'school',\r\n      screen: 'Exam',\r\n      color: '#2ecc71'\r\n    },\r\n    {\r\n      id: 'favorites',\r\n      icon: 'heart',\r\n      screen: 'Favorites',\r\n      color: '#e74c3c',\r\n      badge: favoritesCount\r\n    },\r\n    {\r\n      id: 'mistakes',\r\n      icon: 'close-circle',\r\n      screen: 'Mistakes',\r\n      color: '#f39c12',\r\n      badge: mistakesCount\r\n    }\r\n  ];\r\n\r\n  // 加载学习统计数据\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    \r\n    const loadStats = async () => {\r\n      try {\r\n        const progressStats = await getStudyProgressStats();\r\n        if (isMounted) {\r\n          setStats({\r\n            totalExams: progressStats.totalExams,\r\n            totalQuestions: progressStats.totalQuestions,\r\n            averageAccuracy: progressStats.averageAccuracy\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load study stats:', error);\r\n      }\r\n    };\r\n    \r\n    const loadFavoritesCount = async () => {\r\n      try {\r\n        const favorites = await getFavoriteQuestions();\r\n        if (isMounted) {\r\n          setFavoritesCount(favorites.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load favorites count:', error);\r\n      }\r\n    };\r\n    \r\n    const loadMistakesCount = async () => {\r\n      try {\r\n        const mistakes = await getMistakes();\r\n        if (isMounted) {\r\n          setMistakesCount(mistakes.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load mistakes count:', error);\r\n      }\r\n    };\r\n    \r\n    // 调用函数\r\n    loadStats();\r\n    loadFavoritesCount();\r\n    loadMistakesCount();\r\n\r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      loadStats();\r\n      loadFavoritesCount();\r\n      loadMistakesCount();\r\n    });\r\n\r\n    // 清理函数\r\n    return () => {\r\n      isMounted = false;\r\n      unsubscribe();\r\n    };\r\n  }, [navigation]); // 稳定的依赖数组\r\n  \r\n  // 检查是否从考试页面返回并带有考试结果\r\n  useEffect(() => {\r\n    const checkExamResults = () => {\r\n      const route = navigation.getState().routes.find(r => r.name === 'Home');\r\n      if (route?.params?.examCompleted) {\r\n        const examResults = route.params.examResults;\r\n        \r\n        // 显示成绩通知\r\n        setTimeout(() => {\r\n          Alert.alert(\r\n            '考试已完成',\r\n            `您的考试成绩: ${examResults.score}%\\n` +\r\n            `答对: ${examResults.correctCount} 题\\n` +\r\n            `答错: ${examResults.incorrectCount} 题\\n\\n` +\r\n            `${examResults.incorrectCount > 0 ? \r\n              '所有错题已自动收录至错题本，可随时复习。' : \r\n              '恭喜您全部答对！'}`,\r\n            [\r\n              { text: '我知道了', style: 'default' },\r\n              { \r\n                text: examResults.incorrectCount > 0 ? '查看错题' : '继续练习', \r\n                onPress: () => examResults.incorrectCount > 0 ? \r\n                  navigation.navigate('Mistakes') : \r\n                  navigation.navigate('Browse'),\r\n                style: 'default'\r\n              }\r\n            ]\r\n          );\r\n        }, 500);\r\n        \r\n        // 清除参数，避免重复显示\r\n        navigation.setParams({ examCompleted: undefined, examResults: undefined });\r\n      }\r\n    };\r\n    \r\n    checkExamResults();\r\n  }, [navigation]);\r\n\r\n  const getFeatureTitle = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseTopic');\r\n      case 'exam': return t('home.startExam');\r\n      case 'favorites': return t('home.favorites');\r\n      case 'mistakes': return t('home.reviewMistakes');\r\n      default: return '';\r\n    }\r\n  };\r\n  \r\n  const getFeatureDescription = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseDescription');\r\n      case 'exam': return t('home.examDescription');\r\n      case 'favorites': return t('home.favoritesDescription');\r\n      case 'mistakes': return t('home.mistakesDescription');\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        {/* 顶部头部区域 */}\r\n        <LinearGradient\r\n          colors={['#4c669f', '#3b5998', '#192f6a']}\r\n          style={styles.headerGradient}\r\n        >\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>{t('home.title')}</Text>\r\n            <Text style={styles.subtitle}>{t('home.subtitle')}</Text>\r\n            <Image \r\n              source={require('../../assets/images/react-logo.png')} \r\n              style={styles.headerImage} \r\n              resizeMode=\"contain\"\r\n            />\r\n          </View>\r\n        </LinearGradient>\r\n\r\n        {/* 功能卡片区 */}\r\n        <View style={styles.featuresContainer}>\r\n          <Text style={styles.sectionTitle}>主要功能</Text>\r\n          <View style={styles.featuresGrid}>\r\n            {features.map((feature) => (\r\n              <TouchableOpacity\r\n                key={feature.id}\r\n                style={[styles.featureCard, { backgroundColor: feature.color }]}\r\n                onPress={() => navigation.navigate(feature.screen)}\r\n                activeOpacity={0.8}\r\n              >\r\n                <View style={styles.featureIconContainer}>\r\n                  <Ionicons name={feature.icon} size={responsiveFontSize(28)} color=\"#fff\" />\r\n                  {feature.badge > 0 && (\r\n                    <View style={styles.badgeContainer}>\r\n                      <Text style={styles.badgeText}>{feature.badge}</Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n                <Text style={styles.featureTitle}>\r\n                  {getFeatureTitle(feature.id)}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        {/* 统计数据卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>{t('home.studyStats')}</Text>\r\n          <TouchableOpacity\r\n            style={styles.statsCard}\r\n            onPress={() => navigation.navigate('StudyProgress')}\r\n            activeOpacity={0.7}\r\n          >\r\n            <View style={styles.statsContent}>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n                <Text style={styles.statLabel}>{t('home.examsTaken')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n                <Text style={styles.statLabel}>{t('home.questionsAnswered')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>\r\n                  {stats.averageAccuracy !== undefined && !isNaN(stats.averageAccuracy) \r\n                    ? `${Math.round(stats.averageAccuracy * 100)}%` \r\n                    : '0%'}\r\n                </Text>\r\n                <Text style={styles.statLabel}>{t('home.accuracy')}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.statsFooter}>\r\n              <Text style={styles.viewMoreText}>查看详细统计</Text>\r\n              <Ionicons name=\"chevron-forward\" size={responsiveFontSize(18)} color=\"#4c669f\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* 考试信息卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>考试须知</Text>\r\n          <View style={styles.infoCard}>\r\n            <View style={styles.infoHeader}>\r\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(24)} color=\"#4c669f\" />\r\n              <Text style={styles.infoTitle}>{t('exam.examInfo')}</Text>\r\n            </View>\r\n            <Text style={styles.infoText}>\r\n              • {t('exam.examInfoLine1')}{\"\\n\"}\r\n              • {t('exam.examInfoLine2')}{\"\\n\"}\r\n              • {t('exam.examInfoLine3')}{\"\\n\"}\r\n              • {t('exam.examInfoLine4')}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight || 0 : 0,\r\n    paddingBottom: responsiveHeight(4),\r\n    borderBottomLeftRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(28),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#e0e0e0',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  headerImage: {\r\n    width: responsiveWidth(30),\r\n    height: responsiveHeight(10),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(5),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  cardSection: {\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresContainer: {\r\n    padding: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: responsiveWidth(2),\r\n  },\r\n  featureCard: {\r\n    width: '48%',\r\n    height: responsiveHeight(15),\r\n    backgroundColor: '#4c669f',\r\n    borderRadius: 16,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(2),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  featureIconContainer: {\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  featureTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  statsCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  statsContent: {\r\n    flexDirection: 'row',\r\n    padding: responsiveWidth(4),\r\n  },\r\n  statItem: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  statValue: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#4c669f',\r\n    marginBottom: responsiveHeight(0.5),\r\n  },\r\n  statLabel: {\r\n    fontSize: responsiveFontSize(12),\r\n    color: '#666',\r\n  },\r\n  statDivider: {\r\n    width: 1,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  statsFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingVertical: responsiveHeight(1.5),\r\n  },\r\n  viewMoreText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#4c669f',\r\n    marginRight: responsiveWidth(1),\r\n    fontWeight: '500',\r\n  },\r\n  infoCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    padding: responsiveWidth(4),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  infoHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  infoTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  infoText: {\r\n    lineHeight: responsiveFontSize(20),\r\n    color: '#444',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  badgeContainer: {\r\n    position: 'absolute',\r\n    top: -8,\r\n    right: -8,\r\n    backgroundColor: '#e74c3c',\r\n    borderRadius: 12,\r\n    minWidth: 20,\r\n    minHeight: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 5,\r\n  },\r\n  badgeText: {\r\n    fontSize: responsiveFontSize(10),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, Platform, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { clearMistakes, getMistakes, removeMistake } from '../utils/database';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = percentage => (width * percentage) / 100;\r\nconst responsiveHeight = percentage => (height * percentage) / 100;\r\nconst responsiveFontSize = size => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst MistakesScreen = ({ navigation }) => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [mistakes, setMistakes] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  \r\n  // 加载错题数据\r\n  useEffect(() => {\r\n    const loadMistakes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 加载所有题目\r\n        const questions = await assetDataService.loadAllQuestionSets();\r\n        setAllQuestions(questions);\r\n        console.log('Loaded questions:', questions.length);\r\n        \r\n        // 加载错题记录\r\n        console.log('Fetching mistake records...');\r\n        const mistakeRecords = await getMistakes();\r\n        console.log('Mistake records loaded:', mistakeRecords ? mistakeRecords.length : 'none');\r\n        \r\n        if (!mistakeRecords || mistakeRecords.length === 0) {\r\n          console.log('No mistakes found');\r\n          setMistakes([]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // 合并错题记录和题目详情\r\n        const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n          if (!mistake || !mistake.questionId) {\r\n            console.warn('Invalid mistake record:', mistake);\r\n            return null;\r\n          }\r\n          \r\n          const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n          \r\n          if (questionDetail) {\r\n            return {\r\n              ...mistake,\r\n              question: questionDetail.question,\r\n              category: questionDetail.category,\r\n              chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n              answers: questionDetail.answers,\r\n              correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n                ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n                : 'A',\r\n              signalImage: questionDetail.signalImage,\r\n              date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n            };\r\n          }\r\n          console.warn('Could not find question details for mistake:', mistake.questionId);\r\n          return null;\r\n        }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n        \r\n        console.log('Processed mistakes with details:', mistakesWithDetails.length);\r\n        \r\n        // 按日期排序，最新的在前面\r\n        mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n        \r\n        setMistakes(mistakesWithDetails);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading mistakes:', error);\r\n        setLoading(false);\r\n        Alert.alert(\r\n          '加载错误',\r\n          '加载错题数据失败: ' + error.message,\r\n          [{ text: '确定', style: 'default' }]\r\n        );\r\n      }\r\n    };\r\n\r\n    loadMistakes();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新\r\n    const unsubscribe = navigation.addListener('focus', loadMistakes);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 删除单个错题\r\n  const handleRemoveMistake = (questionId) => {\r\n    if (!questionId) {\r\n      console.error('Missing questionId for removal');\r\n      return;\r\n    }\r\n    const doRemove = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log(`Removing mistake with ID: ${questionId}`);\r\n        const result = await removeMistake(questionId);\r\n        console.log('Remove result:', result);\r\n        if (result) {\r\n          const updatedRecords = await getMistakes();\r\n          const updatedMistakes = await processMistakes(updatedRecords);\r\n          setMistakes(updatedMistakes);\r\n          console.log(`Reloaded mistakes after removal: ${updatedMistakes.length}`);\r\n        } else {\r\n          console.warn('Failed to remove mistake, reloading data...');\r\n          const updatedMistakes = await getMistakes();\r\n          const mistakesWithDetails = await processMistakes(updatedMistakes);\r\n          setMistakes(mistakesWithDetails);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error removing mistake:', error);\r\n        if (Platform.OS !== 'web') {\r\n          Alert.alert('错误', '删除错题失败，请稍后重试。');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (Platform.OS === 'web') {\r\n      const ok = typeof window !== 'undefined' && window.confirm('确定要从错题列表中删除此题目吗？');\r\n      if (ok) doRemove();\r\n      return;\r\n    }\r\n\r\n    Alert.alert('删除错题','确定要从错题列表中删除此题目吗？',[\r\n      { text: '取消', style: 'cancel' },\r\n      { text: '确定', onPress: doRemove }\r\n    ]);\r\n  };\r\n\r\n  // 添加处理错题数据的辅助函数\r\n  const processMistakes = async (mistakeRecords) => {\r\n    // 加载所有题目\r\n    const questions = await assetDataService.loadAllQuestionSets();\r\n    \r\n    // 合并错题记录和题目详情\r\n    const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n      if (!mistake || !mistake.questionId) {\r\n        console.warn('Invalid mistake record:', mistake);\r\n        return null;\r\n      }\r\n      \r\n      const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n      \r\n      if (questionDetail) {\r\n        return {\r\n          ...mistake,\r\n          question: questionDetail.question,\r\n          category: questionDetail.category,\r\n          chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n          answers: questionDetail.answers,\r\n          correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          signalImage: questionDetail.signalImage,\r\n          date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n        };\r\n      }\r\n      console.warn('Could not find question details for mistake:', mistake.questionId);\r\n      return null;\r\n    }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n    \r\n    // 按日期排序，最新的在前面\r\n    mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n    \r\n    return mistakesWithDetails;\r\n  };\r\n\r\n  // 修改清空所有错题函数\r\n  const handleClearAllMistakes = () => {\r\n    if (mistakes.length === 0) {\r\n      console.log('No mistakes to clear');\r\n      return;\r\n    }\r\n    const doClear = async () => {\r\n      try {\r\n        setLoading(true);\r\n        console.log('Clearing all mistakes');\r\n        await clearMistakes();\r\n        setMistakes([]);\r\n        if (Platform.OS !== 'web') {\r\n          Alert.alert('操作成功', '所有错题记录已清空');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error clearing mistakes:', error);\r\n        try {\r\n          await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n          setMistakes([]);\r\n          if (Platform.OS !== 'web') {\r\n            Alert.alert('操作成功', '所有错题记录已清空');\r\n          }\r\n        } catch (backupError) {\r\n          console.error('Backup clear method also failed:', backupError);\r\n          if (Platform.OS !== 'web') {\r\n            Alert.alert('错误', '清空错题失败，请稍后重试。');\r\n          }\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (Platform.OS === 'web') {\r\n      const ok = typeof window !== 'undefined' && window.confirm('确定要清空所有错题记录吗？此操作不可恢复。');\r\n      if (ok) doClear();\r\n      return;\r\n    }\r\n\r\n    Alert.alert('清空错题','确定要清空所有错题记录吗？此操作不可恢复。',[\r\n      { text: '取消', style: 'cancel' },\r\n      { text: '确定', style: 'destructive', onPress: doClear }\r\n    ]);\r\n  };\r\n\r\n  // 查看错题详情\r\n  const handleViewMistakeDetail = (mistake) => {\r\n    navigation.navigate('QuestionDetail', { questionId: mistake.questionId });\r\n  };\r\n\r\n  // 渲染错题项\r\n  const renderMistakeItem = ({ item }) => {\r\n    // 找出用户选择的答案\r\n    const userAnswerIndex = item.userAnswer ? item.userAnswer.charCodeAt(0) - 65 : -1;\r\n    const userAnswerText = userAnswerIndex >= 0 && item.answers[userAnswerIndex] \r\n      ? item.answers[userAnswerIndex].text \r\n      : '未作答';\r\n    \r\n    // 找出正确答案\r\n    const correctAnswerIndex = item.answers.findIndex(ans => ans.correct);\r\n    const correctAnswerText = correctAnswerIndex >= 0 \r\n      ? `${String.fromCharCode(65 + correctAnswerIndex)}: ${item.answers[correctAnswerIndex].text}` \r\n      : '未知';\r\n    \r\n    return (\r\n      <View style={styles.mistakeItem}>\r\n        <View style={styles.mistakeHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Text style={styles.categoryText}>{item.chineseCategory || item.category}</Text>\r\n          </View>\r\n          <Text style={styles.mistakeDate}>{item.date}</Text>\r\n        </View>\r\n        \r\n        <Text style={styles.mistakeQuestion}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.answerContainer}>\r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.wrongBadge]}>\r\n              <Text style={styles.answerBadgeText}>您的答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{item.userAnswer}: {userAnswerText}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.correctBadge]}>\r\n              <Text style={styles.answerBadgeText}>正确答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{correctAnswerText}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.mistakeActions}>\r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.viewButton]}\r\n            onPress={() => handleViewMistakeDetail(item)}\r\n          >\r\n            <Ionicons name=\"eye\" size={responsiveFontSize(16)} color=\"#4c669f\" />\r\n            <Text style={styles.viewButtonText}>查看详情</Text>\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.deleteButton]}\r\n            onPress={() => handleRemoveMistake(item.questionId)}\r\n          >\r\n            <Ionicons name=\"trash-bin\" size={responsiveFontSize(16)} color=\"#e74c3c\" />\r\n            <Text style={styles.deleteButtonText}>移除</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>错题本</Text>\r\n        <Text style={styles.subtitle}>共{mistakes.length}道错题</Text>\r\n        \r\n        {mistakes.length > 0 && (\r\n          <TouchableOpacity \r\n            style={styles.clearButton} \r\n            onPress={handleClearAllMistakes}\r\n          >\r\n            <Ionicons name=\"trash\" size={responsiveFontSize(18)} color=\"#e74c3c\" />\r\n            <Text style={styles.clearButtonText}>清空</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n          <Text style={styles.loadingText}>加载错题中...</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={mistakes}\r\n          renderItem={renderMistakeItem}\r\n          keyExtractor={(item) => item.questionId.toString()}\r\n          contentContainerStyle={styles.mistakesList}\r\n          showsVerticalScrollIndicator={true}\r\n          ListEmptyComponent={() => (\r\n            <View style={styles.emptyContainer}>\r\n              <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(80)} color=\"#e0e0e0\" />\r\n              <Text style={styles.emptyText}>您还没有错题记录</Text>\r\n              <Text style={styles.emptySubText}>答错的题目会自动记录在这里</Text>\r\n              \r\n              <TouchableOpacity \r\n                style={styles.startExamButton}\r\n                onPress={() => navigation.navigate('Exam')}\r\n              >\r\n                <Text style={styles.startExamText}>开始模拟考试</Text>\r\n                <Ionicons name=\"arrow-forward\" size={responsiveFontSize(16)} color=\"#fff\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginLeft: responsiveWidth(2),\r\n    alignSelf: 'flex-end',\r\n  },\r\n  clearButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff0f0',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 20,\r\n  },\r\n  clearButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  mistakesList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  mistakeItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  mistakeHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeDate: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeQuestion: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  answerContainer: {\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  answerRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  answerBadge: {\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.2),\r\n    borderRadius: 12,\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  wrongBadge: {\r\n    backgroundColor: '#ffebee',\r\n  },\r\n  correctBadge: {\r\n    backgroundColor: '#e8f5e9',\r\n  },\r\n  answerBadgeText: {\r\n    fontSize: responsiveFontSize(11),\r\n    fontWeight: '500',\r\n  },\r\n  answerText: {\r\n    flex: 1,\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#444',\r\n  },\r\n  mistakeActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingTop: responsiveHeight(1.5),\r\n  },\r\n  actionButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.8),\r\n    borderRadius: 20,\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f5ff',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: '#fff0f0',\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  deleteButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(5),\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginTop: responsiveHeight(3),\r\n  },\r\n  emptySubText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#999',\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(5),\r\n    textAlign: 'center',\r\n  },\r\n  startExamButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 25,\r\n  },\r\n  startExamText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: '500',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default MistakesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Dimensions, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { addToFavorites, isQuestionFavorited, recordMistake, removeFromFavorites } from '../utils/database';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst QuestionDetailScreen = ({ route, navigation }) => {\r\n  const { questionId } = route.params;\r\n  const { t, i18n } = useTranslation();\r\n  \r\n  const [question, setQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    await loadQuestion(language);\r\n  };\r\n\r\n  // 加载题目详情\r\n  const loadQuestion = async (language = currentLanguage) => {\r\n    try {\r\n      // 检查questionId是否存在\r\n      if (!questionId) {\r\n        console.error('Question ID is undefined');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // 首先尝试从asset数据中加载题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets(language);\r\n      const assetQuestion = allQuestions.find(q => q.id && q.id.toString() === questionId.toString());\r\n      \r\n      if (assetQuestion) {\r\n        // 转换题目格式以适应UI\r\n        const formattedQuestion = {\r\n          ...assetQuestion,\r\n          options: assetQuestion.answers.map((ans, index) => ({\r\n            id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n            text: ans.text,\r\n            isCorrect: ans.correct\r\n          })),\r\n          correctAnswer: assetQuestion.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + assetQuestion.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          explanation: assetQuestion.explanation || '暂无解析',\r\n          category: assetDataService.getChineseCategoryName(assetQuestion.category)\r\n        };\r\n        \r\n        // 使用signalImage属性\r\n        if (assetQuestion.signalImage) {\r\n          formattedQuestion.signalImage = assetQuestion.signalImage;\r\n        }\r\n        \r\n        setQuestion(formattedQuestion);\r\n        \r\n        // 检查是否已收藏\r\n        const favoriteStatus = await isQuestionFavorited(questionId);\r\n        setIsFavorite(favoriteStatus);\r\n      } else {\r\n        // 如果在asset数据中找不到，则提示错误\r\n        console.error('Question not found in asset data:', questionId);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading question:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 加载数据\r\n  useEffect(() => {\r\n    loadQuestion();\r\n  }, [questionId]);\r\n\r\n  // 选择答案\r\n  const selectOption = (optionId) => {\r\n    if (!showAnswer) {\r\n      setSelectedOption(optionId);\r\n    }\r\n  };\r\n\r\n  // 检查答案\r\n  const checkAnswer = () => {\r\n    if (selectedOption) {\r\n      setShowAnswer(true);\r\n      const isCorrect = selectedOption === question.correctAnswer;\r\n      setIsAnswerCorrect(isCorrect);\r\n      \r\n      // 如果回答错误，记录错题\r\n      if (!isCorrect) {\r\n        recordMistake(questionId, selectedOption);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 下一题\r\n  const nextQuestion = () => {\r\n    // 这里应该加载下一道题，这里简单模拟返回列表\r\n    navigation.goBack();\r\n  };\r\n\r\n  // 切换收藏状态\r\n  const toggleFavorite = async () => {\r\n    try {\r\n      if (isFavorite) {\r\n        await removeFromFavorites(question.id);\r\n      } else {\r\n        await addToFavorites(question.id);\r\n      }\r\n      setIsFavorite(!isFavorite);\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n    }\r\n  };\r\n\r\n  // 渲染选项\r\n  const renderOption = (option) => {\r\n    const isSelected = selectedOption === option.id;\r\n    const isCorrect = question.correctAnswer === option.id;\r\n    \r\n    let optionStyle = styles.option;\r\n    let textStyle = styles.optionText;\r\n    let iconName = 'ellipse-outline';\r\n    let iconColor = '#999';\r\n    \r\n    if (showAnswer) {\r\n      if (isCorrect) {\r\n        optionStyle = [styles.option, styles.correctOption];\r\n        textStyle = [styles.optionText, styles.correctOptionText];\r\n        iconName = 'checkmark-circle';\r\n        iconColor = '#4CAF50';\r\n      } else if (isSelected && !isCorrect) {\r\n        optionStyle = [styles.option, styles.incorrectOption];\r\n        textStyle = [styles.optionText, styles.incorrectOptionText];\r\n        iconName = 'close-circle';\r\n        iconColor = '#F44336';\r\n      }\r\n    } else if (isSelected) {\r\n      optionStyle = [styles.option, styles.selectedOption];\r\n      textStyle = [styles.optionText, styles.selectedOptionText];\r\n      iconName = 'radio-button-on';\r\n      iconColor = '#4c669f';\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={option.id} \r\n        style={optionStyle}\r\n        onPress={() => selectOption(option.id)}\r\n        disabled={showAnswer}\r\n        activeOpacity={0.8}\r\n      >\r\n        <Ionicons name={iconName} size={responsiveFontSize(24)} color={iconColor} style={styles.optionIcon} />\r\n        <Text style={textStyle}>\r\n          {option.id}. {option.text}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题目中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!question) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle-outline\" size={responsiveFontSize(60)} color=\"#F44336\" />\r\n        <Text style={styles.errorText}>题目加载失败</Text>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.backButtonText}>返回上一页</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#4c669f\" />\r\n      \r\n      <LinearGradient\r\n        colors={['#4c669f', '#3b5998', '#192f6a']}\r\n        style={styles.headerGradient}\r\n      >\r\n        <View style={styles.header}>\r\n          <View style={styles.headerTop}>\r\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backBtn}>\r\n              <Ionicons name=\"arrow-back\" size={responsiveFontSize(22)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity onPress={toggleFavorite} style={styles.favoriteButton}>\r\n              <Ionicons \r\n                name={isFavorite ? 'heart' : 'heart-outline'} \r\n                size={responsiveFontSize(22)} \r\n                color={isFavorite ? '#ff6b6b' : '#fff'} \r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          \r\n          <View style={styles.headerInfo}>\r\n            <Text style={styles.categoryText}>{question.category}</Text>\r\n            <Text style={styles.questionIdText}>题目 #{question.id}</Text>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n      \r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        <View style={styles.languageSwitcherContainer}>\r\n          <QuestionLanguageSwitcher \r\n            currentLanguage={currentLanguage} \r\n            onChangeLanguage={handleLanguageChange}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.questionContainer}>\r\n          <Text style={styles.questionText}>{question.question}</Text>\r\n          \r\n          {question.signalImage && (\r\n            <View style={styles.imageContainer}>\r\n              <Image \r\n                source={question.signalImage} \r\n                style={styles.questionImage}\r\n                resizeMode=\"contain\"\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.optionsContainer}>\r\n          {question.options.map(option => renderOption(option))}\r\n        </View>\r\n        \r\n        {showAnswer && (\r\n          <View style={styles.resultContainer}>\r\n            <View style={[\r\n              styles.resultBanner,\r\n              isAnswerCorrect ? styles.correctBanner : styles.incorrectBanner\r\n            ]}>\r\n              <Ionicons \r\n                name={isAnswerCorrect ? 'checkmark-circle' : 'close-circle'} \r\n                size={responsiveFontSize(24)} \r\n                color=\"#fff\" \r\n                style={styles.resultIcon}\r\n              />\r\n              <Text style={styles.resultText}>\r\n                {isAnswerCorrect ? '回答正确！' : '回答错误！'}\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={styles.explanationContainer}>\r\n              <View style={styles.explanationHeader}>\r\n                <Ionicons name=\"information-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\r\n                <Text style={styles.explanationTitle}>解析</Text>\r\n              </View>\r\n              <Text style={styles.explanationText}>{question.explanation}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!showAnswer ? (\r\n            <TouchableOpacity \r\n              style={[styles.button, !selectedOption && styles.buttonDisabled]} \r\n              onPress={checkAnswer}\r\n              disabled={!selectedOption}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>提交答案</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity \r\n              style={[styles.button, styles.nextButton]} \r\n              onPress={nextQuestion}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>下一题</Text>\r\n              <Ionicons name=\"arrow-forward\" size={responsiveFontSize(18)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n  },\r\n  headerTop: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  backBtn: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  headerInfo: {\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  categoryText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#e0e0e0',\r\n  },\r\n  questionIdText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveWidth(1),\r\n  },\r\n  favoriteButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  languageSwitcherContainer: {\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(0.5),\r\n    alignItems: 'center',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#F44336',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  backButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  backButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  questionContainer: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#333',\r\n    fontWeight: '500',\r\n    lineHeight: responsiveFontSize(26),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    backgroundColor: '#f9f9f9',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 8,\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(70),\r\n    height: responsiveWidth(70),\r\n  },\r\n  optionsContainer: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  option: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    padding: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(1.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n    elevation: 1,\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#e3f2fd',\r\n    borderColor: '#4c669f',\r\n    borderWidth: 1,\r\n  },\r\n  correctOption: {\r\n    backgroundColor: '#e8f5e9',\r\n    borderColor: '#4CAF50',\r\n    borderWidth: 1,\r\n  },\r\n  incorrectOption: {\r\n    backgroundColor: '#ffebee',\r\n    borderColor: '#F44336',\r\n    borderWidth: 1,\r\n  },\r\n  optionIcon: {\r\n    marginRight: responsiveWidth(3),\r\n  },\r\n  optionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    flex: 1,\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  selectedOptionText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n  },\r\n  correctOptionText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectOptionText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  resultContainer: {\r\n    marginHorizontal: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  resultBanner: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  correctBanner: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  incorrectBanner: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  resultIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  resultText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n  },\r\n  explanationContainer: {\r\n    backgroundColor: '#fff8e1',\r\n    borderRadius: 10,\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  explanationHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  explanationTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#F57C00',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  explanationText: {\r\n    fontSize: responsiveFontSize(15),\r\n    color: '#5D4037',\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  buttonContainer: {\r\n    padding: responsiveWidth(5),\r\n    paddingTop: responsiveHeight(3),\r\n  },\r\n  button: {\r\n    backgroundColor: '#4c669f',\r\n    padding: responsiveHeight(1.8),\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#B0BEC5',\r\n  },\r\n  nextButton: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default QuestionDetailScreen; ","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { recordStudyProgress } from '../utils/database';\r\n\r\nexport default function ResultScreen({ route, navigation }) {\r\n  const { results, examType, timeSpent } = route.params;\r\n  \r\n  const [isPassed, setIsPassed] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [percentageScore, setPercentageScore] = useState(0);\r\n  \r\n  // 计算成绩\r\n  useEffect(() => {\r\n    if (results) {\r\n      const correctAnswers = results.filter(item => item.isCorrect).length;\r\n      const totalQuestions = results.length;\r\n      \r\n      const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\r\n      setScore(calculatedScore);\r\n      setPercentageScore(correctAnswers / totalQuestions);\r\n      \r\n      // 考试通过标准：80%以上\r\n      setIsPassed(calculatedScore >= 80);\r\n      \r\n      // 记录学习进度\r\n      recordStudyProgress({\r\n        questionsAnswered: totalQuestions,\r\n        correctCount: correctAnswers,\r\n        examType: examType || 'unknown'\r\n      }).catch(error => {\r\n        console.error('Failed to record study progress:', error);\r\n      });\r\n    }\r\n  }, [results, examType]);\r\n  \r\n  // 返回首页\r\n  const goToHome = () => {\r\n    navigation.navigate('Main');\r\n  };\r\n  \r\n  // 重新考试\r\n  const retryExam = () => {\r\n    navigation.navigate('Exam');\r\n  };\r\n  \r\n  // 查看错题\r\n  const viewMistakes = () => {\r\n    navigation.navigate('Mistakes');\r\n  };\r\n  \r\n  // 渲染得分圆环\r\n  const renderScoreCircle = () => {\r\n    return (\r\n      <View style={styles.scoreCircleContainer}>\r\n        <View style={[\r\n          styles.scoreCircle,\r\n          {borderColor: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          <Text style={[\r\n            styles.scoreText,\r\n            {color: isPassed ? '#4CAF50' : '#F44336'}\r\n          ]}>{score}%</Text>\r\n          <Text style={styles.scoreSubtext}>\r\n            {results.filter(item => item.isCorrect).length} / {results.length} 题正确\r\n          </Text>\r\n        </View>\r\n        <Text style={[\r\n          styles.resultText,\r\n          {color: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          {isPassed ? '恭喜，考试通过！' : '很遗憾，考试未通过'}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  // 渲染每题结果\r\n  const renderQuestionResult = ({ item, index }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionItem}\r\n        onPress={() => navigation.navigate('QuestionDetail', { questionId: item.questionId })}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <Text style={styles.questionNumber}>题目 #{index + 1}</Text>\r\n          {item.isCorrect ? (\r\n            <View style={styles.correctBadge}>\r\n              <Ionicons name=\"checkmark\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>正确</Text>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.incorrectBadge}>\r\n              <Ionicons name=\"close\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>错误</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        <Text style={styles.questionText} numberOfLines={2}>{item.question}</Text>\r\n        <View style={styles.answerInfo}>\r\n          <Text style={styles.answerLabel}>\r\n            您的回答: <Text style={item.isCorrect ? styles.correctText : styles.incorrectText}>{item.selectedOption}</Text>\r\n          </Text>\r\n          {!item.isCorrect && (\r\n            <Text style={styles.answerLabel}>\r\n              正确答案: <Text style={styles.correctText}>{item.correctOption}</Text>\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  \r\n  // 渲染统计信息\r\n  const renderStats = () => {\r\n    return (\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"time-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>用时</Text>\r\n          <Text style={styles.statValue}>\r\n            {Math.floor(timeSpent / 60)}分{timeSpent % 60}秒\r\n          </Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"checkmark-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>正确</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => item.isCorrect).length}</Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"close-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>错误</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => !item.isCorrect).length}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>考试结果</Text>\r\n          <Text style={styles.subtitle}>\r\n            {examType === 'full' ? '完整模拟考试' : examType === 'practice' ? '练习模式' : '快速测试'}\r\n          </Text>\r\n        </View>\r\n        \r\n        {renderScoreCircle()}\r\n        {renderStats()}\r\n        \r\n        <View style={styles.resultsContainer}>\r\n          <Text style={styles.sectionTitle}>题目详情</Text>\r\n          <FlatList\r\n            data={results}\r\n            renderItem={renderQuestionResult}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            scrollEnabled={false}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!isPassed ? (\r\n            <TouchableOpacity style={styles.button} onPress={retryExam}>\r\n              <Ionicons name=\"reload\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>重新考试</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity style={styles.button} onPress={goToHome}>\r\n              <Ionicons name=\"home\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>返回首页</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          \r\n          {results.filter(item => !item.isCorrect).length > 0 && (\r\n            <TouchableOpacity style={[styles.button, styles.secondaryButton]} onPress={viewMistakes}>\r\n              <Ionicons name=\"list\" size={20} color=\"#0066cc\" style={styles.buttonIcon} />\r\n              <Text style={styles.secondaryButtonText}>查看错题</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  scoreCircleContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  scoreCircle: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    borderWidth: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  scoreText: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n  },\r\n  scoreSubtext: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  resultText: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginHorizontal: 20,\r\n    justifyContent: 'space-between',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginVertical: 4,\r\n  },\r\n  statValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    marginHorizontal: 20,\r\n    marginTop: 25,\r\n  },\r\n  resultsContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  questionItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginHorizontal: 20,\r\n    marginBottom: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  questionNumber: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  correctBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  incorrectBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#F44336',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  badgeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    marginLeft: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n    marginBottom: 10,\r\n  },\r\n  answerInfo: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#eee',\r\n    paddingTop: 10,\r\n  },\r\n  answerLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  correctText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    paddingTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#0066cc',\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: '#fff',\r\n    borderColor: '#0066cc',\r\n    borderWidth: 1,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 8,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  secondaryButtonText: {\r\n    color: '#0066cc',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  }\r\n}); ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Alert } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n/**\r\n * 修复收藏数据结构问题\r\n * 会尝试重建收藏数据与题目之间的关联\r\n */\r\nexport const repairFavoritesData = async () => {\r\n  try {\r\n    console.log('开始修复收藏数据...');\r\n    \r\n    // 1. 获取现有收藏数据\r\n    const storedFavorites = await AsyncStorage.getItem('favorites');\r\n    const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n    console.log('现有收藏数量:', favorites.length);\r\n    \r\n    // 2. 获取所有题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    console.log('题目总数:', allQuestions.length);\r\n    \r\n    // 3. 重新构建有效的收藏数据\r\n    const validFavorites = [];\r\n    let repaired = 0;\r\n    \r\n    for (const fav of favorites) {\r\n      const questionId = fav.questionId || fav.id;\r\n      \r\n      if (!questionId) continue;\r\n      \r\n      const question = allQuestions.find(q => \r\n        q.id && (q.id.toString() === questionId.toString())\r\n      );\r\n      \r\n      if (question) {\r\n        // 添加有效格式的收藏\r\n        validFavorites.push({\r\n          id: `fav_${question.id}_${Date.now()}`,\r\n          questionId: question.id.toString(),\r\n          dateAdded: fav.dateAdded || Date.now(),\r\n          timestamp: Date.now()\r\n        });\r\n        repaired++;\r\n      }\r\n    }\r\n    \r\n    // 4. 保存修复后的数据\r\n    await AsyncStorage.setItem('favorites', JSON.stringify(validFavorites));\r\n    console.log(`收藏数据修复完成，成功恢复 ${repaired} 个收藏`);\r\n    \r\n    return {\r\n      success: true,\r\n      message: `成功修复 ${repaired} 个收藏数据`\r\n    };\r\n  } catch (error) {\r\n    console.error('修复收藏数据失败:', error);\r\n    return {\r\n      success: false,\r\n      message: error.message \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 修复错题本清空功能\r\n */\r\nexport const ensureCleanMistakes = async () => {\r\n  try {\r\n    console.log('尝试强制清空错题数据...');\r\n    \r\n    // 直接设置空数组到错题存储\r\n    await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '成功清空错题数据'\r\n    };\r\n  } catch (error) {\r\n    console.error('清空错题数据失败:', error);\r\n    return {\r\n      success: false, \r\n      message: error.message\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 一次性修复所有已知问题\r\n */\r\nexport const fixAllIssues = async () => {\r\n  try {\r\n    const results = [];\r\n    \r\n    // 1. 修复收藏功能\r\n    const favResult = await repairFavoritesData();\r\n    results.push(`收藏功能: ${favResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 2. 修复错题本\r\n    const mistakeResult = await ensureCleanMistakes();\r\n    results.push(`错题本: ${mistakeResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 3. 重置学习进度数据，修复NaN%问题\r\n    await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n    results.push('学习进度: 已重置');\r\n    \r\n    console.log('所有问题修复完成:', results);\r\n    \r\n    Alert.alert(\r\n      '修复完成',\r\n      results.join('\\n'),\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('修复问题失败:', error);\r\n    \r\n    Alert.alert(\r\n      '修复失败',\r\n      '修复应用问题时出错: ' + error.message,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return false;\r\n  }\r\n}; ","/**\r\n * JSON修复工具\r\n * \r\n * 用于处理并修复驾考应用中题库JSON文件的格式问题\r\n */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { Alert, Platform } from 'react-native';\r\n\r\n/**\r\n * 处理JSON解析错误并创建修复后的文件\r\n * @returns {Promise<boolean>} 是否成功修复\r\n */\r\nexport const fixJsonErrors = async () => {\r\n  try {\r\n    console.log('开始尝试修复JSON错误...');\r\n    \r\n    // 如果当前是Web环境，则使用不同的方法\r\n    if (Platform.OS === 'web') {\r\n      // 在Web环境中，我们可以通过存储一个标记来优先使用fixed版本的JSON\r\n      await AsyncStorage.setItem('useFixedJson', 'true');\r\n      console.log('已设置Web环境优先使用fixed版本的JSON');\r\n      return true;\r\n    }\r\n    \r\n    // 在原生环境中，我们可以直接复制修复后的文件\r\n    const hasFixedFiles = await checkAndCopyFixedFiles();\r\n    \r\n    if (hasFixedFiles) {\r\n      Alert.alert(\r\n        '修复完成',\r\n        '已成功修复JSON文件格式问题，应用将正常加载所有题目。'\r\n      );\r\n      return true;\r\n    } else {\r\n      Alert.alert(\r\n        '修复失败',\r\n        '无法找到修复后的JSON文件或复制过程中出现错误。'\r\n      );\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('修复JSON错误失败:', error);\r\n    Alert.alert(\r\n      '修复错误',\r\n      `尝试修复JSON文件时出错: ${error.message}`\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 检查并复制修复后的文件\r\n * @returns {Promise<boolean>} 是否成功复制\r\n */\r\nconst checkAndCopyFixedFiles = async () => {\r\n  try {\r\n    if (!FileSystem) {\r\n      console.log('FileSystem API不可用');\r\n      return false;\r\n    }\r\n    \r\n    // 获取数据目录\r\n    const dataDir = FileSystem.documentDirectory + 'assets/data/';\r\n    \r\n    // 创建目录（如果不存在）\r\n    await FileSystem.makeDirectoryAsync(dataDir, { intermediates: true }).catch(() => {});\r\n    \r\n    // 检查是否存在已修复的文件\r\n    const fixedFiles = [];\r\n    for (let i = 0; i <= 5; i++) {\r\n      const fixedFileName = `setofquestions${i}_fixed.json`;\r\n      const fixedFilePath = `${dataDir}${fixedFileName}`;\r\n      \r\n      try {\r\n        const info = await FileSystem.getInfoAsync(fixedFilePath);\r\n        if (info.exists) {\r\n          fixedFiles.push({\r\n            setNumber: i,\r\n            path: fixedFilePath\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(`检查修复文件 ${fixedFileName} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    console.log(`找到 ${fixedFiles.length} 个修复后的文件`);\r\n    \r\n    // 如果没有找到任何修复后的文件，返回失败\r\n    if (fixedFiles.length === 0) {\r\n      return false;\r\n    }\r\n    \r\n    // 复制修复后的文件\r\n    for (const file of fixedFiles) {\r\n      const originalFilePath = `${dataDir}setofquestions${file.setNumber}.json`;\r\n      \r\n      // 备份原始文件\r\n      const backupPath = `${dataDir}setofquestions${file.setNumber}_backup.json`;\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: originalFilePath,\r\n          to: backupPath\r\n        });\r\n        console.log(`已备份原始文件: ${originalFilePath} -> ${backupPath}`);\r\n      } catch (e) {\r\n        console.log(`备份文件 ${originalFilePath} 时出错:`, e);\r\n      }\r\n      \r\n      // 复制修复后的文件到原始位置\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: file.path,\r\n          to: originalFilePath\r\n        });\r\n        console.log(`已复制修复文件: ${file.path} -> ${originalFilePath}`);\r\n      } catch (e) {\r\n        console.error(`复制修复文件到 ${originalFilePath} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('检查和复制修复文件时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 运行所有修复函数\r\n * @returns {Promise<boolean>} 是否所有修复都成功\r\n */\r\nexport const runAllFixes = async () => {\r\n  try {\r\n    console.log('开始运行所有修复...');\r\n    \r\n    // 修复JSON错误\r\n    const jsonFixResult = await fixJsonErrors();\r\n    console.log('JSON修复结果:', jsonFixResult);\r\n    \r\n    // 这里可以添加更多修复函数\r\n    // ...\r\n    \r\n    return jsonFixResult;\r\n  } catch (error) {\r\n    console.error('执行修复时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  fixJsonErrors,\r\n  runAllFixes\r\n}; ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Linking, SafeAreaView, ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View } from 'react-native';\r\nimport { clearExamHistory, clearMistakes, clearStudyProgress, resetDatabase } from '../utils/database';\r\nimport { fixAllIssues } from '../utils/fixFavorites';\r\nimport { runAllFixes } from '../utils/fixJson';\r\n\r\n// 应用信息\r\nconst APP_INFO = {\r\n  version: '1.0.0',\r\n  author: '驾考团队',\r\n  copyright: '© 2025 捷克驾考宝典',\r\n  website: 'https://driving.example.com'\r\n};\r\n\r\n// 支持的语言\r\nconst LANGUAGES = [\r\n  { code: 'zh', name: '中文', flag: '🇨🇳' },\r\n  { code: 'en', name: 'English', flag: '🇬🇧' },\r\n  { code: 'cs', name: 'Čeština', flag: '🇨🇿' },\r\n  { code: 'es', name: 'Español', flag: '🇪🇸' },\r\n];\r\n\r\nconst SettingsScreen = ({ navigation }) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language);\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 加载用户语言设置\r\n    const loadLanguageSettings = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('user-language');\r\n        if (savedLanguage) {\r\n          setSelectedLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language settings:', error);\r\n      }\r\n    };\r\n\r\n    loadLanguageSettings();\r\n  }, []);\r\n\r\n  // 加载设置\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        const notificationsValue = await AsyncStorage.getItem('notificationsEnabled');\r\n        setNotificationsEnabled(notificationsValue === 'true');\r\n        \r\n        const darkModeValue = await AsyncStorage.getItem('darkModeEnabled');\r\n        setDarkModeEnabled(darkModeValue === 'true');\r\n      } catch (error) {\r\n        console.error('Failed to load settings', error);\r\n      }\r\n    };\r\n    \r\n    loadSettings();\r\n  }, []);\r\n\r\n  // 更改语言\r\n  const changeLanguage = async (langCode) => {\r\n    try {\r\n      await AsyncStorage.setItem('user-language', langCode);\r\n      i18n.changeLanguage(langCode);\r\n      setSelectedLanguage(langCode);\r\n      \r\n      // 提示用户需要重启应用\r\n      Alert.alert(\r\n        '语言已更改',\r\n        '请重启应用以完成语言切换',\r\n        [{ text: '确定', style: 'default' }]\r\n      );\r\n    } catch (error) {\r\n      console.error('Error saving language setting:', error);\r\n    }\r\n  };\r\n\r\n  // 切换通知\r\n  const toggleNotifications = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('notificationsEnabled', value.toString());\r\n      setNotificationsEnabled(value);\r\n      \r\n      if (value) {\r\n        Alert.alert('通知已启用', '你将会收到每日学习提醒');\r\n      } else {\r\n        Alert.alert('通知已禁用', '你将不会收到学习提醒');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save notification setting', error);\r\n    }\r\n  };\r\n  \r\n  // 切换暗黑模式\r\n  const toggleDarkMode = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('darkModeEnabled', value.toString());\r\n      setDarkModeEnabled(value);\r\n      \r\n      Alert.alert(\r\n        value ? '暗黑模式已启用' : '暗黑模式已禁用',\r\n        value ? '界面将切换为暗色主题，重启应用后生效' : '界面将切换为亮色主题，重启应用后生效'\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to save dark mode setting', error);\r\n    }\r\n  };\r\n\r\n  // 清除收藏数据\r\n  const clearFavorites = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      Alert.alert('收藏已清空', '所有收藏记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear favorites:', error);\r\n      Alert.alert('操作失败', '清空收藏记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除错题记录\r\n  const clearMistakeRecords = async () => {\r\n    try {\r\n      await clearMistakes();\r\n      Alert.alert('错题已清空', '所有错题记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes:', error);\r\n      Alert.alert('操作失败', '清空错题记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除考试历史\r\n  const clearExamRecords = async () => {\r\n    try {\r\n      await clearExamHistory();\r\n      await clearStudyProgress();\r\n      Alert.alert('考试记录已清空', '所有考试历史和学习进度已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history:', error);\r\n      Alert.alert('操作失败', '清空考试记录失败，请稍后重试');\r\n    }\r\n  };\r\n\r\n  // 重置所有数据\r\n  const handleResetData = () => {\r\n    Alert.alert(\r\n      t('settings.resetData'),\r\n      t('settings.resetConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              // 重置所有数据库\r\n              await resetDatabase();\r\n              // 清空学习进度和考试记录\r\n              await clearStudyProgress();\r\n              await clearExamHistory();\r\n              \r\n              Alert.alert(t('common.success'), '应用数据已重置，重启应用后生效');\r\n            } catch (error) {\r\n              console.error('Error resetting data:', error);\r\n              Alert.alert(t('common.error'), error.message);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 显示应用信息\r\n  const showAppInfo = () => {\r\n    Alert.alert(\r\n      '应用信息',\r\n      `捷克驾考宝典\\n版本: ${APP_INFO.version}\\n${APP_INFO.copyright}\\n\\n这是一款帮助用户备考捷克驾照考试的应用。提供模拟考试、题库浏览、错题收集等功能。`,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n  };\r\n  \r\n  // 前往评分\r\n  const goToRating = () => {\r\n    Alert.alert(\r\n      '评分应用',\r\n      '感谢您的使用！您的评分和反馈是我们改进的动力。',\r\n      [\r\n        { text: '稍后再说', style: 'cancel' },\r\n        { text: '去评分', onPress: () => {\r\n          // 这里应替换为实际应用商店链接\r\n          Linking.openURL('https://play.google.com/store');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 查看隐私政策\r\n  const viewPrivacyPolicy = () => {\r\n    Alert.alert(\r\n      '隐私政策',\r\n      '我们重视用户隐私。应用收集的所有数据仅用于提升使用体验，不会与第三方共享。详见完整隐私政策。',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { text: '查看完整政策', onPress: () => {\r\n          // 这里替换为实际政策网址\r\n          Linking.openURL('https://example.com/privacy');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 打开会员中心\r\n  const openPremiumCenter = () => {\r\n    navigation.navigate('Premium');\r\n  };\r\n\r\n  // 添加修复应用功能\r\n  const handleFixApp = () => {\r\n    Alert.alert(\r\n      '应用修复',\r\n      '此功能将尝试修复应用中的已知问题，包括收藏、错题和JSON数据等。是否继续？',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        {\r\n          text: '确定',\r\n          style: 'default',\r\n          onPress: async () => {\r\n            try {\r\n              // 运行全部修复\r\n              await Promise.all([\r\n                fixAllIssues(), // 修复收藏和错题\r\n                runAllFixes()   // 修复JSON错误\r\n              ]);\r\n              \r\n              // 通知用户\r\n              Alert.alert('修复完成', '应用已完成所有可能的修复，建议重启应用以确保所有更改生效。');\r\n            } catch (error) {\r\n              console.error('修复应用时出错:', error);\r\n              Alert.alert('修复失败', `修复过程中出现错误: ${error.message}`);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 渲染语言选项\r\n  const renderLanguageOption = (language) => {\r\n    const isSelected = selectedLanguage === language.code;\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={language.code} \r\n        style={[styles.settingOption, isSelected && styles.selectedOption]}\r\n        onPress={() => changeLanguage(language.code)}\r\n      >\r\n        <View style={styles.languageInfo}>\r\n          <Text style={styles.languageFlag}>{language.flag}</Text>\r\n          <Text style={styles.languageName}>{language.name}</Text>\r\n        </View>\r\n        {isSelected && <Ionicons name=\"checkmark-circle\" size={24} color=\"#2196F3\" />}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('settings.title')}</Text>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>{t('settings.language')}</Text>\r\n          <View style={styles.sectionContent}>\r\n            {LANGUAGES.map(language => renderLanguageOption(language))}\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>应用设置</Text>\r\n          <View style={styles.sectionContent}>\r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"notifications-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>每日提醒</Text>\r\n                  <Text style={styles.settingDescription}>接收每日学习提醒</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={notificationsEnabled}\r\n                onValueChange={toggleNotifications}\r\n                trackColor={{ false: '#d9d9d9', true: '#4CAF50' }}\r\n                thumbColor={notificationsEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n            \r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"moon-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>暗黑模式</Text>\r\n                  <Text style={styles.settingDescription}>使用夜间模式保护眼睛</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={darkModeEnabled}\r\n                onValueChange={toggleDarkMode}\r\n                trackColor={{ false: '#d9d9d9', true: '#0066cc' }}\r\n                thumbColor={darkModeEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>关于</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem} onPress={showAppInfo}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"information-circle-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>应用信息</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem} onPress={goToRating}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"star-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>评分应用</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem} onPress={viewPrivacyPolicy}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"lock-closed-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>隐私政策</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity style={styles.optionItem} onPress={openPremiumCenter}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"medal-outline\" size={24} color=\"#c084fc\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>会员中心</Text>\r\n                  <Text style={styles.settingDescription}>开通高级功能与权益</Text>\r\n                </View>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <View style={styles.versionInfo}>\r\n              <Text style={styles.versionText}>捷克驾考宝典 v1.0.0</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>开发者选项</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem} onPress={handleFixApp}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"construct-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>修复应用问题</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.dangerSection}>\r\n          <TouchableOpacity style={styles.dangerButton} onPress={handleResetData}>\r\n            <Text style={styles.dangerButtonText}>{t('settings.resetData')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 32,\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  section: {\r\n    backgroundColor: '#fff',\r\n    marginTop: 20,\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f0f0f0',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    margin: 16,\r\n  },\r\n  sectionContent: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  settingOption: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#E3F2FD',\r\n  },\r\n  optionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  infoLabel: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoValue: {\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  dangerSection: {\r\n    padding: 16,\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  dangerButton: {\r\n    backgroundColor: '#F44336',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  dangerButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  languageInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  languageFlag: {\r\n    fontSize: 22,\r\n    marginRight: 15,\r\n  },\r\n  languageName: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  settingInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  settingIcon: {\r\n    marginRight: 15,\r\n  },\r\n  settingTitle: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingDescription: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    marginTop: 3,\r\n  },\r\n  versionInfo: {\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  versionText: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n  }\r\n});\r\n\r\nexport default SettingsScreen; ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport { BarChart, LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40;\r\n\r\nexport const AccuracyLineChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 检查数据并确保至少有一个有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.accuracy === 'number'\r\n  );\r\n  \r\n  // 如果没有足够数据，显示提示信息\r\n  if (validProgress.length < 1) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.notEnoughData')}</Text>\r\n        <Text style={styles.noDataSubtext}>至少需要2次考试记录才能显示趋势图</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近7条记录\r\n  const recentProgress = validProgress.slice(0, 7).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保accuracy值有效\r\n  const accuracyData = recentProgress.map(record => {\r\n    // 处理无效值的情况\r\n    if (record.accuracy === undefined || record.accuracy === null || isNaN(record.accuracy)) {\r\n      return 0;\r\n    }\r\n    return Math.round(record.accuracy * 100);\r\n  });\r\n  \r\n  // 如果只有一条记录，复制一份以便显示图表\r\n  if (accuracyData.length === 1) {\r\n    labels.push('#2');\r\n    accuracyData.push(accuracyData[0]);\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: accuracyData,  // 已经确保是有效数字\r\n        color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n        strokeWidth: 2\r\n      }\r\n    ],\r\n    legend: [t('progress.accuracy')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    propsForDots: {\r\n      r: '6',\r\n      strokeWidth: '2',\r\n      stroke: '#0066cc'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.accuracyTrend')}</Text>\r\n      <LineChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        bezier\r\n        style={styles.chart}\r\n        yAxisSuffix=\"%\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const QuestionCountBarChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 过滤有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.questionsAnswered === 'number'\r\n  );\r\n  \r\n  // 如果没有数据，显示占位符\r\n  if (validProgress.length === 0) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.noData')}</Text>\r\n        <Text style={styles.noDataSubtext}>完成考试后会显示题目统计</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近5条记录\r\n  const recentProgress = validProgress.slice(0, 5).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保数据有效\r\n  const questionCounts = recentProgress.map(record => {\r\n    const count = record.questionsAnswered;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n  \r\n  const correctCounts = recentProgress.map(record => {\r\n    const count = record.correctCount;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: questionCounts,\r\n        color: (opacity = 1) => `rgba(31, 97, 141, ${opacity})`,\r\n      },\r\n      {\r\n        data: correctCounts,\r\n        color: (opacity = 1) => `rgba(46, 204, 113, ${opacity})`,\r\n      }\r\n    ],\r\n    legend: [t('progress.totalQuestions'), t('progress.correct')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    barPercentage: 0.7\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.questionStats')}</Text>\r\n      <BarChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        style={styles.chart}\r\n        fromZero\r\n        showValuesOnTopOfBars\r\n        withInnerLines={false}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  chartContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 10\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  noDataContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n    height: 220,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  noDataText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  noDataSubtext: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    ActivityIndicator,\r\n    Alert,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { AccuracyLineChart, QuestionCountBarChart } from '../components/ProgressChart';\r\nimport { clearExamHistory, clearStudyProgress, getStudyProgressStats } from '../utils/database';\r\n\r\nexport default function StudyProgressScreen({ navigation }) {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    totalCorrect: 0,\r\n    averageAccuracy: 0,\r\n    progressHistory: []\r\n  });\r\n\r\n  // 加载学习进度数据\r\n  useEffect(() => {\r\n    loadProgressData();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadProgressData);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 加载进度数据\r\n  const loadProgressData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const progressStats = await getStudyProgressStats();\r\n      console.log('Loaded progress stats:', progressStats);\r\n      setStats(progressStats);\r\n    } catch (error) {\r\n      console.error('Failed to load progress data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除学习记录和考试历史\r\n  const handleClearProgress = () => {\r\n    Alert.alert(\r\n      t('settings.resetConfirm'),\r\n      t('progress.clearProgressConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              // 清空学习进度\r\n              await clearStudyProgress();\r\n              // 清空考试历史\r\n              await clearExamHistory();\r\n              // 重新加载数据\r\n              await loadProgressData();\r\n              Alert.alert(t('common.success'), t('progress.clearProgressSuccess'));\r\n            } catch (error) {\r\n              console.error('Failed to clear progress:', error);\r\n              Alert.alert(t('common.error'), t('progress.clearProgressError'));\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 格式化日期\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n  };\r\n\r\n  // 格式化正确率显示\r\n  const formatAccuracy = (accuracy) => {\r\n    if (accuracy === undefined || accuracy === null || isNaN(accuracy)) {\r\n      return '0%';\r\n    }\r\n    return `${Math.round(accuracy * 100)}%`;\r\n  };\r\n\r\n  // 渲染进度历史记录\r\n  const renderProgressHistory = () => {\r\n    if (stats.progressHistory.length === 0) {\r\n      return (\r\n        <View style={styles.emptyState}>\r\n          <Ionicons name=\"bar-chart-outline\" size={60} color=\"#ccc\" />\r\n          <Text style={styles.emptyStateText}>{t('progress.noHistory')}</Text>\r\n          <Text style={styles.emptyStateSubtext}>{t('progress.startExam')}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.historyContainer}>\r\n        {stats.progressHistory.map((item, index) => {\r\n          // 确保正确率值有效\r\n          const accuracy = item.accuracy !== undefined && !isNaN(item.accuracy) \r\n            ? item.accuracy \r\n            : 0;\r\n            \r\n          return (\r\n            <View key={item.id || index} style={styles.historyItem}>\r\n              <View style={styles.historyHeader}>\r\n                <Text style={styles.historyDate}>{formatDate(item.date)}</Text>\r\n                <View style={[\r\n                  styles.examTypeBadge,\r\n                  { backgroundColor: getExamTypeColor(item.examType) }\r\n                ]}>\r\n                  <Text style={styles.examTypeText}>{getExamTypeLabel(item.examType)}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.historyStats}>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.questionsAnswered || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.questions')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.correctCount || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.correct')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{formatAccuracy(accuracy)}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.accuracy')}</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // 获取考试类型颜色\r\n  const getExamTypeColor = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return '#4CAF50';\r\n      case 'practice':\r\n        return '#2196F3';\r\n      case 'quick':\r\n        return '#FF9800';\r\n      case 'custom':\r\n        return '#9C27B0';\r\n      default:\r\n        return '#757575';\r\n    }\r\n  };\r\n\r\n  // 获取考试类型标签\r\n  const getExamTypeLabel = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return t('exam.fullExam');\r\n      case 'practice':\r\n        return t('exam.practiceMode');\r\n      case 'quick':\r\n        return t('exam.quickTest');\r\n      case 'custom':\r\n        return t('exam.customExam');\r\n      default:\r\n        return t('exam.exam');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('progress.title')}</Text>\r\n        </View>\r\n\r\n        <View style={styles.statsOverviewContainer}>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"school-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalExams')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"help-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalQuestions')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{formatAccuracy(stats.averageAccuracy)}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.averageAccuracy')}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* 准确率趋势图 */}\r\n        {stats.progressHistory.length > 0 && (\r\n          <View style={styles.chartsContainer}>\r\n            <AccuracyLineChart progressHistory={stats.progressHistory} />\r\n            <QuestionCountBarChart progressHistory={stats.progressHistory} />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.sectionContainer}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>{t('progress.recentActivity')}</Text>\r\n            {stats.progressHistory.length > 0 && (\r\n              <TouchableOpacity onPress={handleClearProgress}>\r\n                <Text style={styles.clearButton}>{t('progress.clearHistory')}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          {renderProgressHistory()}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  statsOverviewContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 15,\r\n    marginBottom: 20,\r\n  },\r\n  statCard: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statValue: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginVertical: 5,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  chartsContainer: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 15,\r\n  },\r\n  sectionContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  clearButton: {\r\n    color: '#F44336',\r\n    fontSize: 14,\r\n  },\r\n  emptyState: {\r\n    alignItems: 'center',\r\n    padding: 30,\r\n  },\r\n  emptyStateText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyStateSubtext: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n  },\r\n  historyContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  historyItem: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n    paddingVertical: 12,\r\n  },\r\n  historyHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  historyDate: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  examTypeBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 3,\r\n    borderRadius: 12,\r\n  },\r\n  examTypeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  historyStats: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  historyStat: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  historyStatValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  historyStatLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  }\r\n}); ","import Constants from 'expo-constants';\r\n\r\nexport function getPaymentConfig() {\r\n  // expo SDK 49: Constants.expoConfig?.extra；旧版可能是 Constants.manifest?.extra\r\n  const extra = (Constants?.expoConfig && Constants.expoConfig.extra) || (Constants?.manifest && Constants.manifest.extra) || {};\r\n  const payments = extra.payments || {};\r\n  return {\r\n    createOrderUrl: payments.createOrderUrl || '',\r\n    checkStatusUrl: payments.checkStatusUrl || '',\r\n    paypalMeUrl: payments.paypalMeUrl || '',\r\n    // 可扩展：通知回调、签名等\r\n  };\r\n} ","import { Linking, Platform } from 'react-native';\r\nimport { setPremiumStatus, PremiumPlans } from '../utils/premium';\r\nimport { getPaymentConfig } from '../config/payments';\r\n\r\n/**\r\n * 说明：真实支付需后端统一下单与回调校验。\r\n * 客户端：createOrder -> open payUrl -> poll checkStatus -> markPaid\r\n */\r\n\r\nexport const PayChannels = {\r\n  ALIPAY: 'alipay',\r\n  WECHAT: 'wechat',\r\n  PAYPAL: 'paypal',\r\n};\r\n\r\nexport const ProductSkus = {\r\n  PRO_MONTHLY: 'pro_monthly',\r\n  PRO_YEARLY: 'pro_yearly',\r\n  LIFETIME: 'lifetime',\r\n};\r\n\r\nexport function skuToPlan(sku) {\r\n  if (sku === ProductSkus.LIFETIME) return PremiumPlans.LIFETIME;\r\n  if (sku === ProductSkus.PRO_YEARLY) return PremiumPlans.PRO_YEARLY;\r\n  return PremiumPlans.PRO_MONTHLY;\r\n}\r\n\r\nexport async function createOrder(channel, sku) {\r\n  const cfg = getPaymentConfig();\r\n  if (!cfg.createOrderUrl) throw new Error('缺少 createOrderUrl 配置');\r\n  const resp = await fetch(cfg.createOrderUrl, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ channel, sku, platform: Platform.OS })\r\n  });\r\n  if (!resp.ok) throw new Error('创建订单失败');\r\n  const data = await resp.json();\r\n  if (!data?.orderId || !data?.payUrl) throw new Error('返回数据缺失');\r\n  return data;\r\n}\r\n\r\nexport async function pollOrderPaid(orderId, { intervalMs = 2000, timeoutMs = 180000 } = {}) {\r\n  const cfg = getPaymentConfig();\r\n  if (!cfg.checkStatusUrl) throw new Error('缺少 checkStatusUrl 配置');\r\n  const start = Date.now();\r\n  while (Date.now() - start < timeoutMs) {\r\n    const resp = await fetch(`${cfg.checkStatusUrl}?orderId=${encodeURIComponent(orderId)}`);\r\n    if (resp.ok) {\r\n      const data = await resp.json();\r\n      if (data?.status === 'PAID') return true;\r\n      if (data?.status === 'FAILED') throw new Error('支付失败');\r\n    }\r\n    await new Promise(r => setTimeout(r, intervalMs));\r\n  }\r\n  throw new Error('支付验证超时');\r\n}\r\n\r\nexport function buildPayUrl(channel, sku, extra = {}) {\r\n  const base = channel === PayChannels.ALIPAY\r\n    ? 'https://your-domain.com/pay/alipay?sku='\r\n    : channel === PayChannels.WECHAT\r\n    ? 'https://your-domain.com/pay/wechat?sku='\r\n    : 'https://your-domain.com/pay/paypal?sku=';\r\n  const params = new URLSearchParams({ sku, ...extra }).toString();\r\n  return `${base}${encodeURIComponent(sku)}&${params}`;\r\n}\r\n\r\nexport function buildPaypalMeUrl(amountCny = 299) {\r\n  const cfg = getPaymentConfig();\r\n  // 允许直接提供完整 paypal.me 链接；若无则简单拼接\r\n  if (cfg.paypalMeUrl) return cfg.paypalMeUrl;\r\n  return `https://paypal.me/yourname/${amountCny}`;\r\n}\r\n\r\nexport async function launchPayment(channel, sku, extra = {}) {\r\n  try {\r\n    const order = await createOrder(channel, sku);\r\n    if (order?.payUrl) await Linking.openURL(order.payUrl);\r\n    return order;\r\n  } catch (e) {\r\n    // 渠道回退\r\n    if (channel === PayChannels.PAYPAL) {\r\n      const url = buildPaypalMeUrl(299);\r\n      await Linking.openURL(url);\r\n      return { orderId: undefined, payUrl: url };\r\n    }\r\n    const url = buildPayUrl(channel, sku, extra);\r\n    await Linking.openURL(url);\r\n    return { orderId: undefined, payUrl: url };\r\n  }\r\n}\r\n\r\nexport async function markPaidLocally(sku) {\r\n  const now = Date.now();\r\n  const plan = skuToPlan(sku);\r\n  let expiresAt = undefined;\r\n  if (plan === PremiumPlans.PRO_MONTHLY) {\r\n    expiresAt = now + 30 * 24 * 60 * 60 * 1000;\r\n  } else if (plan === PremiumPlans.PRO_YEARLY) {\r\n    expiresAt = now + 365 * 24 * 60 * 60 * 1000;\r\n  }\r\n  return setPremiumStatus({ plan, activatedAt: now, ...(expiresAt ? { expiresAt } : {}), source: 'server_verified' });\r\n}\r\n\r\nexport function getQrPayload(channel, sku, extra = {}) {\r\n  return buildPayUrl(channel, sku, { via: 'qr', ...extra });\r\n} ","/* 离线签名兑换码验证（Web前端） */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Platform } from 'react-native';\r\nimport { getOrCreateDeviceId, PremiumPlans, setPremiumStatus } from './premium';\r\n\r\nconst USED_CODES_KEY = 'redeem-used-signed:v1';\r\n\r\nexport const PUBLIC_KEY_PEM = `-----BEGIN PUBLIC KEY-----\r\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiaEyZVlcKOJkcLm4e0yh\r\n8+X0vE1XHEwu51VbAmHvmoLlCCyirUDplY1s7kY4EI/B9lEWxK9zaN8cua2dA6aL\r\nt0xmlP7kJj4XVJEHpLnJVC5tPRVnOHL5BX1c4wBRD8BSGwm13W61pVjAh74ZxbVv\r\nK31RgJfwZJ9uPNICCTErF7PGxuxTSwJieR/B+U3CBJv+JheiHgBTaqBLlBtbLtsM\r\nXq/sX69N8KzdiCcDqEtEgHjOfVPxvhM97xDkl2ZyVgagn9WgKVdhYpID+B2dmmIC\r\n4uqMFsZtssSCR1LtypIuTo3syECiElcwBJD8cODq7fV6Hg+bbE3I9RqUOWGhL82H\r\npwIDAQAB\r\n-----END PUBLIC KEY-----`;\r\n\r\nfunction base64urlToUint8Array(base64url) {\r\n  const pad = '='.repeat((4 - (base64url.length % 4)) % 4);\r\n  const b64 = base64url.replace(/-/g, '+').replace(/_/g, '/') + pad;\r\n  const binary = typeof atob === 'function' ? atob(b64) : Buffer.from(b64, 'base64').toString('binary');\r\n  const bytes = new Uint8Array(binary.length);\r\n  for (let i = 0; i < binary.length; i++) bytes[i] = binary.charCodeAt(i);\r\n  return bytes;\r\n}\r\n\r\nfunction base64ToUint8Array(b64) {\r\n  const binary = atob(b64);\r\n  const bytes = new Uint8Array(binary.length);\r\n  for (let i = 0; i < binary.length; i++) bytes[i] = binary.charCodeAt(i);\r\n  return bytes;\r\n}\r\n\r\nfunction pemToArrayBuffer(pem) {\r\n  // 去掉头尾与所有空白\r\n  const base64 = pem.replace(/-----BEGIN PUBLIC KEY-----/g, '')\r\n    .replace(/-----END PUBLIC KEY-----/g, '')\r\n    .replace(/\\r|\\n|\\s/g, '');\r\n  const bytes = base64ToUint8Array(base64);\r\n  return bytes.buffer;\r\n}\r\n\r\nasync function importRsaPublicKey(pem) {\r\n  const keyData = pemToArrayBuffer(pem);\r\n  const subtle = (typeof window !== 'undefined' && window.crypto && window.crypto.subtle) || null;\r\n  if (!subtle) throw new Error('当前浏览器不支持 WebCrypto（请使用 HTTPS 的 Chrome/Edge）');\r\n  return await subtle.importKey('spki', keyData, { name: 'RSASSA-PKCS1-v1_5', hash: 'SHA-256' }, true, ['verify']);\r\n}\r\n\r\nexport async function verifySignedCodeAndActivate(code) {\r\n  if (Platform.OS !== 'web') throw new Error('离线验签仅支持 Web 环境');\r\n  if (!code || typeof code !== 'string') throw new Error('兑换码无效');\r\n  const parts = code.trim().split('.');\r\n  if (parts.length !== 3) throw new Error('兑换码格式不正确');\r\n  const [hB64, pB64, sB64] = parts;\r\n\r\n  const dec = new TextDecoder();\r\n  let header, payload;\r\n  try {\r\n    header = JSON.parse(dec.decode(base64urlToUint8Array(hB64)));\r\n    payload = JSON.parse(dec.decode(base64urlToUint8Array(pB64)));\r\n  } catch (e) {\r\n    throw new Error('兑换码解析失败');\r\n  }\r\n  if (header.alg !== 'RS256') throw new Error('不支持的签名算法');\r\n\r\n  const key = await importRsaPublicKey(PUBLIC_KEY_PEM);\r\n  const subtle = window.crypto.subtle;\r\n  const sig = base64urlToUint8Array(sB64);\r\n  const signedData = new TextEncoder().encode(`${hB64}.${pB64}`);\r\n  const ok = await subtle.verify({ name: 'RSASSA-PKCS1-v1_5' }, key, sig, signedData);\r\n  if (!ok) throw new Error('签名校验失败（公钥不匹配或码已损坏）');\r\n\r\n  const now = Date.now();\r\n  if (!payload || payload.plan !== 'lifetime') throw new Error('计划无效');\r\n  if (typeof payload.issuedAt !== 'number' || typeof payload.expiresAt !== 'number') throw new Error('时间字段无效');\r\n  if (now > payload.expiresAt) throw new Error('兑换码已过期');\r\n  if (typeof payload.deviceId !== 'string' || !payload.deviceId) throw new Error('缺少设备ID');\r\n\r\n  const localDeviceId = await getOrCreateDeviceId();\r\n  if (payload.deviceId !== localDeviceId) throw new Error('该兑换码未绑定当前设备');\r\n\r\n  const usedRaw = await AsyncStorage.getItem(USED_CODES_KEY);\r\n  const used = usedRaw ? JSON.parse(usedRaw) : [];\r\n  const codeId = `${payload.deviceId}:${payload.nonce || ''}:${payload.issuedAt}`;\r\n  if (used.includes(codeId)) throw new Error('本设备已使用过该兑换码');\r\n\r\n  await setPremiumStatus({ plan: PremiumPlans.LIFETIME, activatedAt: now, source: 'signed_code', codeId });\r\n  await AsyncStorage.setItem(USED_CODES_KEY, JSON.stringify([...used, codeId]));\r\n  return { ok: true, payload };\r\n} ","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Alert, Platform, SafeAreaView, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View, Image } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { PremiumPlans, getPremiumStatus, isPremiumActive, restoreFromRedeemCode, ensureWebTrialStarted, getWebTrialInfo, getOrCreateDeviceId } from '../utils/premium';\r\nimport { PayChannels, ProductSkus, getQrPayload, launchPayment, markPaidLocally } from '../payments/paymentService';\r\nimport { createOrder, pollOrderPaid, skuToPlan } from '../payments/paymentService';\r\nimport { verifySignedCodeAndActivate } from '../utils/premiumSigned';\r\n\r\nconst PLANS = [\r\n  {\r\n    sku: ProductSkus.PRO_MONTHLY,\r\n    title: '专业版（月度）',\r\n    price: '¥18/月',\r\n    desc: '无限错题解析、题目解析图片高清、离线缓存、优先更新',\r\n    plan: PremiumPlans.PRO_MONTHLY,\r\n  },\r\n  {\r\n    sku: ProductSkus.PRO_YEARLY,\r\n    title: '专业版（年度）',\r\n    price: '¥98/年',\r\n    desc: '较月度更优惠，适合长期备考学习',\r\n    plan: PremiumPlans.PRO_YEARLY,\r\n  },\r\n  {\r\n    sku: ProductSkus.LIFETIME,\r\n    title: '终身版',\r\n    price: '¥299（限时，原价¥1899）',\r\n    desc: '一次买断，永久使用全部高级功能',\r\n    plan: PremiumPlans.LIFETIME,\r\n  },\r\n];\r\n\r\nexport default function PremiumScreen() {\r\n  const [active, setActive] = useState(false);\r\n  const [status, setStatus] = useState({ plan: PremiumPlans.FREE });\r\n  const [selectedSku, setSelectedSku] = useState(PLANS[0].sku);\r\n  const [channel, setChannel] = useState(PayChannels.ALIPAY);\r\n  const [redeemCode, setRedeemCode] = useState('');\r\n  const [order, setOrder] = useState(null);\r\n  const [verifying, setVerifying] = useState(false);\r\n  const [trialInfo, setTrialInfo] = useState({ trialStartAt: null, expiresAt: null, remainingMs: 0 });\r\n  const [deviceId, setDeviceId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      await ensureWebTrialStarted();\r\n      const s = await getPremiumStatus();\r\n      const act = await isPremiumActive();\r\n      setStatus(s);\r\n      setActive(act);\r\n      const id = await getOrCreateDeviceId();\r\n      setDeviceId(id);\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const selectedPlan = useMemo(() => PLANS.find(p => p.sku === selectedSku), [selectedSku]);\r\n  const payUrl = useMemo(() => getQrPayload(channel, selectedSku, { platform: Platform.OS }), [channel, selectedSku]);\r\n\r\n  const handlePay = async () => {\r\n    try {\r\n      // 创建订单\r\n      const o = await createOrder(channel, selectedSku);\r\n      setOrder(o);\r\n      // 打开支付链接\r\n      if (o?.payUrl) await launchPayment(channel, selectedSku, { platform: Platform.OS });\r\n      // 开始轮询\r\n      setVerifying(true);\r\n      const paid = await pollOrderPaid(o.orderId, { intervalMs: 2000, timeoutMs: 180000 });\r\n      if (paid) {\r\n        await markPaidLocally(selectedSku);\r\n        const s = await getPremiumStatus();\r\n        const act = await isPremiumActive();\r\n        setStatus(s);\r\n        setActive(act);\r\n        Alert.alert('开通成功', '已自动验证支付并开通高级权益');\r\n      }\r\n    } catch (e) {\r\n      Alert.alert('支付/验证失败', e?.message || '请稍后再试');\r\n    }\r\n    finally { setVerifying(false); }\r\n  };\r\n\r\n  const handleMarkPaid = async () => {\r\n    await markPaidLocally(selectedSku);\r\n    const s = await getPremiumStatus();\r\n    const act = await isPremiumActive();\r\n    setStatus(s);\r\n    setActive(act);\r\n    Alert.alert('已激活', '本地已标记为已付费。生产环境请以服务端回调为准。');\r\n  };\r\n\r\n  const handleRedeem = async () => {\r\n    try {\r\n      // 尝试离线签名码\r\n      if (Platform.OS === 'web') {\r\n        try {\r\n          await verifySignedCodeAndActivate(redeemCode);\r\n        } catch (e) {\r\n          // 回退旧FREE规则\r\n          await restoreFromRedeemCode(redeemCode);\r\n        }\r\n      } else {\r\n        await restoreFromRedeemCode(redeemCode);\r\n      }\r\n      const s = await getPremiumStatus();\r\n      const act = await isPremiumActive();\r\n      setStatus(s);\r\n      setActive(act);\r\n      setRedeemCode('');\r\n      Alert.alert('兑换成功', '您的高级权益已开通');\r\n    } catch (e) {\r\n      Alert.alert('兑换失败', e?.message || '请检查兑换码');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView contentContainerStyle={styles.scroll}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>会员中心</Text>\r\n          {active ? (\r\n            <View style={styles.activeBadge}>\r\n              <Ionicons name=\"checkmark-circle\" size={18} color=\"#fff\" />\r\n              <Text style={styles.activeText}>已解锁高级功能</Text>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.inactiveBadge}>\r\n              <Ionicons name=\"lock-closed\" size={18} color=\"#fff\" />\r\n              <Text style={styles.inactiveText}>未开通</Text>\r\n            </View>\r\n          )}\r\n          <Text style={styles.currentPlan}>当前：{status?.plan || 'free'}</Text>\r\n        </View>\r\n\r\n        <Text style={styles.sectionTitle}>选择套餐</Text>\r\n        <View style={styles.planList}>\r\n          {PLANS.map(p => (\r\n            <TouchableOpacity key={p.sku} style={[styles.planItem, selectedSku === p.sku && styles.planSelected]} onPress={() => setSelectedSku(p.sku)}>\r\n              <Text style={styles.planTitle}>{p.title}</Text>\r\n              <Text style={styles.planPrice}>{p.price}</Text>\r\n              <Text style={styles.planDesc}>{p.desc}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        <Text style={styles.sectionTitle}>支付方式</Text>\r\n        <View style={styles.channelRow}>\r\n          <TouchableOpacity style={[styles.channelBtn, channel === PayChannels.ALIPAY && styles.channelActive]} onPress={() => setChannel(PayChannels.ALIPAY)}>\r\n            <Text style={styles.channelText}>支付宝</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[styles.channelBtn, channel === PayChannels.WECHAT && styles.channelActive]} onPress={() => setChannel(PayChannels.WECHAT)}>\r\n            <Text style={styles.channelText}>微信支付</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[styles.channelBtn, channel === PayChannels.PAYPAL && styles.channelActive]} onPress={() => setChannel(PayChannels.PAYPAL)}>\r\n            <Text style={styles.channelText}>PayPal</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={styles.qrCard}>\r\n          <Text style={styles.qrTitle}>扫码或跳转支付（买断原价¥1899，限时折扣¥299）</Text>\r\n          <View style={styles.qrBox}>\r\n            {Platform.OS === 'web' ? (\r\n              <Image\r\n                source={{ uri: `https://api.qrserver.com/v1/create-qr-code/?size=180x180&data=${encodeURIComponent(order?.codeUrl || payUrl)}` }}\r\n                style={{ width: 180, height: 180 }}\r\n              />\r\n            ) : (\r\n              <Text selectable style={{ color: '#555', textAlign: 'center' }}>{order?.payUrl || payUrl}</Text>\r\n            )}\r\n          </View>\r\n          <View style={styles.qrActions}>\r\n            <TouchableOpacity style={styles.primaryBtn} onPress={handlePay}>\r\n              <Text style={styles.primaryBtnText}>{verifying ? '验证中...' : '立即支付'}</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.secondaryBtn} onPress={handleMarkPaid}>\r\n              <Text style={styles.secondaryBtnText}>我已完成支付</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <Text style={styles.sectionTitle}>兑换码激活</Text>\r\n        <Text style={{ color: '#666', marginBottom: 6 }}>本设备ID：{deviceId}</Text>\r\n        <View style={styles.redeemRow}>\r\n          <TextInput\r\n            placeholder=\"输入兑换码（支持签名码/JWS，或 FREE-YYYYMMDD-XXXXXX）\"\r\n            value={redeemCode}\r\n            onChangeText={setRedeemCode}\r\n            style={styles.input}\r\n          />\r\n          <TouchableOpacity style={styles.primaryBtn} onPress={handleRedeem}>\r\n            <Text style={styles.primaryBtnText}>兑换</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={styles.benefits}>\r\n          <Text style={styles.sectionTitle}>高级权益</Text>\r\n          <Text style={styles.benefitItem}>• 大题量解锁与分类专项练习</Text>\r\n          <Text style={styles.benefitItem}>• 高清图片与解析</Text>\r\n          <Text style={styles.benefitItem}>• 错题本增强与统计分析</Text>\r\n          <Text style={styles.benefitItem}>• 离线缓存题库</Text>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f8f9fa' },\r\n  scroll: { padding: 16 },\r\n  header: { marginBottom: 12 },\r\n  title: { fontSize: 24, fontWeight: '700', color: '#0b72e7' },\r\n  activeBadge: { marginTop: 8, flexDirection: 'row', alignItems: 'center', gap: 6, backgroundColor: '#28a745', paddingHorizontal: 10, paddingVertical: 6, borderRadius: 16 },\r\n  inactiveBadge: { marginTop: 8, flexDirection: 'row', alignItems: 'center', gap: 6, backgroundColor: '#6c757d', paddingHorizontal: 10, paddingVertical: 6, borderRadius: 16 },\r\n  activeText: { color: '#fff', marginLeft: 6 },\r\n  inactiveText: { color: '#fff', marginLeft: 6 },\r\n  currentPlan: { marginTop: 6, color: '#555' },\r\n  sectionTitle: { marginTop: 18, marginBottom: 10, fontSize: 16, fontWeight: '700', color: '#333' },\r\n  planList: { gap: 12 },\r\n  planItem: { backgroundColor: '#fff', borderRadius: 10, padding: 14, borderWidth: 1, borderColor: '#e8e8e8' },\r\n  planSelected: { borderColor: '#0b72e7' },\r\n  planTitle: { fontSize: 16, fontWeight: '600', color: '#222' },\r\n  planPrice: { marginTop: 6, fontSize: 14, color: '#0b72e7' },\r\n  planDesc: { marginTop: 6, fontSize: 13, color: '#666' },\r\n  channelRow: { flexDirection: 'row', gap: 12 },\r\n  channelBtn: { paddingVertical: 8, paddingHorizontal: 12, borderWidth: 1, borderColor: '#e0e0e0', borderRadius: 8, backgroundColor: '#fff' },\r\n  channelActive: { borderColor: '#0b72e7' },\r\n  channelText: { color: '#333' },\r\n  qrCard: { marginTop: 10, backgroundColor: '#fff', borderRadius: 10, padding: 14, borderWidth: 1, borderColor: '#e8e8e8' },\r\n  qrTitle: { fontSize: 15, fontWeight: '600', color: '#333' },\r\n  qrBox: { marginTop: 10, alignItems: 'center' },\r\n  qrActions: { marginTop: 10, flexDirection: 'row', gap: 10 },\r\n  primaryBtn: { backgroundColor: '#0b72e7', paddingVertical: 10, paddingHorizontal: 14, borderRadius: 8 },\r\n  primaryBtnText: { color: '#fff', fontWeight: '600' },\r\n  secondaryBtn: { backgroundColor: '#eef5ff', paddingVertical: 10, paddingHorizontal: 14, borderRadius: 8 },\r\n  secondaryBtnText: { color: '#0b72e7', fontWeight: '600' },\r\n  redeemRow: { marginTop: 10, flexDirection: 'row', gap: 10, alignItems: 'center' },\r\n  input: { flex: 1, backgroundColor: '#fff', borderWidth: 1, borderColor: '#e0e0e0', borderRadius: 8, paddingHorizontal: 10, height: 40 },\r\n  benefits: { marginTop: 10, backgroundColor: '#fff', borderRadius: 10, padding: 14, borderWidth: 1, borderColor: '#e8e8e8' },\r\n  benefitItem: { marginTop: 6, color: '#444' },\r\n}); ","import React, { useEffect, useState } from 'react';\r\nimport { Alert, SafeAreaView, StyleSheet, Text, TextInput, TouchableOpacity, View, Platform } from 'react-native';\r\nimport { verifySignedCodeAndActivate } from '../utils/premiumSigned';\r\nimport { restoreFromRedeemCode, getOrCreateDeviceId } from '../utils/premium';\r\n\r\nexport default function ActivationScreen({ navigation }) {\r\n  const [code, setCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [deviceId, setDeviceId] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const id = await getOrCreateDeviceId();\r\n      setDeviceId(id);\r\n    })();\r\n  }, []);\r\n\r\n  const showError = (msg) => {\r\n    setErrorMsg(msg || '激活失败，请检查兑换码');\r\n    if (Platform.OS !== 'web') {\r\n      Alert.alert('激活失败', msg || '请检查兑换码');\r\n    } else {\r\n      // Web 环境使用原生弹窗以确保一定可见\r\n      try { window.alert(`激活失败：${msg || '请检查兑换码'}`); } catch (_) {}\r\n    }\r\n  };\r\n\r\n  const handleActivate = async () => {\r\n    setErrorMsg('');\r\n    if (!code.trim()) {\r\n      showError('请输入兑换码');\r\n      return;\r\n    }\r\n    // 清洗：移除非 base64url 允许的字符，防止复制时带入中文标点/空白\r\n    const cleaned = code.trim().replace(/[^A-Za-z0-9_\\.-]/g, '');\r\n    try {\r\n      setLoading(true);\r\n      if (Platform.OS === 'web') {\r\n        try {\r\n          await verifySignedCodeAndActivate(cleaned);\r\n        } catch (e) {\r\n          // 仅当是 FREE- 格式才回退\r\n          if (/^FREE-\\d{8}-[A-Z0-9]{6}$/i.test(cleaned)) {\r\n            await restoreFromRedeemCode(cleaned);\r\n          } else {\r\n            throw e;\r\n          }\r\n        }\r\n      } else {\r\n        await restoreFromRedeemCode(cleaned);\r\n      }\r\n      if (Platform.OS !== 'web') {\r\n        Alert.alert('成功', '激活成功，即将进入应用');\r\n      }\r\n      navigation.replace('Main');\r\n    } catch (e) {\r\n      console.error('激活失败:', e);\r\n      showError(e?.message || '请检查兑换码');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.card}>\r\n        <Text style={styles.title}>请输入兑换码以激活</Text>\r\n        <Text style={styles.deviceIdLabel}>本设备ID：</Text>\r\n        <Text selectable style={styles.deviceIdValue}>{deviceId || '获取中...'}</Text>\r\n        <TextInput\r\n          placeholder=\"支持签名码/JWS，或 FREE-YYYYMMDD-XXXXXX\"\r\n          style={styles.input}\r\n          value={code}\r\n          onChangeText={setCode}\r\n          autoCapitalize=\"characters\"\r\n        />\r\n        {!!errorMsg && <Text style={styles.error}>{errorMsg}</Text>}\r\n        <TouchableOpacity style={[styles.btn, loading && { opacity: 0.6 }]} onPress={handleActivate} disabled={loading}>\r\n          <Text style={styles.btnText}>{loading ? '校验中...' : '激活'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, backgroundColor: '#f6f7fb', alignItems: 'center', justifyContent: 'center' },\r\n  card: { width: '88%', backgroundColor: '#fff', borderRadius: 12, padding: 20, elevation: 3, shadowOpacity: 0.08 },\r\n  title: { fontSize: 18, fontWeight: '700', color: '#222', marginBottom: 12 },\r\n  deviceIdLabel: { color: '#666', marginBottom: 4 },\r\n  deviceIdValue: { color: '#333', marginBottom: 12 },\r\n  input: { height: 44, borderWidth: 1, borderColor: '#e0e0e0', borderRadius: 8, paddingHorizontal: 12, marginBottom: 8 },\r\n  error: { color: '#d9534f', marginBottom: 8 },\r\n  btn: { height: 44, backgroundColor: '#0b72e7', borderRadius: 8, alignItems: 'center', justifyContent: 'center' },\r\n  btnText: { color: '#fff', fontWeight: '600' }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Text, View } from 'react-native';\r\nimport initI18n from '../i18n/i18n';\r\nimport { isActivated, subscribePremiumStatus } from '../utils/premium';\r\n\r\n// 导入屏幕\r\nimport BrowseScreen from '../screens/BrowseScreen';\r\nimport ExamScreen from '../screens/ExamScreen';\r\nimport FavoritesScreen from '../screens/FavoritesScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport MistakesScreen from '../screens/MistakesScreen';\r\nimport QuestionDetailScreen from '../screens/QuestionDetailScreen';\r\nimport ResultScreen from '../screens/ResultScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport StudyProgressScreen from '../screens/StudyProgressScreen';\r\nimport PremiumScreen from '../screens/PremiumScreen';\r\nimport ActivationScreen from '../screens/ActivationScreen';\r\n\r\n// 创建导航器\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\n// 主标签导航\r\nfunction MainTabNavigator() {\r\n  const { t } = useTranslation();\r\n  \r\n  // 配置屏幕选项的函数，避免依赖问题\r\n  const getScreenOptions = () => {\r\n    return ({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        let iconName;\r\n\r\n        if (route.name === 'Home') {\r\n          iconName = focused ? 'home' : 'home-outline';\r\n        } else if (route.name === 'Browse') {\r\n          iconName = focused ? 'list' : 'list-outline';\r\n        } else if (route.name === 'Exam') {\r\n          iconName = focused ? 'school' : 'school-outline';\r\n        } else if (route.name === 'Favorites') {\r\n          iconName = focused ? 'heart' : 'heart-outline';\r\n        } else if (route.name === 'Mistakes') {\r\n          iconName = focused ? 'close-circle' : 'close-circle-outline';\r\n        } else if (route.name === 'Settings') {\r\n          iconName = focused ? 'settings' : 'settings-outline';\r\n        }\r\n\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n      tabBarActiveTintColor: '#0066cc',\r\n      tabBarInactiveTintColor: 'gray',\r\n      headerShown: false\r\n    });\r\n  };\r\n  \r\n  // 获取屏幕标签文本的函数\r\n  const getTabLabel = (key) => {\r\n    return t(`navigation.${key.toLowerCase()}`);\r\n  };\r\n  \r\n  return (\r\n    <Tab.Navigator \r\n      screenOptions={getScreenOptions()}\r\n      style={{ pointerEvents: 'auto' }}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Home\" \r\n        component={HomeScreen} \r\n        options={{ tabBarLabel: getTabLabel('home') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Browse\" \r\n        component={BrowseScreen} \r\n        options={{ tabBarLabel: getTabLabel('browse') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Exam\" \r\n        component={ExamScreen} \r\n        options={{ tabBarLabel: getTabLabel('exam') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Favorites\" \r\n        component={FavoritesScreen} \r\n        options={{ tabBarLabel: getTabLabel('favorites') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Mistakes\" \r\n        component={MistakesScreen} \r\n        options={{ tabBarLabel: getTabLabel('mistakes') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreen} \r\n        options={{ tabBarLabel: getTabLabel('settings') }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// 应用导航器\r\nexport default function AppNavigator() {\r\n  const [isI18nInitialized, setIsI18nInitialized] = useState(false);\r\n  \r\n  // 初始化i18n\r\n  useEffect(() => {\r\n    const setupI18n = async () => {\r\n      try {\r\n        await initI18n();\r\n        setIsI18nInitialized(true);\r\n      } catch (error) {\r\n        console.error('Failed to initialize i18n:', error);\r\n      }\r\n    };\r\n    \r\n    setupI18n();\r\n  }, []);\r\n  \r\n  // 显示加载状态\r\n  if (!isI18nInitialized) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={{ marginTop: 20, fontSize: 16, color: '#666' }}>加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return <RootNavigator />;\r\n}\r\n\r\n// 将根导航器拆分为单独的组件\r\nfunction RootNavigator() {\r\n  const { t } = useTranslation();\r\n  const [activated, setActivated] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => { setActivated(await isActivated()); })();\r\n    // 订阅会员状态变化，自动刷新导航\r\n    const unsub = subscribePremiumStatus(async () => {\r\n      setActivated(await isActivated());\r\n    });\r\n    return unsub;\r\n  }, []);\r\n\r\n  if (activated === null) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={{ marginTop: 20, fontSize: 16, color: '#666' }}>初始化...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  // 获取屏幕标题的函数\r\n  const getScreenTitle = (key) => {\r\n    return t(`navigation.${key}`);\r\n  };\r\n  \r\n  return (\r\n    <Stack.Navigator\r\n      key={activated ? 'activated' : 'not_activated'}\r\n      initialRouteName={activated ? 'Main' : 'Activation'}\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n        headerTintColor: '#0066cc',\r\n      }}\r\n    >\r\n      <Stack.Screen \r\n        name=\"Activation\" \r\n        component={ActivationScreen} \r\n        options={{ title: '激活' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Main\" \r\n        component={MainTabNavigator} \r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"QuestionDetail\" \r\n        component={QuestionDetailScreen} \r\n        options={{ title: getScreenTitle('question_detail') }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"ExamResult\" \r\n        component={ResultScreen} \r\n        options={{ \r\n          title: getScreenTitle('exam_result'),\r\n          headerBackVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"StudyProgress\" \r\n        component={StudyProgressScreen} \r\n        options={{ title: getScreenTitle('study_progress') }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Premium\" \r\n        component={PremiumScreen} \r\n        options={{ title: '会员中心' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n} ","import { NavigationContainer } from '@react-navigation/native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, StatusBar, StyleSheet, Text, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n// 导入本地组件\r\nimport initI18n, { isI18nInitialized } from './src/i18n/i18n';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { initDatabase } from './src/utils/database';\r\n\r\n// 保持启动画面可见直到我们准备好渲染\r\nSplashScreen.preventAutoHideAsync().catch(() => {});\r\n\r\nexport default function App() {\r\n  // 状态管理\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n  const [initError, setInitError] = useState(null);\r\n\r\n  // 初始化应用\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        console.log('App initializing...');\r\n        \r\n        // 初始化国际化\r\n        if (!isI18nInitialized()) {\r\n          await initI18n();\r\n          console.log('i18n initialized');\r\n        }\r\n        \r\n        // 初始化数据库\r\n        await initDatabase();\r\n        console.log('Database initialized');\r\n        \r\n        // 预加载其他任何资源或数据...\r\n      } catch (error) {\r\n        console.error('Error during app initialization:', error);\r\n        setInitError(error);\r\n      } finally {\r\n        setAppIsReady(true);\r\n        await SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  // 渲染发生错误的界面\r\n  if (initError) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.errorText}>应用初始化失败</Text>\r\n        <Text style={styles.errorDetails}>{initError.message}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染加载界面\r\n  if (!appIsReady) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>应用加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染主应用\r\n  return (\r\n    <SafeAreaProvider>\r\n      <NavigationContainer>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n        <AppNavigator />\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f8f9fa',\r\n    padding: 20,\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  errorText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#e74c3c',\r\n    marginBottom: 12,\r\n  },\r\n  errorDetails: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"232\":\"d40c0fe6\",\"643\":\"3f550647\",\"757\":\"f69d2cda\",\"778\":\"58e65c94\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [689], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["navigation","home","browse","exam","favorites","mistakes","settings","question_detail","exam_result","title","subtitle","startExam","examDescription","browseTopic","browseDescription","reviewMistakes","mistakesDescription","favoritesDescription","studyStats","examsTaken","questionsAnswered","accuracy","allQuestions","search","categories","traffic_signs","traffic_rules","priority","parking","speed_limits","highway","penalties","general","noQuestionsFound","start","description","timeLimit","questionCount","timeRemaining","submit","next","previous","finishExam","chooseMode","customExam","cancel","examPreparation","examInfo","question","selectAnswer","checkAnswer","correct","incorrect","explanation","nextQuestion","loading","result","passed","failed","score","requiredToPass","reviewIncorrect","retakeExam","backToHome","examDetails","yourAnswer","correctAnswer","viewExplanation","timeSpent","correctCount","incorrectCount","noFavorites","browseToAdd","browseCatalog","removeFavorite","addFavorite","edit","delete","selectAll","deselectAll","favoritesCount","viewDetails","noMistakes","practiceToContinue","startPractice","mistakesCount","sortNewest","sortOldest","clearAll","clearConfirm","language","about","version","resetData","resetConfirm","resetSuccess","languages","en","zh","cs","es","appSettings","dailyReminder","reminderDescription","darkMode","darkModeDescription","appInfo","rateApp","privacyPolicy","appVersion","common","error","confirm","save","done","yes","no","study_progress","examInfoLine1","examInfoLine2","examInfoLine3","examInfoLine4","fullExam","practiceMode","quickTest","progress","totalExams","totalQuestions","averageAccuracy","recentActivity","noHistory","clearHistory","clearProgressConfirm","clearProgressSuccess","clearProgressError","questions","accuracyTrend","questionStats","notEnoughData","noData","success","isInitialized","initI18n","_ref","_asyncToGenerator","userLanguage","storedLanguage","AsyncStorage","getItem","console","i18n","initReactI18next","init","resources","translation","lng","fallbackLng","interpolation","escapeValue","compatibilityJSON","log","apply","arguments","isI18nInitialized","STORAGE_KEY","TRIAL_KEY","USED_CODES_KEY","PremiumPlans","FREE","PRO_MONTHLY","PRO_YEARLY","LIFETIME","getPremiumStatus","_getPremiumStatus","raw","JSON","parse","plan","e","setPremiumStatus","_x","_setPremiumStatus","status","safe","setItem","stringify","notifySubscribers","isPremiumActive","_isPremiumActive","s","expiresAt","Date","now","Number","_ensureWebTrialStarted","Platform","OS","String","isActivated","_isActivated","getOrCreateDeviceId","_getOrCreateDeviceId","key","id","Math","random","toString","slice","restoreFromRedeemCode","_x2","_restoreFromRedeemCode","code","Error","trimmed","trim","toUpperCase","match","issuedStr","y","m","d","issuedAt","UTC","getTime","isNaN","usedRaw","used","includes","activatedAt","source","concat","_toConsumableArray","ok","subscribers","Set","forEach","fn","_","AppState","addEventListener","state","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","marginVertical","paddingHorizontal","backgroundColor","borderRadius","alignSelf","languageButton","paddingVertical","marginHorizontal","activeLanguageButton","languageText","fontSize","color","activeLanguageText","fontWeight","currentLanguage","onChangeLanguage","useTranslation","t","_jsx","View","style","children","name","icon","map","lang","TouchableOpacity","onPress","Text","trafficSignalImages","require","imageAssets","image2Assets","getQuestionTranslation","length","undefined","translations","answers","Array","isArray","_objectSpread","ans","text","warn","message","hasError","loadQuestionSet","setNumber","questionSet","default","translatedQuestion","options","idx","fromCharCode","isCorrect","picture","signalMatch","signalId","parseInt","signalImage","imageMatch","imageNumber","fileName","split","pop","substr","category","loadAllQuestionSets","_ref2","sets","errors","set","push","join","backupQuestions","backupError","getQuestionsByCategory","_ref3","filter","q","getAllCategories","_ref4","from","getTrafficSignalImage","getChineseCategoryName","createShadow","_ref$offset","offset","width","height","_ref$opacity","opacity","_ref$radius","radius","_ref$elevation","elevation","boxShadow","getImageProps","imageStyle","resizeMode","tintColor","imageProps","_objectWithoutProperties","_excluded","_Dimensions$get","Dimensions","get","responsiveWidth","percentage","responsiveHeight","responsiveFontSize","size","scaleFactor","min","round","flex","loadingContainer","loadingText","marginTop","header","padding","borderBottomWidth","borderBottomColor","searchContainer","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","searchIcon","marginRight","searchInput","clearButton","sectionTitle","marginLeft","marginBottom","categoriesContainer","paddingTop","paddingBottom","categoriesList","categoryButton","categoryButtonActive","categoryButtonText","categoryButtonTextActive","resultsContainer","resultCount","questionsList","questionCard","questionHeader","categoryBadge","categoryLabel","questionId","questionText","lineHeight","imageContainer","questionImage","cardFooter","borderTopWidth","borderTopColor","iconButton","footerRight","viewButton","viewButtonText","emptyContainer","emptyText","textAlign","resetButton","resetButtonText","errorContainer","errorTitle","errorMessage","retryButton","retryButtonText","idContainer","_useTranslation","useNavigation","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setQuestions","_useState5","_useState6","setCategories","_useState7","_useState8","selectedCategory","setSelectedCategory","_useState9","_useState0","searchQuery","setSearchQuery","_useState1","_useState10","setCurrentLanguage","_useState11","_useState12","setError","fetchData","assetDataService","allCategories","formattedCategories","cat","categoryError","handleLanguageChange","changeLanguage","useEffect","handleQuestionPress","Alert","alert","navigate","_jsxs","ActivityIndicator","Ionicons","filteredQuestions","filtered","query","toLowerCase","getFilteredQuestions","SafeAreaView","StatusBar","barStyle","QuestionLanguageSwitcher","TextInput","placeholder","value","onChangeText","placeholderTextColor","FlatList","horizontal","data","renderItem","item","keyExtractor","showsHorizontalScrollIndicator","contentContainerStyle","activeOpacity","Image","_item$id","showsVerticalScrollIndicator","ListEmptyComponent","imageUrl","difficulty","isWeb","getDatabase","SQLite","initDatabase","db","transaction","tx","executeSql","checkAndInsertInitialData","rows","_array","count","insertMockData","getAllQuestions","Promise","resolve","reject","storedQuestions","addToFavorites","_ref5","params","_ref6","_ref7","sort","_ref8","_ref9","find","_ref0","isFavorite","isQuestionFavorited","index","_ref1","_ref10","storedFavorites","findIndex","f","_f$questionId","_f$id","dateAdded","timestamp","_x4","removeFromFavorites","_ref11","updatedFavorites","_f$questionId2","_f$id2","fId","qId","_x5","_ref12","_ref13","found","some","_f$questionId3","_f$id3","_x6","getFavoriteQuestions","_ref14","_ref15","favoriteQuestions","_loop","favorite","recordMistake","_ref16","userAnswer","nowIso","toISOString","nowTs","mistakeId","_ref18","_ref19","_ref17","storedMistakes","existingIndex","_m$questionId","attempts","lastAttempt","_x7","_x8","recordMistakesBatch","_ref20","items","it","_ref21","_it$id2","_it$userAnswer2","qid","ua","stored","byId","Map","_m$questionId2","_it$id","_it$questionId","_it$userAnswer","existing","merged","values","_x9","getMistakes","_ref22","_ref23","mistakesData","a","b","removeMistake","_ref24","_ref25","rowsAffected","updatedMistakes","_m$questionId3","mId","_x0","clearMistakes","_ref26","_ref27","innerTx","_ref28","afterClear","afterMistakes","resetDatabase","_ref29","recordStudyProgress","_ref30","examType","_data$date","date","progressData","_x1","getStudyProgressStats","_ref31","_ref32","stats","totalCorrect","_ref33","progressHistory","examResultsData","examResults","reduce","sum","clearStudyProgress","_ref34","updateStudyProgress","correctAnswers","_ref37","studyProgress","storedProgress","todayIndex","_x12","_x13","insertResult","clearExamHistory","_ref38","_ref39","_ref40","storedResults","isSmallDevice","isMediumDevice","baseFactor","EXAM_CONFIG","prepContainer","examInfoCard","select","ios","android","web","examTitle","examRules","ruleTitle","ruleItem","ruleText","startButton","startButtonText","questionContainer","currentHeight","questionNumber","timerContainer","timerText","optionsContainer","optionButton","selectedOption","borderColor","borderWidth","correctOption","incorrectOption","optionLetter","optionText","resultIcon","navigationContainer","navButton","disabledButton","navButtonText","disabledButtonText","submitButton","submitButtonText","progressContainer","progressList","progressItem","activeProgressItem","answeredProgressItem","progressItemText","activeProgressItemText","answeredProgressItemText","resultsScrollView","resultsContent","resultHeader","overflow","resultBanner","resultText","scoreCircle","scoreValue","resultStats","statsRow","statItem","statValue","statLabel","resultMessage","messageText","resultActions","flexWrap","actionButton","minWidth","actionButtonWide","actionButtonText","questionScrollView","bottomPadding","errorText","mistakesInfoCard","mistakesInfoHeader","mistakesInfoTitle","mistakesInfoText","primaryButton","examFinishedBanner","examFinishedText","examStarted","setExamStarted","examFinished","setExamFinished","currentIndex","setCurrentIndex","setAnswers","remainingTime","setRemainingTime","_useState13","_useState14","results","setResults","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","timerRef","useRef","loadQuestions","categoryItems","current","clearInterval","updatedQuestions","shuffled","allowedCount","formattedQuestions","examId","setInterval","prev","answeredQuestions","Object","keys","questionResults","mistakesToRecord","opt","all","e2","isPassed","examResult","unansweredQuestions","_ref35","newExamResult","insertId","_x10","_x11","detailsJson","saveExamResult","goToHome","examCompleted","viewMistakes","restartExam","formatTime","seconds","secs","floor","padStart","renderCategoryItem","ScrollView","option","optionId","newAnswers","_defineProperty","disabled","renderCurrentQuestion","LinearGradient","colors","renderExamResults","headerButtons","headerButton","headerButtonText","deleteButton","deleteButtonText","listContainer","favoriteItem","selectedItem","checkboxContainer","favoriteContent","favoriteHeader","favoriteCategory","favoriteDate","favoriteQuestion","favoriteActions","setFavorites","isEditing","setIsEditing","selectedItems","setSelectedItems","loadFavorites","processedData","addListener","toggleEditMode","toggleSelectItem","itemId","deleteSelected","_Fragment","dateString","toLocaleDateString","onLongPress","HomeScreen","setStats","setFavoritesCount","setMistakesCount","features","screen","badge","isMounted","loadStats","progressStats","loadFavoritesCount","loadMistakesCount","unsubscribe","_route$params","route","getState","routes","r","setTimeout","setParams","checkExamResults","getFeatureTitle","scrollContent","headerGradient","headerImage","featuresContainer","featuresGrid","feature","featureCard","featureIconContainer","badgeContainer","badgeText","featureTitle","cardSection","statsCard","statsContent","statDivider","statsFooter","viewMoreText","infoCard","infoHeader","infoTitle","infoText","borderBottomLeftRadius","borderBottomRightRadius","position","top","right","minHeight","clearButtonText","mistakesList","mistakeItem","mistakeHeader","categoryText","mistakeDate","mistakeQuestion","answerContainer","answerRow","answerBadge","wrongBadge","correctBadge","answerBadgeText","answerText","mistakeActions","emptySubText","startExamButton","startExamText","setMistakes","setAllQuestions","loadMistakes","mistakeRecords","mistakesWithDetails","mistake","questionDetail","chineseCategory","processMistakes","doClear","window","userAnswerIndex","charCodeAt","userAnswerText","correctAnswerIndex","correctAnswerText","doRemove","updatedRecords","handleRemoveMistake","headerTop","backBtn","headerInfo","questionIdText","favoriteButton","languageSwitcherContainer","backButton","backButtonText","optionIcon","selectedOptionText","correctOptionText","incorrectOptionText","resultContainer","correctBanner","incorrectBanner","explanationContainer","explanationHeader","explanationTitle","explanationText","buttonContainer","button","buttonDisabled","nextButton","buttonText","setQuestion","setSelectedOption","showAnswer","setShowAnswer","setIsFavorite","isAnswerCorrect","setIsAnswerCorrect","loadQuestion","assetQuestion","formattedQuestion","favoriteStatus","toggleFavorite","renderOption","isSelected","optionStyle","textStyle","iconName","iconColor","goBack","ResultScreen","setIsPassed","setScore","setPercentageScore","calculatedScore","catch","scoreCircleContainer","scoreText","scoreSubtext","statsContainer","questionItem","incorrectBadge","numberOfLines","answerInfo","answerLabel","correctText","incorrectText","scrollEnabled","buttonIcon","secondaryButton","secondaryButtonText","repairFavoritesData","validFavorites","repaired","fav","ensureCleanMistakes","fixAllIssues","favResult","mistakeResult","fixJsonErrors","checkAndCopyFixedFiles","FileSystem","dataDir","documentDirectory","makeDirectoryAsync","intermediates","fixedFiles","i","fixedFileName","fixedFilePath","getInfoAsync","exists","path","file","originalFilePath","backupPath","copyAsync","to","runAllFixes","jsonFixResult","APP_INFO","LANGUAGES","flag","scrollContainer","section","sectionContent","settingOption","infoRow","infoLabel","infoValue","dangerSection","dangerButton","dangerButtonText","languageInfo","languageFlag","languageName","settingItem","settingInfo","settingIcon","settingTitle","settingDescription","versionInfo","versionText","selectedLanguage","setSelectedLanguage","notificationsEnabled","setNotificationsEnabled","darkModeEnabled","setDarkModeEnabled","loadLanguageSettings","savedLanguage","loadSettings","notificationsValue","darkModeValue","langCode","toggleNotifications","toggleDarkMode","_x3","renderLanguageOption","Switch","onValueChange","trackColor","false","true","thumbColor","optionItem","Linking","openURL","_onPress2","_onPress","screenWidth","AccuracyLineChart","_ref$progressHistory","validProgress","record","noDataContainer","noDataText","noDataSubtext","recentProgress","reverse","labels","accuracyData","datasets","strokeWidth","legend","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","chartContainer","chartTitle","LineChart","bezier","chart","yAxisSuffix","QuestionCountBarChart","_ref2$progressHistory","barPercentage","BarChart","fromZero","showValuesOnTopOfBars","withInnerLines","StudyProgressScreen","loadProgressData","formatDate","getFullYear","getMonth","getDate","formatAccuracy","getExamTypeColor","getExamTypeLabel","statsOverviewContainer","statCard","chartsContainer","sectionContainer","sectionHeader","emptyState","emptyStateText","emptyStateSubtext","historyContainer","historyItem","historyHeader","historyDate","examTypeBadge","examTypeText","historyStats","historyStat","historyStatValue","historyStatLabel","getPaymentConfig","payments","Constants","expoConfig","extra","manifest","createOrderUrl","checkStatusUrl","paypalMeUrl","PayChannels","ALIPAY","WECHAT","PAYPAL","ProductSkus","createOrder","_createOrder","channel","sku","cfg","resp","fetch","method","headers","body","platform","json","orderId","payUrl","_pollOrderPaid","_ref$intervalMs","intervalMs","_ref$timeoutMs","timeoutMs","encodeURIComponent","buildPayUrl","base","URLSearchParams","_launchPayment","order","url","amountCny","buildPaypalMeUrl","markPaidLocally","_markPaidLocally","skuToPlan","base64urlToUint8Array","base64url","pad","repeat","b64","replace","binary","atob","Buffer","bytes","Uint8Array","pemToArrayBuffer","pem","base64ToUint8Array","buffer","_importRsaPublicKey","keyData","subtle","crypto","importKey","hash","verifySignedCodeAndActivate","_verifySignedCodeAndActivate","parts","payload","_parts","hB64","pB64","sB64","dec","TextDecoder","decode","alg","importRsaPublicKey","sig","signedData","TextEncoder","encode","verify","deviceId","localDeviceId","codeId","nonce","PLANS","price","desc","PremiumScreen","active","setActive","setStatus","selectedSku","setSelectedSku","setChannel","redeemCode","setRedeemCode","setOrder","verifying","setVerifying","trialStartAt","remainingMs","setDeviceId","ensureWebTrialStarted","act","useMemo","p","via","getQrPayload","handlePay","o","launchPayment","paid","pollOrderPaid","handleMarkPaid","handleRedeem","scroll","activeBadge","activeText","inactiveBadge","inactiveText","currentPlan","planList","planItem","planSelected","planTitle","planPrice","planDesc","channelRow","channelBtn","channelActive","channelText","qrCard","qrTitle","qrBox","uri","codeUrl","selectable","qrActions","primaryBtn","primaryBtnText","secondaryBtn","secondaryBtnText","redeemRow","input","benefits","benefitItem","gap","ActivationScreen","setCode","errorMsg","setErrorMsg","showError","msg","handleActivate","cleaned","test","card","deviceIdLabel","deviceIdValue","autoCapitalize","btn","btnText","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","MainTabNavigator","getTabLabel","Navigator","screenOptions","tabBarIcon","focused","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","pointerEvents","Screen","component","tabBarLabel","BrowseScreen","ExamScreen","FavoritesScreen","MistakesScreen","SettingsScreen","AppNavigator","setIsI18nInitialized","setupI18n","RootNavigator","activated","setActivated","listener","add","getScreenTitle","initialRouteName","headerTitleStyle","headerTintColor","QuestionDetailScreen","headerBackVisible","App","appIsReady","setAppIsReady","initError","setInitError","_prepare","SplashScreen","prepare","errorDetails","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","deferred","O","chunkIds","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","script","needAttach","scripts","document","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","type","target","head","appendChild","Symbol","toStringTag","nmd","paths","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}