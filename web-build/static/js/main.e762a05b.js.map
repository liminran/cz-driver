{"version":3,"file":"static/js/main.e762a05b.js","mappings":"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","sources":["src/i18n/translations/cs.js","src/i18n/translations/en.js","src/i18n/translations/es.js","src/i18n/translations/zh.js","src/i18n/i18n.js","src/components/QuestionLanguageSwitcher.js","src/utils/assetDataService.js","src/utils/styleUtils.js","src/screens/BrowseScreen.js","src/data/mockData.js","src/utils/database.js","src/screens/ExamScreen.js","src/screens/FavoritesScreen.js","src/screens/HomeScreen.js","src/screens/MistakesScreen.js","src/screens/QuestionDetailScreen.js","src/screens/ResultScreen.js","src/utils/fixFavorites.js","src/utils/fixJson.js","src/screens/SettingsScreen.js","src/components/ProgressChart.js","src/screens/StudyProgressScreen.js","src/navigation/AppNavigator.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Czech translations\r\nconst cs = {\r\n  navigation: {\r\n    home: 'Domů',\r\n    browse: 'Procházet',\r\n    exam: 'Zkouška',\r\n    favorites: 'Oblíbené',\r\n    mistakes: 'Chyby',\r\n    settings: 'Nastavení',\r\n    question_detail: 'Detail otázky',\r\n    exam_result: 'Výsledek zkoušky'\r\n  },\r\n  home: {\r\n    title: 'Aplikace pro řidičský průkaz ČR',\r\n    subtitle: 'Připravte se na českou řidičskou zkoušku s naší komplexní příručkou',\r\n    startExam: 'Začít zkoušku',\r\n    examDescription: 'Začněte simulovanou zkoušku s 25 náhodnými otázkami',\r\n    browseTopic: 'Procházet otázky',\r\n    browseDescription: 'Prozkoumat všechny otázky podle kategorie',\r\n    reviewMistakes: 'Přehled chyb',\r\n    mistakesDescription: 'Procvičte si otázky, které jste zodpověděli špatně',\r\n    favorites: 'Oblíbené',\r\n    favoritesDescription: 'Přehled vašich uložených otázek',\r\n    studyStats: 'Statistiky studia',\r\n    examsTaken: 'Zkoušky',\r\n    questionsAnswered: 'Otázky',\r\n    accuracy: 'Přesnost'\r\n  },\r\n  browse: {\r\n    title: 'Procházet otázky',\r\n    allQuestions: 'Všechny otázky',\r\n    search: 'Hledat otázky',\r\n    categories: {\r\n      traffic_signs: 'Dopravní značky',\r\n      traffic_rules: 'Dopravní pravidla',\r\n      priority: 'Pravidla přednosti',\r\n      parking: 'Pravidla parkování',\r\n      speed_limits: 'Rychlostní limity',\r\n      highway: 'Pravidla dálnice',\r\n      penalties: 'Pokuty',\r\n      general: 'Obecné'\r\n    },\r\n    noQuestionsFound: 'Nebyly nalezeny žádné otázky odpovídající vašim kritériím'\r\n  },\r\n  exam: {\r\n    title: 'Řidičská zkouška',\r\n    subtitle: 'Otestujte své znalosti řízení',\r\n    start: 'Začít zkoušku',\r\n    description: 'Zkouška se skládá z 25 náhodných otázek z různých kategorií. Pro úspěšné složení potřebujete zodpovědět alespoň 20 správně.',\r\n    timeLimit: 'Časový limit: 30 minut',\r\n    questionCount: 'Otázka: {{current}} z {{total}}',\r\n    timeRemaining: 'Čas: {{minutes}}:{{seconds}}',\r\n    submit: 'Odeslat odpovědi',\r\n    next: 'Další',\r\n    previous: 'Předchozí',\r\n    finishExam: 'Dokončit zkoušku',\r\n    chooseMode: 'Vyberte režim zkoušky',\r\n    customExam: 'Vlastní zkouška',\r\n    questionCount: 'Počet otázek (5-50)',\r\n    timeLimit: 'Časový limit (minuty, 0 pro neomezený)',\r\n    cancel: 'Zrušit',\r\n    examPreparation: 'Informace o zkoušce',\r\n    examInfo: '• Česká teoretická zkouška má 25 otázek, potřebujete 20 správných odpovědí pro úspěšné složení\\n• Časový limit je 30 minut\\n• Prosím, absolvujte zkoušku v klidném prostředí\\n• Během zkoušky neukončujte aplikaci'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Vyberte odpověď',\r\n    checkAnswer: 'Zkontrolovat odpověď',\r\n    correct: 'Správně',\r\n    incorrect: 'Nesprávně',\r\n    explanation: 'Vysvětlení',\r\n    nextQuestion: 'Další otázka',\r\n    loading: 'Načítání otázky...'\r\n  },\r\n  result: {\r\n    title: 'Výsledky zkoušky',\r\n    passed: 'Gratulujeme! Úspěšně jste složili zkoušku!',\r\n    failed: 'Bohužel jste neuspěli.',\r\n    score: 'Skóre: {{correct}}/{{total}}',\r\n    requiredToPass: 'Požadováno ke složení: 20/25',\r\n    reviewIncorrect: 'Přehled nesprávných odpovědí',\r\n    retakeExam: 'Opakovat zkoušku',\r\n    backToHome: 'Zpět na úvod',\r\n    examDetails: 'Detaily otázek',\r\n    yourAnswer: 'Vaše odpověď:',\r\n    correctAnswer: 'Správná odpověď:',\r\n    viewExplanation: 'Zobrazit vysvětlení',\r\n    timeSpent: 'Strávený čas',\r\n    correctCount: 'Správně',\r\n    incorrectCount: 'Nesprávně'\r\n  },\r\n  favorites: {\r\n    title: 'Oblíbené otázky',\r\n    noFavorites: 'Zatím jste nepřidali žádné oblíbené položky',\r\n    browseToAdd: 'Procházejte otázky a klepnutím na ikonu srdce uložte důležité otázky',\r\n    browseCatalog: 'Procházet otázky',\r\n    removeFavorite: 'Odstranit z oblíbených',\r\n    addFavorite: 'Přidat do oblíbených',\r\n    edit: 'Upravit',\r\n    cancel: 'Zrušit',\r\n    delete: 'Smazat',\r\n    selectAll: 'Vybrat vše',\r\n    deselectAll: 'Zrušit výběr',\r\n    favoritesCount: '{{count}} uložených otázek',\r\n    viewDetails: 'Zobrazit detaily'\r\n  },\r\n  mistakes: {\r\n    title: 'Chybné otázky',\r\n    noMistakes: 'Zatím nemáte žádné chyby!',\r\n    practiceToContinue: 'Pokračujte v procvičování, otázky, které zodpovíte nesprávně, se objeví zde',\r\n    startPractice: 'Začít procvičování',\r\n    mistakesCount: '{{count}} chybných otázek',\r\n    sortNewest: 'Nejnovější',\r\n    sortOldest: 'Nejstarší',\r\n    clearAll: 'Vymazat vše',\r\n    clearConfirm: 'Opravdu chcete vymazat všechny záznamy o chybách? Tuto akci nelze vrátit zpět.',\r\n    viewExplanation: 'Zobrazit vysvětlení'\r\n  },\r\n  settings: {\r\n    title: 'Nastavení',\r\n    subtitle: 'Přizpůsobte si svou aplikaci',\r\n    language: 'Jazyk',\r\n    about: 'O aplikaci',\r\n    version: 'Verze',\r\n    resetData: 'Resetovat všechna data',\r\n    resetConfirm: 'Jste si jisti? Tímto smažete všechna uložená data a akci nelze vrátit zpět.',\r\n    resetSuccess: 'Všechna data byla resetována.',\r\n    languages: {\r\n      en: 'Angličtina',\r\n      zh: 'Čínština',\r\n      cs: 'Čeština',\r\n      es: 'Španělština'\r\n    },\r\n    appSettings: 'Nastavení aplikace',\r\n    dailyReminder: 'Denní připomenutí',\r\n    reminderDescription: 'Dostávat denní připomenutí ke studiu',\r\n    darkMode: 'Tmavý režim',\r\n    darkModeDescription: 'Použít noční režim pro ochranu očí',\r\n    appInfo: 'Informace o aplikaci',\r\n    rateApp: 'Ohodnotit aplikaci',\r\n    privacyPolicy: 'Zásady ochrany osobních údajů',\r\n    appVersion: 'Aplikace pro řidičský průkaz ČR v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Načítání...',\r\n    error: 'Chyba',\r\n    cancel: 'Zrušit',\r\n    confirm: 'Potvrdit',\r\n    save: 'Uložit',\r\n    delete: 'Smazat',\r\n    edit: 'Upravit',\r\n    done: 'Hotovo',\r\n    yes: 'Ano',\r\n    no: 'Ne'\r\n  }\r\n};\r\n\r\nexport default cs; ","// English translations\r\nconst en = {\r\n  navigation: {\r\n    home: 'Home',\r\n    browse: 'Browse',\r\n    exam: 'Exam',\r\n    favorites: 'Favorites',\r\n    mistakes: 'Mistakes',\r\n    settings: 'Settings',\r\n    question_detail: 'Question Detail',\r\n    exam_result: 'Exam Result',\r\n    study_progress: 'Study Progress'\r\n  },\r\n  home: {\r\n    title: 'Czech Driving License App',\r\n    subtitle: 'Prepare for your Czech driving test with our comprehensive guide',\r\n    startExam: 'Start Exam',\r\n    examDescription: 'Start a simulated driving test with 25 random questions',\r\n    browseTopic: 'Browse Questions',\r\n    browseDescription: 'Explore all questions by category',\r\n    reviewMistakes: 'Review Mistakes',\r\n    mistakesDescription: 'Practice the questions you got wrong',\r\n    favorites: 'Favorites',\r\n    favoritesDescription: 'Review your saved questions',\r\n    studyStats: 'Study Statistics',\r\n    examsTaken: 'Exams',\r\n    questionsAnswered: 'Questions',\r\n    accuracy: 'Accuracy'\r\n  },\r\n  browse: {\r\n    title: 'Browse Questions',\r\n    allQuestions: 'All Questions',\r\n    search: 'Search questions',\r\n    categories: {\r\n      traffic_signs: 'Traffic Signs',\r\n      traffic_rules: 'Traffic Rules',\r\n      priority: 'Priority Rules',\r\n      parking: 'Parking Rules',\r\n      speed_limits: 'Speed Limits',\r\n      highway: 'Highway Rules',\r\n      penalties: 'Penalties',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No questions found matching your criteria'\r\n  },\r\n  exam: {\r\n    title: 'Driving Test',\r\n    subtitle: 'Test your driving knowledge',\r\n    start: 'Start Test',\r\n    description: 'The test consists of 25 random questions from different categories. You need to answer at least 20 correctly to pass.',\r\n    timeLimit: 'Time Limit: 30 minutes',\r\n    questionCount: 'Question: {{current}} of {{total}}',\r\n    timeRemaining: 'Time: {{minutes}}:{{seconds}}',\r\n    submit: 'Submit Answers',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    finishExam: 'Finish Exam',\r\n    chooseMode: 'Choose Exam Mode',\r\n    customExam: 'Custom Exam',\r\n    questionCount: 'Question Count (5-50)',\r\n    timeLimit: 'Time Limit (minutes, 0 for unlimited)',\r\n    cancel: 'Cancel',\r\n    examPreparation: 'Exam Information',\r\n    examInfo: 'About Czech Driving Test',\r\n    examInfoLine1: 'The test has 25 questions, you need 20 correct answers to pass',\r\n    examInfoLine2: 'The time limit is 30 minutes',\r\n    examInfoLine3: 'Topics include traffic rules, signs, and safe driving',\r\n    examInfoLine4: 'This app provides a complete question bank and multilingual support',\r\n    fullExam: 'Full Exam',\r\n    practiceMode: 'Practice Mode',\r\n    quickTest: 'Quick Test',\r\n    exam: 'Exam'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Select an answer',\r\n    checkAnswer: 'Check Answer',\r\n    correct: 'Correct',\r\n    incorrect: 'Incorrect',\r\n    explanation: 'Explanation',\r\n    nextQuestion: 'Next Question',\r\n    loading: 'Loading question...'\r\n  },\r\n  result: {\r\n    title: 'Exam Results',\r\n    passed: 'Congratulations! You passed!',\r\n    failed: 'Unfortunately, you did not pass.',\r\n    score: 'Score: {{correct}}/{{total}}',\r\n    requiredToPass: 'Required to pass: 20/25',\r\n    reviewIncorrect: 'Review Incorrect Answers',\r\n    retakeExam: 'Retake Exam',\r\n    backToHome: 'Back to Home',\r\n    examDetails: 'Question Details',\r\n    yourAnswer: 'Your answer:',\r\n    correctAnswer: 'Correct answer:',\r\n    viewExplanation: 'View Explanation',\r\n    timeSpent: 'Time spent',\r\n    correctCount: 'Correct',\r\n    incorrectCount: 'Incorrect'\r\n  },\r\n  favorites: {\r\n    title: 'Favorite Questions',\r\n    noFavorites: 'You haven\\'t added any favorites yet',\r\n    browseToAdd: 'Browse questions and tap the heart icon to save important questions',\r\n    browseCatalog: 'Browse Questions',\r\n    removeFavorite: 'Remove from Favorites',\r\n    addFavorite: 'Add to Favorites',\r\n    edit: 'Edit',\r\n    cancel: 'Cancel',\r\n    delete: 'Delete',\r\n    selectAll: 'Select All',\r\n    deselectAll: 'Deselect All',\r\n    favoritesCount: '{{count}} questions saved',\r\n    viewDetails: 'View Details'\r\n  },\r\n  mistakes: {\r\n    title: 'Mistake Questions',\r\n    noMistakes: 'You haven\\'t made any mistakes yet!',\r\n    practiceToContinue: 'Continue practicing, questions you answer incorrectly will appear here',\r\n    startPractice: 'Start Practice',\r\n    mistakesCount: '{{count}} mistake questions',\r\n    sortNewest: 'Newest',\r\n    sortOldest: 'Oldest',\r\n    clearAll: 'Clear All',\r\n    clearConfirm: 'Are you sure you want to clear all mistake records? This cannot be undone.',\r\n    viewExplanation: 'View Explanation'\r\n  },\r\n  progress: {\r\n    title: 'Study Progress',\r\n    totalExams: 'Total Exams',\r\n    totalQuestions: 'Total Questions',\r\n    averageAccuracy: 'Avg. Accuracy',\r\n    recentActivity: 'Recent Activity',\r\n    noHistory: 'No study history yet',\r\n    startExam: 'Take an exam to start tracking your progress',\r\n    clearHistory: 'Clear History',\r\n    clearProgressConfirm: 'Are you sure you want to clear all study progress? This cannot be undone.',\r\n    clearProgressSuccess: 'Study progress has been cleared',\r\n    clearProgressError: 'Failed to clear study progress',\r\n    questions: 'Questions',\r\n    correct: 'Correct',\r\n    accuracy: 'Accuracy',\r\n    accuracyTrend: 'Accuracy Trend',\r\n    questionStats: 'Question Statistics',\r\n    notEnoughData: 'At least 2 exam records needed to show trend',\r\n    noData: 'No data available'\r\n  },\r\n  settings: {\r\n    title: 'Settings',\r\n    subtitle: 'Personalize your app experience',\r\n    language: 'Language',\r\n    about: 'About',\r\n    version: 'Version',\r\n    resetData: 'Reset All Data',\r\n    resetConfirm: 'Are you sure? This will delete all your saved data and cannot be undone.',\r\n    resetSuccess: 'All data has been reset.',\r\n    languages: {\r\n      en: 'English',\r\n      zh: 'Chinese',\r\n      cs: 'Czech',\r\n      es: 'Spanish'\r\n    },\r\n    appSettings: 'App Settings',\r\n    dailyReminder: 'Daily Reminder',\r\n    reminderDescription: 'Receive daily study reminders',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDescription: 'Use night mode to protect your eyes',\r\n    appInfo: 'App Information',\r\n    rateApp: 'Rate App',\r\n    privacyPolicy: 'Privacy Policy',\r\n    appVersion: 'Czech Driving License App v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Loading...',\r\n    error: 'Error',\r\n    cancel: 'Cancel',\r\n    confirm: 'Confirm',\r\n    save: 'Save',\r\n    delete: 'Delete',\r\n    edit: 'Edit',\r\n    done: 'Done',\r\n    yes: 'Yes',\r\n    no: 'No',\r\n    success: 'Success'\r\n  }\r\n};\r\n\r\nexport default en; ","// Spanish translations\r\nconst es = {\r\n  navigation: {\r\n    home: 'Inicio',\r\n    browse: 'Explorar',\r\n    exam: 'Examen',\r\n    favorites: 'Favoritos',\r\n    mistakes: 'Errores',\r\n    settings: 'Ajustes',\r\n    question_detail: 'Detalle de pregunta',\r\n    exam_result: 'Resultado del examen'\r\n  },\r\n  home: {\r\n    title: 'App de Licencia de Conducir Checa',\r\n    subtitle: 'Prepárate para tu examen de conducir checo con nuestra guía completa',\r\n    startExam: 'Iniciar Examen',\r\n    examDescription: 'Comienza un examen simulado con 25 preguntas aleatorias',\r\n    browseTopic: 'Explorar Preguntas',\r\n    browseDescription: 'Explora todas las preguntas por categoría',\r\n    reviewMistakes: 'Revisar Errores',\r\n    mistakesDescription: 'Practica las preguntas que respondiste incorrectamente',\r\n    favorites: 'Favoritos',\r\n    favoritesDescription: 'Revisa tus preguntas guardadas',\r\n    studyStats: 'Estadísticas de Estudio',\r\n    examsTaken: 'Exámenes',\r\n    questionsAnswered: 'Preguntas',\r\n    accuracy: 'Precisión'\r\n  },\r\n  browse: {\r\n    title: 'Explorar Preguntas',\r\n    allQuestions: 'Todas las Preguntas',\r\n    search: 'Buscar preguntas',\r\n    categories: {\r\n      traffic_signs: 'Señales de Tráfico',\r\n      traffic_rules: 'Normas de Tráfico',\r\n      priority: 'Reglas de Prioridad',\r\n      parking: 'Reglas de Estacionamiento',\r\n      speed_limits: 'Límites de Velocidad',\r\n      highway: 'Reglas de Autopista',\r\n      penalties: 'Sanciones',\r\n      general: 'General'\r\n    },\r\n    noQuestionsFound: 'No se encontraron preguntas que coincidan con tus criterios'\r\n  },\r\n  exam: {\r\n    title: 'Examen de Conducir',\r\n    subtitle: 'Pon a prueba tus conocimientos de conducción',\r\n    start: 'Iniciar Examen',\r\n    description: 'El examen consta de 25 preguntas aleatorias de diferentes categorías. Necesitas responder correctamente al menos 20 para aprobar.',\r\n    timeLimit: 'Límite de tiempo: 30 minutos',\r\n    questionCount: 'Pregunta: {{current}} de {{total}}',\r\n    timeRemaining: 'Tiempo: {{minutes}}:{{seconds}}',\r\n    submit: 'Enviar Respuestas',\r\n    next: 'Siguiente',\r\n    previous: 'Anterior',\r\n    finishExam: 'Finalizar Examen',\r\n    chooseMode: 'Elegir Modo de Examen',\r\n    customExam: 'Examen Personalizado',\r\n    questionCount: 'Número de preguntas (5-50)',\r\n    timeLimit: 'Límite de tiempo (minutos, 0 para ilimitado)',\r\n    cancel: 'Cancelar',\r\n    examPreparation: 'Información del Examen',\r\n    examInfo: '• El examen teórico checo tiene 25 preguntas, necesitas 20 respuestas correctas para aprobar\\n• El límite de tiempo es de 30 minutos\\n• Por favor, realiza el examen en un ambiente tranquilo\\n• No salgas de la aplicación durante el examen'\r\n  },\r\n  question: {\r\n    selectAnswer: 'Selecciona una respuesta',\r\n    checkAnswer: 'Comprobar Respuesta',\r\n    correct: 'Correcto',\r\n    incorrect: 'Incorrecto',\r\n    explanation: 'Explicación',\r\n    nextQuestion: 'Siguiente Pregunta',\r\n    loading: 'Cargando pregunta...'\r\n  },\r\n  result: {\r\n    title: 'Resultados del Examen',\r\n    passed: '¡Felicidades! ¡Has aprobado!',\r\n    failed: 'Lamentablemente, no has aprobado.',\r\n    score: 'Puntuación: {{correct}}/{{total}}',\r\n    requiredToPass: 'Necesario para aprobar: 20/25',\r\n    reviewIncorrect: 'Revisar Respuestas Incorrectas',\r\n    retakeExam: 'Volver a Hacer el Examen',\r\n    backToHome: 'Volver al Inicio',\r\n    examDetails: 'Detalles de Preguntas',\r\n    yourAnswer: 'Tu respuesta:',\r\n    correctAnswer: 'Respuesta correcta:',\r\n    viewExplanation: 'Ver Explicación',\r\n    timeSpent: 'Tiempo empleado',\r\n    correctCount: 'Correctas',\r\n    incorrectCount: 'Incorrectas'\r\n  },\r\n  favorites: {\r\n    title: 'Preguntas Favoritas',\r\n    noFavorites: 'Aún no has añadido ningún favorito',\r\n    browseToAdd: 'Explora preguntas y toca el icono de corazón para guardar preguntas importantes',\r\n    browseCatalog: 'Explorar Preguntas',\r\n    removeFavorite: 'Eliminar de Favoritos',\r\n    addFavorite: 'Añadir a Favoritos',\r\n    edit: 'Editar',\r\n    cancel: 'Cancelar',\r\n    delete: 'Eliminar',\r\n    selectAll: 'Seleccionar Todo',\r\n    deselectAll: 'Deseleccionar Todo',\r\n    favoritesCount: '{{count}} preguntas guardadas',\r\n    viewDetails: 'Ver Detalles'\r\n  },\r\n  mistakes: {\r\n    title: 'Preguntas Erróneas',\r\n    noMistakes: '¡Aún no has cometido ningún error!',\r\n    practiceToContinue: 'Continúa practicando, las preguntas que respondas incorrectamente aparecerán aquí',\r\n    startPractice: 'Comenzar Práctica',\r\n    mistakesCount: '{{count}} preguntas erróneas',\r\n    sortNewest: 'Más recientes',\r\n    sortOldest: 'Más antiguas',\r\n    clearAll: 'Borrar Todo',\r\n    clearConfirm: '¿Estás seguro de que quieres borrar todos los registros de errores? Esta acción no se puede deshacer.',\r\n    viewExplanation: 'Ver Explicación'\r\n  },\r\n  settings: {\r\n    title: 'Ajustes',\r\n    subtitle: 'Personaliza tu experiencia en la aplicación',\r\n    language: 'Idioma',\r\n    about: 'Acerca de',\r\n    version: 'Versión',\r\n    resetData: 'Resetear Todos los Datos',\r\n    resetConfirm: '¿Estás seguro? Esto eliminará todos tus datos guardados y no se puede deshacer.',\r\n    resetSuccess: 'Todos los datos han sido reseteados.',\r\n    languages: {\r\n      en: 'Inglés',\r\n      zh: 'Chino',\r\n      cs: 'Checo',\r\n      es: 'Español'\r\n    },\r\n    appSettings: 'Ajustes de la Aplicación',\r\n    dailyReminder: 'Recordatorio Diario',\r\n    reminderDescription: 'Recibir recordatorios diarios de estudio',\r\n    darkMode: 'Modo Oscuro',\r\n    darkModeDescription: 'Usar modo nocturno para proteger tus ojos',\r\n    appInfo: 'Información de la Aplicación',\r\n    rateApp: 'Valorar Aplicación',\r\n    privacyPolicy: 'Política de Privacidad',\r\n    appVersion: 'App de Licencia de Conducir Checa v1.0.0'\r\n  },\r\n  common: {\r\n    loading: 'Cargando...',\r\n    error: 'Error',\r\n    cancel: 'Cancelar',\r\n    confirm: 'Confirmar',\r\n    save: 'Guardar',\r\n    delete: 'Eliminar',\r\n    edit: 'Editar',\r\n    done: 'Hecho',\r\n    yes: 'Sí',\r\n    no: 'No'\r\n  }\r\n};\r\n\r\nexport default es; ","// 中文翻译\r\nconst zh = {\r\n  navigation: {\r\n    home: '首页',\r\n    browse: '浏览',\r\n    exam: '考试',\r\n    favorites: '收藏',\r\n    mistakes: '错题',\r\n    settings: '设置',\r\n    question_detail: '题目详情',\r\n    exam_result: '考试结果',\r\n    study_progress: '学习进度'\r\n  },\r\n  home: {\r\n    title: '捷克驾考宝典',\r\n    subtitle: '全面帮助您准备捷克驾驶考试',\r\n    startExam: '开始考试',\r\n    examDescription: '开始模拟驾照考试，共30道随机题目',\r\n    browseTopic: '浏览题库',\r\n    browseDescription: '按类别查看所有考题',\r\n    reviewMistakes: '复习错题',\r\n    mistakesDescription: '练习之前答错的问题',\r\n    favorites: '我的收藏',\r\n    favoritesDescription: '复习保存的题目',\r\n    studyStats: '学习统计',\r\n    examsTaken: '考试次数',\r\n    questionsAnswered: '已答题目',\r\n    accuracy: '正确率'\r\n  },\r\n  browse: {\r\n    title: '浏览题库',\r\n    allQuestions: '所有题目',\r\n    search: '搜索题目',\r\n    categories: {\r\n      traffic_signs: '交通标志',\r\n      traffic_rules: '交通规则',\r\n      priority: '优先通行权',\r\n      parking: '停车规则',\r\n      speed_limits: '速度限制',\r\n      highway: '高速公路',\r\n      penalties: '违章处罚',\r\n      general: '一般问题'\r\n    },\r\n    noQuestionsFound: '没有找到匹配的题目'\r\n  },\r\n  exam: {\r\n    title: '驾照考试',\r\n    subtitle: '测试您的驾照知识',\r\n    start: '开始考试',\r\n    description: '考试包括25道来自不同类别的随机题目。要通过考试，至少需要答对20题。',\r\n    timeLimit: '时间限制：30分钟',\r\n    questionCount: '问题: {{current}}/{{total}}',\r\n    timeRemaining: '时间: {{minutes}}:{{seconds}}',\r\n    submit: '提交答案',\r\n    next: '下一题',\r\n    previous: '上一题',\r\n    finishExam: '完成考试',\r\n    chooseMode: '选择考试模式',\r\n    customExam: '自定义考试',\r\n    questionCount: '题目数量 (5-50)',\r\n    timeLimit: '时间限制 (分钟，0为无限制)',\r\n    cancel: '取消',\r\n    examPreparation: '考试须知',\r\n    examInfo: '关于捷克驾照考试',\r\n    examInfoLine1: '考试包含25道选择题，答对至少20题才能通过',\r\n    examInfoLine2: '考试时间为30分钟',\r\n    examInfoLine3: '考试内容包括交通规则、标志和安全驾驶',\r\n    examInfoLine4: '本应用提供完整的题库和多语言支持',\r\n    fullExam: '完整模拟',\r\n    practiceMode: '练习模式',\r\n    quickTest: '快速测试',\r\n    exam: '考试'\r\n  },\r\n  question: {\r\n    selectAnswer: '选择答案',\r\n    checkAnswer: '检查答案',\r\n    correct: '正确',\r\n    incorrect: '错误',\r\n    explanation: '解释',\r\n    nextQuestion: '下一题',\r\n    loading: '加载题目中...'\r\n  },\r\n  result: {\r\n    title: '考试结果',\r\n    passed: '恭喜，考试通过！',\r\n    failed: '很遗憾，考试未通过',\r\n    score: '得分: {{correct}}/{{total}}',\r\n    requiredToPass: '通过要求: 20/25',\r\n    reviewIncorrect: '复习错题',\r\n    retakeExam: '重新考试',\r\n    backToHome: '返回首页',\r\n    examDetails: '题目详情',\r\n    yourAnswer: '您的回答:',\r\n    correctAnswer: '正确答案:',\r\n    viewExplanation: '查看解析',\r\n    timeSpent: '用时',\r\n    correctCount: '正确',\r\n    incorrectCount: '错误'\r\n  },\r\n  favorites: {\r\n    title: '收藏题目',\r\n    noFavorites: '您还没有添加任何收藏题目',\r\n    browseToAdd: '浏览题库时点击心形图标来收藏重要题目',\r\n    browseCatalog: '浏览题库',\r\n    removeFavorite: '取消收藏',\r\n    addFavorite: '添加收藏',\r\n    edit: '编辑',\r\n    cancel: '取消',\r\n    delete: '删除',\r\n    selectAll: '全选',\r\n    deselectAll: '取消全选',\r\n    favoritesCount: '已收藏 {{count}} 个题目',\r\n    viewDetails: '查看详情'\r\n  },\r\n  mistakes: {\r\n    title: '错题记录',\r\n    noMistakes: '您还没有任何错题记录!',\r\n    practiceToContinue: '继续刷题，答错的题目将自动记录在这里',\r\n    startPractice: '开始做题',\r\n    mistakesCount: '共有 {{count}} 道错题',\r\n    sortNewest: '最新',\r\n    sortOldest: '最早',\r\n    clearAll: '清空',\r\n    clearConfirm: '确定要清空所有错题记录吗？此操作不可恢复。',\r\n    viewExplanation: '查看解析'\r\n  },\r\n  progress: {\r\n    title: '学习进度',\r\n    totalExams: '考试总数',\r\n    totalQuestions: '题目总数',\r\n    averageAccuracy: '平均正确率',\r\n    recentActivity: '最近活动',\r\n    noHistory: '暂无学习记录',\r\n    startExam: '参加考试开始记录您的学习进度',\r\n    clearHistory: '清除历史',\r\n    clearProgressConfirm: '确定要清除所有学习进度记录吗？此操作不可恢复。',\r\n    clearProgressSuccess: '学习进度已清除',\r\n    clearProgressError: '清除学习进度失败',\r\n    questions: '题目',\r\n    correct: '正确',\r\n    accuracy: '正确率',\r\n    accuracyTrend: '正确率趋势',\r\n    questionStats: '答题统计',\r\n    notEnoughData: '至少需要2次考试记录才能显示趋势图',\r\n    noData: '暂无数据'\r\n  },\r\n  settings: {\r\n    title: '设置',\r\n    subtitle: '个性化您的应用体验',\r\n    language: '语言设置',\r\n    about: '关于应用',\r\n    version: '版本号',\r\n    resetData: '重置所有数据',\r\n    resetConfirm: '确定吗？这将删除您保存的所有数据，且无法恢复。',\r\n    resetSuccess: '所有数据已重置。',\r\n    languages: {\r\n      en: '英语',\r\n      zh: '中文',\r\n      cs: '捷克语',\r\n      es: '西班牙语'\r\n    },\r\n    appSettings: '应用设置',\r\n    dailyReminder: '每日提醒',\r\n    reminderDescription: '接收每日学习提醒',\r\n    darkMode: '暗黑模式',\r\n    darkModeDescription: '使用夜间模式保护眼睛',\r\n    appInfo: '应用信息',\r\n    rateApp: '评分应用',\r\n    privacyPolicy: '隐私政策',\r\n    appVersion: '捷克驾考宝典 v1.0.0'\r\n  },\r\n  common: {\r\n    loading: '加载中...',\r\n    error: '错误',\r\n    cancel: '取消',\r\n    confirm: '确认',\r\n    save: '保存',\r\n    delete: '删除',\r\n    edit: '编辑',\r\n    done: '完成',\r\n    yes: '是',\r\n    no: '否',\r\n    success: '成功'\r\n  }\r\n};\r\n\r\nexport default zh; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport cs from './translations/cs';\r\nimport en from './translations/en';\r\nimport es from './translations/es';\r\nimport zh from './translations/zh';\r\n\r\n// 标记初始化状态\r\nlet isInitialized = false;\r\n\r\n// 初始化i18n\r\nconst initI18n = async () => {\r\n  if (isInitialized) {\r\n    console.log('i18n already initialized, skipping');\r\n    return;\r\n  }\r\n\r\n  // 尝试从存储中获取用户语言设置\r\n  let userLanguage = 'zh'; // 默认语言\r\n  try {\r\n    const storedLanguage = await AsyncStorage.getItem('userLanguage');\r\n    if (storedLanguage) {\r\n      userLanguage = storedLanguage;\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load language setting', error);\r\n  }\r\n\r\n  await i18n\r\n    .use(initReactI18next)\r\n    .init({\r\n      resources: {\r\n        en: { translation: en },\r\n        zh: { translation: zh },\r\n        cs: { translation: cs },\r\n        es: { translation: es }\r\n      },\r\n      lng: userLanguage,\r\n      fallbackLng: 'zh',\r\n      interpolation: {\r\n        escapeValue: false\r\n      },\r\n      compatibilityJSON: 'v3'\r\n    });\r\n\r\n  // 标记为已初始化\r\n  isInitialized = true;\r\n  return i18n;\r\n};\r\n\r\n/**\r\n * 检查i18n是否已初始化\r\n * @returns {boolean}\r\n */\r\nexport const isI18nInitialized = () => {\r\n  return isInitialized;\r\n};\r\n\r\n// 导出已经初始化的i18n实例，方便直接使用\r\nexport { i18n };\r\n\r\nexport default initI18n; ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\n\r\n/**\r\n * 题目语言切换组件\r\n * @param {Object} props\r\n * @param {string} props.currentLanguage - 当前选择的语言代码\r\n * @param {Function} props.onChangeLanguage - 切换语言的回调函数\r\n */\r\nconst QuestionLanguageSwitcher = ({ currentLanguage, onChangeLanguage }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  const languages = [\r\n    { code: 'zh', name: '中文', icon: 'language-outline' },\r\n    { code: 'en', name: 'EN', icon: 'language-outline' },\r\n    { code: 'cs', name: 'CZ', icon: 'language-outline' },\r\n    { code: 'es', name: 'ES', icon: 'language-outline' }\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {languages.map((lang) => (\r\n        <TouchableOpacity\r\n          key={lang.code}\r\n          style={[\r\n            styles.languageButton,\r\n            currentLanguage === lang.code && styles.activeLanguageButton\r\n          ]}\r\n          onPress={() => onChangeLanguage(lang.code)}\r\n        >\r\n          <Text\r\n            style={[\r\n              styles.languageText,\r\n              currentLanguage === lang.code && styles.activeLanguageText\r\n            ]}\r\n          >\r\n            {lang.name}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical: 8,\r\n    paddingHorizontal: 8,\r\n    backgroundColor: 'rgba(255,255,255,0.9)',\r\n    borderRadius: 20,\r\n    alignSelf: 'center',\r\n  },\r\n  languageButton: {\r\n    paddingVertical: 6,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 16,\r\n    marginHorizontal: 4,\r\n  },\r\n  activeLanguageButton: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  languageText: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  activeLanguageText: {\r\n    color: '#ffffff',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default QuestionLanguageSwitcher; ","// 交通信号图标映射，与信号文件名关联\r\n// 预定义一个完整的交通信号图标对象\r\nconst trafficSignalImages = {\r\n  1: require('../../assets/signals/signal1.png'),\r\n  2: require('../../assets/signals/signal2.png'),\r\n  3: require('../../assets/signals/signal3.png'),\r\n  4: require('../../assets/signals/signal4.png'),\r\n  5: require('../../assets/signals/signal5.png'),\r\n  6: require('../../assets/signals/signal6.png'),\r\n  7: require('../../assets/signals/signal7.png'),\r\n  8: require('../../assets/signals/signal8.png'),\r\n  9: require('../../assets/signals/signal9.png'),\r\n  10: require('../../assets/signals/signal10.png'),\r\n  11: require('../../assets/signals/signal11.png'),\r\n  12: require('../../assets/signals/signal12.png'),\r\n  13: require('../../assets/signals/signal13.png'),\r\n  14: require('../../assets/signals/signal14.png'),\r\n  15: require('../../assets/signals/signal15.png'),\r\n  16: require('../../assets/signals/signal16.png'),\r\n  17: require('../../assets/signals/signal17.png'),\r\n  18: require('../../assets/signals/signal18.png'),\r\n  19: require('../../assets/signals/signal19.png'),\r\n  20: require('../../assets/signals/signal20.png'),\r\n  21: require('../../assets/signals/signal21.png'),\r\n  22: require('../../assets/signals/signal22.png'),\r\n  23: require('../../assets/signals/signal23.png'),\r\n  24: require('../../assets/signals/signal24.png'),\r\n  25: require('../../assets/signals/signal25.png'),\r\n  26: require('../../assets/signals/signal26.png'),\r\n  27: require('../../assets/signals/signal27.png'),\r\n  28: require('../../assets/signals/signal28.png'),\r\n  29: require('../../assets/signals/signal29.png'),\r\n  30: require('../../assets/signals/signal30.png'),\r\n  31: require('../../assets/signals/signal31.png'),\r\n  32: require('../../assets/signals/signal32.png'),\r\n  33: require('../../assets/signals/signal33.png'),\r\n  34: require('../../assets/signals/signal34.png'),\r\n  35: require('../../assets/signals/signal35.png'),\r\n  36: require('../../assets/signals/signal36.png'),\r\n  37: require('../../assets/signals/signal37.png'),\r\n  38: require('../../assets/signals/signal38.png'),\r\n  39: require('../../assets/signals/signal39.png'),\r\n  40: require('../../assets/signals/signal40.png'),\r\n  41: require('../../assets/signals/signal41.png'),\r\n  42: require('../../assets/signals/signal42.png'),\r\n  43: require('../../assets/signals/signal43.png'),\r\n  44: require('../../assets/signals/signal44.png'),\r\n  45: require('../../assets/signals/signal45.png'),\r\n  46: require('../../assets/signals/signal46.png'),\r\n  47: require('../../assets/signals/signal47.png'),\r\n  48: require('../../assets/signals/signal48.png'),\r\n  49: require('../../assets/signals/signal49.png'),\r\n  50: require('../../assets/signals/signal50.png'),\r\n  51: require('../../assets/signals/signal51.png'),\r\n  52: require('../../assets/signals/signal52.png'),\r\n  53: require('../../assets/signals/signal53.png'),\r\n};\r\n\r\n// 在文件开头添加图片映射\r\n// 预加载所有实际存在的图片\r\nconst imageAssets = {\r\n  '2': require('../../assets/images/image2.png'),\r\n  '3': require('../../assets/images/image3.png'),\r\n  '4': require('../../assets/images/image4.png'),\r\n  '5': require('../../assets/images/image5.png'),\r\n  '6': require('../../assets/images/image6.png'),\r\n  '7': require('../../assets/images/image7.png'),\r\n  '8': require('../../assets/images/image8.png'),\r\n  '9': require('../../assets/images/image9.png'),\r\n  '20': require('../../assets/images/image20.png'),\r\n  '21': require('../../assets/images/image21.png'),\r\n  '22': require('../../assets/images/image22.png'),\r\n  '23': require('../../assets/images/image23.png'),\r\n  '24': require('../../assets/images/image24.png'),\r\n  '25': require('../../assets/images/image25.png'),\r\n  '26': require('../../assets/images/image26.png'),\r\n  '27': require('../../assets/images/image27.png'),\r\n  '28': require('../../assets/images/image28.png'),\r\n  '29': require('../../assets/images/image29.png'),\r\n  '30': require('../../assets/images/image30.png'),\r\n  '31': require('../../assets/images/image31.png'),\r\n  '32': require('../../assets/images/image32.png'),\r\n  '33': require('../../assets/images/image33.png'),\r\n  '34': require('../../assets/images/image34.png'),\r\n  '35': require('../../assets/images/image35.png'),\r\n  '36': require('../../assets/images/image36.png'),\r\n  '37': require('../../assets/images/image37.png'),\r\n  '38': require('../../assets/images/image38.png'),\r\n  '39': require('../../assets/images/image39.png'),\r\n  '40': require('../../assets/images/image40.png'),\r\n  '41': require('../../assets/images/image41.png'),\r\n  '42': require('../../assets/images/image42.png'),\r\n  '43': require('../../assets/images/image43.png'),\r\n  '44': require('../../assets/images/image44.png'),\r\n  '45': require('../../assets/images/image45.png'),\r\n  '46': require('../../assets/images/image46.png'),\r\n  '47': require('../../assets/images/image47.png'),\r\n  '48': require('../../assets/images/image48.png'),\r\n  '49': require('../../assets/images/image49.png'),\r\n  '50': require('../../assets/images/image50.png'),\r\n  '51': require('../../assets/images/image51.png'),\r\n  '52': require('../../assets/images/image52.png'),\r\n  '53': require('../../assets/images/image53.png'),\r\n  '54': require('../../assets/images/image54.png'),\r\n  '55': require('../../assets/images/image55.png'),\r\n  '56': require('../../assets/images/image56.png'),\r\n  '57': require('../../assets/images/image57.png'),\r\n  '58': require('../../assets/images/image58.png'),\r\n  '59': require('../../assets/images/image59.png'),\r\n  '60': require('../../assets/images/image60.png'),\r\n  '61': require('../../assets/images/image61.png'),\r\n  '62': require('../../assets/images/image62.png'),\r\n  '63': require('../../assets/images/image63.png'),\r\n  '64': require('../../assets/images/image64.png'),\r\n  '65': require('../../assets/images/image65.png'),\r\n  '66': require('../../assets/images/image66.png'),\r\n  '67': require('../../assets/images/image67.png'),\r\n  '68': require('../../assets/images/image68.png'),\r\n  '69': require('../../assets/images/image69.png'),\r\n  '70': require('../../assets/images/image70.png'),\r\n  '71': require('../../assets/images/image71.png'),\r\n  '72': require('../../assets/images/image72.png'),\r\n  '73': require('../../assets/images/image73.png'),\r\n  '74': require('../../assets/images/image74.png'),\r\n  '75': require('../../assets/images/image75.png'),\r\n  '76': require('../../assets/images/image76.png'),\r\n  '77': require('../../assets/images/image77.png'),\r\n  '78': require('../../assets/images/image78.png'),\r\n  '79': require('../../assets/images/image79.png'),\r\n  '80': require('../../assets/images/image80.png'),\r\n  '81': require('../../assets/images/image81.png'),\r\n  '82': require('../../assets/images/image82.png'),\r\n  '83': require('../../assets/images/image83.png'),\r\n  '84': require('../../assets/images/image84.png'),\r\n  '85': require('../../assets/images/image85.png'),\r\n  '86': require('../../assets/images/image86.png'),\r\n  '87': require('../../assets/images/image87.png'),\r\n  '88': require('../../assets/images/image88.png'),\r\n  '89': require('../../assets/images/image89.png'),\r\n  '90': require('../../assets/images/image90.png'),\r\n  '91': require('../../assets/images/image91.png'),\r\n  '92': require('../../assets/images/image92.png'),\r\n  '93': require('../../assets/images/image93.png'),\r\n  '94': require('../../assets/images/image94.png'),\r\n  '95': require('../../assets/images/image95.png'),\r\n  '96': require('../../assets/images/image96.png'),\r\n  '97': require('../../assets/images/image97.png'),\r\n  '98': require('../../assets/images/image98.png'),\r\n  '99': require('../../assets/images/image99.png'),\r\n};\r\n\r\n/**\r\n * 获取问题的翻译版本\r\n * @param {Object} question - 题目对象\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Object} 处理后的题目对象\r\n */\r\nconst getQuestionTranslation = (question, language = 'zh') => {\r\n  try {\r\n    if (!question) {\r\n      throw new Error('题目对象为空');\r\n    }\r\n    \r\n    // 如果问题有翻译字段且包含请求的语言\r\n    if (question.translations && question.translations[language]) {\r\n      const translation = question.translations[language];\r\n      \r\n      // 验证翻译数据的完整性\r\n      if (!translation.question || !translation.answers || !Array.isArray(translation.answers)) {\r\n        throw new Error(`语言 ${language} 的翻译数据不完整`);\r\n      }\r\n      \r\n      // 创建一个新的问题对象，保留原始问题的属性\r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有请求语言的翻译，尝试使用中文版本\r\n    if (language !== 'zh' && question.translations && question.translations.zh) {\r\n      console.warn(`未找到语言 ${language} 的翻译，使用中文版本`);\r\n      const translation = question.translations.zh;\r\n      \r\n      return {\r\n        ...question,\r\n        question: translation.question,\r\n        answers: translation.answers.map(ans => ({\r\n          text: ans.text,\r\n          correct: ans.correct\r\n        }))\r\n      };\r\n    }\r\n    \r\n    // 如果没有任何翻译，抛出错误\r\n    throw new Error(`题目 ${question.id || '未知'} 没有可用的翻译`);\r\n  } catch (error) {\r\n    console.error('获取题目翻译时出错:', error, question);\r\n    // 返回一个带有错误信息的题目对象\r\n    return {\r\n      ...question,\r\n      question: `[翻译错误] ${error.message}`,\r\n      answers: question.answers || [],\r\n      hasError: true\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 加载题目数据集\r\n * @param {number} setNumber - 题目集编号\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 题目数组\r\n */\r\nexport const loadQuestionSet = async (setNumber = 0, language = 'zh') => {\r\n  try {\r\n    // 动态导入JSON数据\r\n    let questionSet;\r\n    \r\n    try {\r\n      if (setNumber === 0) {\r\n        questionSet = await import('../../assets/data/setofquestions0.json');\r\n      } else if (setNumber === 1) {\r\n        questionSet = await import('../../assets/data/setofquestions1.json');\r\n      } else if (setNumber === 2) {\r\n        questionSet = await import('../../assets/data/setofquestions2.json');\r\n      } else {\r\n        // 默认加载第2集的修复版本\r\n        questionSet = await import('../../assets/data/setofquestions3.json');\r\n      }\r\n      console.log(`加载题库 ${setNumber}`);\r\n    } catch (error) {\r\n      console.warn(`加载题集 ${setNumber} 失败，使用默认题集2: ${error.message}`);\r\n    }\r\n    \r\n    // 确保我们有可用的数据\r\n    if (!questionSet) {\r\n      throw new Error(`题库 ${setNumber} 数据为空`);\r\n    }\r\n    \r\n    const questions = Array.isArray(questionSet.default) ? questionSet.default : questionSet;\r\n    \r\n    // 处理题目中的图片引用并应用翻译\r\n    return questions.map(question => {\r\n      // 获取翻译后的问题\r\n      const translatedQuestion = getQuestionTranslation(question, language);\r\n      \r\n      // 确保answers字段格式正确\r\n      if (translatedQuestion.answers) {\r\n        translatedQuestion.options = translatedQuestion.answers.map((ans, idx) => ({\r\n          id: String.fromCharCode(65 + idx), // A, B, C...\r\n          text: ans.text,\r\n          isCorrect: ans.correct\r\n        }));\r\n      }\r\n      \r\n      // 如果有picture属性，提取信号ID\r\n      if (translatedQuestion.picture) {\r\n        const signalMatch = translatedQuestion.picture.match(/signal(\\d+)/i);\r\n        if (signalMatch && signalMatch[1]) {\r\n          const signalId = parseInt(signalMatch[1], 10);\r\n          if (trafficSignalImages[signalId]) {\r\n            translatedQuestion.signalImage = trafficSignalImages[signalId];\r\n          }\r\n        } else if (translatedQuestion.picture.includes('images/image')) {\r\n          // 处理普通图片路径，如 \"images/image47.png\"\r\n          try {\r\n            const imageMatch = translatedQuestion.picture.match(/images\\/image(\\d+)\\.png/i);\r\n            if (imageMatch && imageMatch[1]) {\r\n              const imageNumber = imageMatch[1];\r\n              // 使用预加载的图片资源\r\n              if (imageAssets[imageNumber]) {\r\n                translatedQuestion.signalImage = imageAssets[imageNumber];\r\n                console.log(`加载图片: image${imageNumber}.png`);\r\n              } else {\r\n                console.warn(`未预加载图片: image${imageNumber}.png`);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.warn(`无法加载图片: ${translatedQuestion.picture}`, error);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 确保所有必要的字段都存在\r\n      return {\r\n        ...translatedQuestion,\r\n        id: translatedQuestion.id || `temp_${setNumber}_${Math.random().toString(36).substr(2, 9)}`,\r\n        category: translatedQuestion.category || 'general',\r\n        answers: translatedQuestion.answers || [],\r\n        options: translatedQuestion.options || []\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.error(`Failed to load question set ${setNumber}:`, error);\r\n    throw error; // 抛出错误以便上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 加载所有题目数据集\r\n * @param {string} language - 语言代码 (zh, en, cs, es)\r\n * @returns {Promise<Array>} 合并后的题目数组\r\n */\r\nexport const loadAllQuestionSets = async (language = 'zh') => {\r\n  try {\r\n    const sets = [];\r\n    const errors = [];\r\n    \r\n    // 只尝试加载已知存在的题目集\r\n    const availableSets = [0, 1, 2, 3];\r\n    \r\n    for (const setNumber of availableSets) {\r\n      try {\r\n        console.log(`尝试加载题集 ${setNumber}...`);\r\n        const set = await loadQuestionSet(setNumber, language);\r\n        \r\n        if (set && Array.isArray(set)) {\r\n          console.log(`成功加载题集 ${setNumber}, 共 ${set.length} 题`);\r\n          sets.push(...set);\r\n        } else {\r\n          console.warn(`题集 ${setNumber} 加载成功但格式无效`);\r\n          errors.push(`题目集 ${setNumber} 格式无效`);\r\n        }\r\n      } catch (e) {\r\n        console.error(`题目集 ${setNumber} 加载失败:`, e.message);\r\n        errors.push(`题目集 ${setNumber} 加载失败: ${e.message}`);\r\n        // 继续加载其他题集，不中断流程\r\n      }\r\n    }\r\n    \r\n    // 如果至少加载了一个题集\r\n    if (sets.length > 0) {\r\n      console.log(`总共加载了 ${sets.length} 道题目`);\r\n      \r\n      if (errors.length > 0) {\r\n        // 记录错误但不阻止应用运行\r\n        console.warn('加载过程中出现以下错误:', errors.join('; '));\r\n      }\r\n      \r\n      return sets;\r\n    }\r\n    \r\n    // 如果一个题集都没加载成功，尝试返回一个最小题集\r\n    console.error('没有成功加载任何题集，使用备用题集');\r\n    \r\n    try {\r\n      const backupQuestions = await import('../../assets/data/setofquestions3.json');\r\n      const questions = Array.isArray(backupQuestions.default) ? backupQuestions.default : backupQuestions;\r\n      return questions;\r\n    } catch (backupError) {\r\n      // 如果连备用选项都失败了，抛出累积的错误\r\n      throw new Error(`无法加载任何题库: ${errors.join('; ')}`);\r\n    }\r\n  } catch (error) {\r\n    console.error('加载所有题目集时出错:', error);\r\n    throw error; // 让上层处理\r\n  }\r\n};\r\n\r\n/**\r\n * 获取交通信号图标\r\n * @param {number} signalId - 信号ID\r\n * @returns {object} 图标资源\r\n */\r\nexport const getTrafficSignalImage = (signalId) => {\r\n  return trafficSignalImages[signalId] || null;\r\n};\r\n\r\n/**\r\n * 根据类别获取题目\r\n * @param {string} category - 题目类别\r\n * @param {string} language - 语言代码\r\n * @returns {Promise<Array>} 过滤后的题目数组\r\n */\r\nexport const getQuestionsByCategory = async (category, language = 'zh') => {\r\n  const allQuestions = await loadAllQuestionSets(language);\r\n  \r\n  if (!category || category === 'all') {\r\n    return allQuestions;\r\n  }\r\n  \r\n  return allQuestions.filter(q => q.category === category);\r\n};\r\n\r\n/**\r\n * 获取所有可用的题目分类\r\n * @returns {Promise<Array>} 分类数组\r\n */\r\nexport const getAllCategories = async () => {\r\n  try {\r\n    const questions = await loadAllQuestionSets();\r\n    \r\n    if (!Array.isArray(questions) || questions.length === 0) {\r\n      console.warn('获取分类时发现题目数据为空或无效');\r\n      return ['general']; // 返回默认分类\r\n    }\r\n    \r\n    // 使用Set去重\r\n    const categories = Array.from(new Set(\r\n      questions\r\n        .filter(q => q && q.category) // 过滤掉没有分类的题目\r\n        .map(q => q.category)\r\n    ));\r\n    \r\n    // 如果没有找到任何分类，返回一个默认值\r\n    if (categories.length === 0) {\r\n      console.warn('未找到任何分类，使用默认分类');\r\n      return ['general'];\r\n    }\r\n    \r\n    return categories;\r\n  } catch (error) {\r\n    console.error('获取分类失败:', error);\r\n    return ['general']; // 出错时返回默认分类，避免应用崩溃\r\n  }\r\n};\r\n\r\n/**\r\n * 获取中文分类名称\r\n * @param {string} category - 原始类别名\r\n * @returns {string} 中文分类名\r\n */\r\nexport const getChineseCategoryName = (category) => {\r\n  const categoryMap = {\r\n    'traffic_signs': '交通标志',\r\n    'rules': '交通规则',\r\n    'safety': '安全常识',\r\n    'vehicle': '车辆知识',\r\n    'emergency': '应急处理',\r\n    'all': '所有题目'\r\n  };\r\n  \r\n  return categoryMap[category] || category;\r\n};\r\n\r\nexport default {\r\n  loadQuestionSet,\r\n  loadAllQuestionSets,\r\n  getTrafficSignalImage,\r\n  getQuestionsByCategory,\r\n  getAllCategories,\r\n  getChineseCategoryName,\r\n  getQuestionTranslation\r\n};","/**\r\n * 样式工具函数\r\n * \r\n * 这个文件提供了帮助处理样式相关问题的工具函数\r\n */\r\n\r\n\r\n/**\r\n * 创建跨平台兼容的阴影样式\r\n * @param {Object} options - 阴影选项\r\n * @param {string} options.color - 阴影颜色\r\n * @param {Object} options.offset - 阴影偏移 { width, height }\r\n * @param {number} options.opacity - 阴影不透明度\r\n * @param {number} options.radius - 阴影半径\r\n * @param {number} options.elevation - Android 高度 (可选)\r\n * @returns {Object} 跨平台兼容的样式对象\r\n */\r\nexport const createShadow = ({\r\n  color = '#000',\r\n  offset = { width: 0, height: 2 },\r\n  opacity = 0.1,\r\n  radius = 3,\r\n  elevation = 3\r\n} = {}) => {\r\n  // 使用boxShadow，不再区分平台\r\n  const { width, height } = offset;\r\n  return {\r\n    // 对于所有平台都使用boxShadow\r\n    boxShadow: `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`,\r\n    // 对于Android仍保留elevation\r\n    elevation: elevation\r\n  };\r\n};\r\n\r\n/**\r\n * 根据平台返回正确的图像props\r\n * 解决了style.resizeMode和style.tintColor废弃的警告\r\n * \r\n * @param {Object} imageStyle 原始图像样式对象\r\n * @returns {Object} 处理后的样式和props对象\r\n */\r\nexport const getImageProps = (imageStyle = {}) => {\r\n  const { resizeMode, tintColor, ...otherStyles } = imageStyle;\r\n  \r\n  // 创建一个新的props对象\r\n  const imageProps = {\r\n    style: otherStyles,\r\n  };\r\n  \r\n  // 如果存在resizeMode，将其提升为组件的props\r\n  if (resizeMode) {\r\n    imageProps.resizeMode = resizeMode;\r\n  }\r\n  \r\n  // 如果存在tintColor，将其提升为组件的props\r\n  if (tintColor) {\r\n    imageProps.tintColor = tintColor;\r\n  }\r\n  \r\n  return imageProps;\r\n};\r\n\r\n/**\r\n * 修复带shadow属性的样式对象，将其转换为boxShadow\r\n * @param {Object} styles - 原始样式对象\r\n * @returns {Object} - 修复后的样式对象\r\n */\r\nexport const fixDeprecatedShadow = (styles = {}) => {\r\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius, ...otherStyles } = styles;\r\n  \r\n  // 如果没有shadow相关属性，直接返回原样式\r\n  if (!shadowColor && !shadowOffset && !shadowOpacity && !shadowRadius) {\r\n    return styles;\r\n  }\r\n  \r\n  // 提取shadow属性值，设置默认值\r\n  const color = shadowColor || '#000';\r\n  const offset = shadowOffset || { width: 0, height: 2 };\r\n  const opacity = shadowOpacity || 0.1;\r\n  const radius = shadowRadius || 3;\r\n  const { width, height } = offset;\r\n  \r\n  // 创建boxShadow\r\n  const boxShadow = `${width}px ${height}px ${radius}px rgba(0, 0, 0, ${opacity})`;\r\n  \r\n  // 返回修复后的样式\r\n  return {\r\n    ...otherStyles,\r\n    boxShadow\r\n  };\r\n};\r\n\r\nexport default {\r\n  getImageProps,\r\n  createShadow,\r\n  fixDeprecatedShadow\r\n};","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, SafeAreaView, StatusBar, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst BrowseScreen = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n  const [error, setError] = useState('');\r\n\r\n  // 提取fetchData为组件级函数\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // 加载所有题目集\r\n      let allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\r\n      \r\n      // 数据验证，确保即使返回无效数据也不崩溃\r\n      if (!Array.isArray(allQuestions)) {\r\n        console.error('题目数据无效，返回空数组');\r\n        allQuestions = [];\r\n      }\r\n      \r\n      // 确保所有题目都有一个有效的ID\r\n      allQuestions = allQuestions\r\n        .filter(q => q && q.id) // 过滤掉没有id的题目\r\n        .map(q => ({\r\n          ...q,\r\n          id: q.id.toString() // 确保ID是字符串类型\r\n        }));\r\n      \r\n      // 记录加载信息\r\n      console.log(`成功加载 ${allQuestions.length} 道题目`);\r\n      setQuestions(allQuestions);\r\n      \r\n      try {\r\n        // 获取所有类别\r\n        const allCategories = await assetDataService.getAllCategories();\r\n        \r\n        // 转换类别格式\r\n        const formattedCategories = [\r\n          { id: 'all', title: '所有题目' },\r\n          ...allCategories.map(cat => ({\r\n            id: cat,\r\n            title: assetDataService.getChineseCategoryName(cat)\r\n          }))\r\n        ];\r\n        \r\n        setCategories(formattedCategories);\r\n      } catch (categoryError) {\r\n        console.error('加载类别失败:', categoryError);\r\n        // 添加默认类别避免崩溃\r\n        setCategories([{ id: 'all', title: '所有题目' }]);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('加载题目时出错:', error);\r\n      // 显示用户友好的错误消息\r\n      setError('加载题库失败，请尝试重新启动应用');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    fetchData();\r\n  };\r\n\r\n  // 加载数据\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [t]);\r\n\r\n  // 过滤题目\r\n  const getFilteredQuestions = () => {\r\n    let filtered = selectedCategory === 'all'\r\n      ? questions\r\n      : questions.filter(q => q.category === selectedCategory);\r\n    \r\n    // 应用搜索过滤\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      filtered = filtered.filter(q => \r\n        q.question.toLowerCase().includes(query) || \r\n        (q.id && q.id.toString().includes(query))\r\n      );\r\n    }\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    if (!question || !question.id) {\r\n      console.error('Cannot navigate: Question or question ID is missing', question);\r\n      Alert.alert('错误', '无法查看题目详情，题目ID不存在');\r\n      return;\r\n    }\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderCategoryItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.categoryButton,\r\n        selectedCategory === item.id && styles.categoryButtonActive\r\n      ]}\r\n      onPress={() => setSelectedCategory(item.id)}\r\n    >\r\n      <Text \r\n        style={[\r\n          styles.categoryButtonText,\r\n          selectedCategory === item.id && styles.categoryButtonTextActive\r\n        ]}\r\n      >\r\n        {item.title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderQuestionItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionCard}\r\n        onPress={() => handleQuestionPress(item)}\r\n        activeOpacity={0.7}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Ionicons name=\"bookmark-outline\" size={14} color=\"#4c669f\" style={{marginRight: 4}} />\r\n            <Text style={styles.categoryLabel}>\r\n              {assetDataService.getChineseCategoryName(item.category)}\r\n            </Text>\r\n          </View>\r\n          <View style={styles.idContainer}>\r\n            <Ionicons name=\"id-card-outline\" size={14} color=\"#666\" style={{marginRight: 4}} />\r\n            <Text style={styles.questionId}>#{item.id}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <Text style={styles.questionText}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.cardFooter}>\r\n          <TouchableOpacity style={styles.iconButton}>\r\n            <Ionicons name=\"heart-outline\" size={22} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          <View style={styles.footerRight}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n              <Ionicons name=\"chevron-forward\" size={16} color=\"#4c669f\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题库中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  // 添加错误处理界面\r\n  if (error) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle\" size={60} color=\"#e74c3c\" />\r\n        <Text style={styles.errorTitle}>加载失败</Text>\r\n        <Text style={styles.errorMessage}>{error}</Text>\r\n        <TouchableOpacity \r\n          style={styles.retryButton}\r\n          onPress={() => {\r\n            setError('');\r\n            setLoading(true);\r\n            fetchData();\r\n          }}\r\n        >\r\n          <Text style={styles.retryButtonText}>重试</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const filteredQuestions = getFilteredQuestions();\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>浏览题库</Text>\r\n        <Text style={styles.subtitle}>共 {questions.length} 道题目</Text>\r\n      </View>\r\n\r\n      <QuestionLanguageSwitcher \r\n        currentLanguage={currentLanguage} \r\n        onChangeLanguage={handleLanguageChange} \r\n      />\r\n\r\n      <View style={styles.searchContainer}>\r\n        <Ionicons name=\"search\" size={20} color=\"#999\" style={styles.searchIcon} />\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"搜索题目关键词...\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n          placeholderTextColor=\"#999\"\r\n        />\r\n        {searchQuery !== '' && (\r\n          <TouchableOpacity onPress={() => setSearchQuery('')} style={styles.clearButton}>\r\n            <Ionicons name=\"close-circle\" size={20} color=\"#999\" />\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n\r\n      <View style={styles.categoriesContainer}>\r\n        <Text style={styles.sectionTitle}>分类筛选</Text>\r\n        <FlatList\r\n          horizontal\r\n          data={categories}\r\n          renderItem={renderCategoryItem}\r\n          keyExtractor={(item) => item.id}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.categoriesList}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.resultsContainer}>\r\n        <Text style={styles.resultCount}>\r\n          {filteredQuestions.length} 道{selectedCategory !== 'all' ? assetDataService.getChineseCategoryName(selectedCategory) : ''}题目\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={filteredQuestions}\r\n        renderItem={renderQuestionItem}\r\n        keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n        contentContainerStyle={styles.questionsList}\r\n        showsVerticalScrollIndicator={true}\r\n        ListEmptyComponent={() => (\r\n          <View style={styles.emptyContainer}>\r\n            <Ionicons name=\"search\" size={responsiveFontSize(50)} color=\"#ddd\" />\r\n            <Text style={styles.emptyText}>\r\n              没有找到符合条件的题目\r\n            </Text>\r\n            <TouchableOpacity \r\n              style={styles.resetButton} \r\n              onPress={() => {\r\n                setSelectedCategory('all');\r\n                setSearchQuery('');\r\n              }}\r\n            >\r\n              <Text style={styles.resetButtonText}>重置筛选条件</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginTop: responsiveHeight(0.5),\r\n  },\r\n  searchContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(1),\r\n    borderRadius: 10,\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  searchIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: responsiveHeight(5),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n  },\r\n  clearButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(4),\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoriesContainer: {\r\n    backgroundColor: '#fff',\r\n    paddingTop: responsiveHeight(1),\r\n    paddingBottom: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 3,\r\n    elevation: 2,\r\n  },\r\n  categoriesList: {\r\n    paddingHorizontal: responsiveWidth(3),\r\n  },\r\n  categoryButton: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1),\r\n    marginHorizontal: responsiveWidth(1),\r\n    borderRadius: 20,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  categoryButtonActive: {\r\n    backgroundColor: '#4c669f',\r\n  },\r\n  categoryButtonText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  categoryButtonTextActive: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  resultsContainer: {\r\n    paddingHorizontal: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  resultCount: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n  },\r\n  questionsList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  questionCard: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryLabel: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionId: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginVertical: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  cardFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(1),\r\n    paddingTop: responsiveHeight(1),\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  iconButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  footerRight: {\r\n    flexDirection: 'row',\r\n  },\r\n  viewButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f0f5ff',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 15,\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n    marginRight: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  resetButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  resetButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorTitle: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  errorMessage: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  retryButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  retryButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n  idContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default BrowseScreen; ","// 驾照考试模拟数据\r\nexport const questions = [\r\n  {\r\n    id: '1',\r\n    category: '交通法规',\r\n    question: '在道路上驾驶机动车怎样选择行车道?',\r\n    options: [\r\n      { id: 'A', text: '根据交通标志、标线选择行车道' },\r\n      { id: 'B', text: '根据车速选择行车道' },\r\n      { id: 'C', text: '按照车型选择行车道' },\r\n      { id: 'D', text: '按照自己习惯选择行车道' }\r\n    ],\r\n    correctAnswer: 'A',\r\n    explanation: '在道路上驾驶机动车应根据交通标志、标线选择行车道，这样才能保证行车安全和道路通畅。',\r\n    imageUrl: null,\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '2',\r\n    category: '交通法规',\r\n    question: '驾驶机动车在进出隧道时应注意什么?',\r\n    options: [\r\n      { id: 'A', text: '开启前照灯' },\r\n      { id: 'B', text: '关闭前照灯' },\r\n      { id: 'C', text: '保持安全车距' },\r\n      { id: 'D', text: '以上都是' }\r\n    ],\r\n    correctAnswer: 'D',\r\n    explanation: '驾驶机动车在进出隧道时应开启前照灯，保持安全车距，注意行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '3',\r\n    category: '安全常识',\r\n    question: '行车中遇到对向来车占道行驶时，应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '紧靠道路中心行驶' },\r\n      { id: 'B', text: '向右占道行驶' },\r\n      { id: 'C', text: '靠右减速避让' },\r\n      { id: 'D', text: '加速从左侧通过' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '当遇到对向来车占道行驶时，应当靠右减速避让，确保行车安全。',\r\n    imageUrl: null,\r\n    difficulty: '中等'\r\n  },\r\n  {\r\n    id: '4',\r\n    category: '交通法规',\r\n    question: '这个标志是何含义？',\r\n    options: [\r\n      { id: 'A', text: '禁止通行' },\r\n      { id: 'B', text: '减速让行' },\r\n      { id: 'C', text: '停车让行' },\r\n      { id: 'D', text: '注意危险' }\r\n    ],\r\n    correctAnswer: 'B',\r\n    explanation: '此标志为减速让行标志，提醒驾驶员减速慢行，注意让行。',\r\n    imageUrl: 'https://example.com/signs/yield.jpg',\r\n    difficulty: '简单'\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '安全常识',\r\n    question: '驾驶机动车遇到沙尘暴天气时应怎样做？',\r\n    options: [\r\n      { id: 'A', text: '加速驶离沙尘区' },\r\n      { id: 'B', text: '开启前照灯行驶' },\r\n      { id: 'C', text: '开启危险报警闪光灯，就近选择安全地点停车' },\r\n      { id: 'D', text: '以正常速度行驶' }\r\n    ],\r\n    correctAnswer: 'C',\r\n    explanation: '遇到沙尘暴天气时，能见度低，应开启危险报警闪光灯，就近选择安全地点停车，等天气好转后再行驶。',\r\n    imageUrl: null,\r\n    difficulty: '困难'\r\n  }\r\n]; ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as SQLite from 'expo-sqlite';\r\nimport { Platform } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n// 模拟数据\r\nimport { questions } from '../data/mockData';\r\n\r\n// 判断是否是Web平台\r\nconst isWeb = Platform.OS === 'web';\r\n\r\n// 获取数据库连接\r\nconst getDatabase = () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage模拟数据库\r\n    return null;\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    return SQLite.openDatabase('driving_license.db');\r\n  }\r\n};\r\n\r\n// 初始化数据库\r\nexport const initDatabase = async () => {\r\n  if (isWeb) {\r\n    // Web平台使用AsyncStorage存储数据\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      if (!storedQuestions) {\r\n        // 如果没有存储过题目数据，则存储模拟数据\r\n        await AsyncStorage.setItem('questions', JSON.stringify(questions));\r\n      }\r\n      \r\n      // 初始化收藏和错题记录\r\n      const favorites = await AsyncStorage.getItem('favorites');\r\n      if (!favorites) {\r\n        await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      }\r\n      \r\n      const mistakes = await AsyncStorage.getItem('mistakes');\r\n      if (!mistakes) {\r\n        await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize web database:', error);\r\n    }\r\n  } else {\r\n    // 原生平台使用SQLite\r\n    const db = getDatabase();\r\n    \r\n    // 创建题目表\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS questions (\r\n          id TEXT PRIMARY KEY,\r\n          category TEXT,\r\n          question TEXT,\r\n          options TEXT,\r\n          correctAnswer TEXT,\r\n          explanation TEXT,\r\n          imageUrl TEXT,\r\n          difficulty TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建收藏表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS favorites (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT UNIQUE,\r\n          timestamp INTEGER\r\n        );`\r\n      );\r\n      \r\n      // 创建错题表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS mistakes (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          questionId TEXT,\r\n          userAnswer TEXT,\r\n          timestamp INTEGER,\r\n          UNIQUE(questionId)\r\n        );`\r\n      );\r\n      \r\n      // 创建考试记录表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS exam_results (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          score REAL,\r\n          timeSpent INTEGER,\r\n          totalQuestions INTEGER,\r\n          correctCount INTEGER,\r\n          incorrectCount INTEGER,\r\n          answeredQuestions INTEGER,\r\n          unansweredQuestions INTEGER,\r\n          isPassed INTEGER,\r\n          details TEXT\r\n        );`\r\n      );\r\n      \r\n      // 创建学习进度表\r\n      tx.executeSql(\r\n        `CREATE TABLE IF NOT EXISTS study_progress (\r\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n          date TEXT,\r\n          questionsAnswered INTEGER,\r\n          correctAnswers INTEGER,\r\n          timeSpent INTEGER\r\n        );`\r\n      );\r\n    }, error => {\r\n      console.error('Error creating tables:', error);\r\n    }, () => {\r\n      // 检查是否需要插入初始数据\r\n      checkAndInsertInitialData(db);\r\n    });\r\n  }\r\n};\r\n\r\n// 检查并插入初始数据\r\nconst checkAndInsertInitialData = (db) => {\r\n  db.transaction(tx => {\r\n    tx.executeSql(\r\n      'SELECT COUNT(*) as count FROM questions;',\r\n      [],\r\n      (_, { rows }) => {\r\n        const count = rows._array[0].count;\r\n        if (count === 0) {\r\n          // 如果没有数据，插入模拟数据\r\n          insertMockData(db);\r\n        }\r\n      }\r\n    );\r\n  }, error => {\r\n    console.error('Error checking initial data:', error);\r\n  });\r\n};\r\n\r\n// 插入模拟数据\r\nconst insertMockData = (db) => {\r\n  db.transaction(tx => {\r\n    questions.forEach(question => {\r\n      tx.executeSql(\r\n        `INSERT INTO questions (id, category, question, options, correctAnswer, explanation, imageUrl, difficulty)\r\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?);`,\r\n        [\r\n          question.id,\r\n          question.category,\r\n          question.question,\r\n          JSON.stringify(question.options),\r\n          question.correctAnswer,\r\n          question.explanation,\r\n          question.imageUrl,\r\n          question.difficulty\r\n        ]\r\n      );\r\n    });\r\n  }, error => {\r\n    console.error('Error inserting mock data:', error);\r\n  }, () => {\r\n    console.log('Mock data inserted successfully');\r\n  });\r\n};\r\n\r\n// 获取所有题目\r\nexport const getAllQuestions = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      return storedQuestions ? JSON.parse(storedQuestions) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions;',\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 按类别获取题目\r\nexport const getQuestionsByCategory = async (category) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return category === 'all' \r\n        ? allQuestions \r\n        : allQuestions.filter(q => q.category === category);\r\n    } catch (error) {\r\n      console.error('Failed to get questions by category from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      const query = category === 'all' \r\n        ? 'SELECT * FROM questions;' \r\n        : 'SELECT * FROM questions WHERE category = ?;';\r\n      const params = category === 'all' ? [] : [category];\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          query,\r\n          params,\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => ({\r\n              ...item,\r\n              options: JSON.parse(item.options)\r\n            }));\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取随机题目\r\nexport const getRandomQuestions = async (count = 25) => {\r\n  const allQuestions = await getAllQuestions();\r\n  \r\n  // 随机打乱题目顺序\r\n  const shuffled = [...allQuestions].sort(() => 0.5 - Math.random());\r\n  \r\n  // 返回指定数量的题目\r\n  return shuffled.slice(0, count);\r\n};\r\n\r\n// 获取题目详情\r\nexport const getQuestionById = async (id) => {\r\n  if (isWeb) {\r\n    try {\r\n      const storedQuestions = await AsyncStorage.getItem('questions');\r\n      const allQuestions = storedQuestions ? JSON.parse(storedQuestions) : [];\r\n      return allQuestions.find(q => q.id === id) || null;\r\n    } catch (error) {\r\n      console.error('Failed to get question by id from web storage:', error);\r\n      return null;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM questions WHERE id = ?;',\r\n          [id],\r\n          (_, { rows }) => {\r\n            if (rows.length > 0) {\r\n              const question = rows._array[0];\r\n              question.options = JSON.parse(question.options);\r\n              resolve(question);\r\n            } else {\r\n              resolve(null);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取完整题目信息（包括收藏状态和错题记录）\r\nexport const getCompleteQuestion = async (id) => {\r\n  try {\r\n    // 从所有题目中找到匹配的题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    const question = allQuestions.find(q => q.id.toString() === id.toString());\r\n    \r\n    if (!question) {\r\n      return null;\r\n    }\r\n    \r\n    // 获取收藏状态\r\n    const isFavorite = await isQuestionFavorited(id);\r\n    \r\n    // 转换答案格式\r\n    const formattedQuestion = {\r\n      ...question,\r\n      options: question.answers.map((ans, index) => ({\r\n        id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n        text: ans.text,\r\n        isCorrect: ans.correct\r\n      })),\r\n      isFavorite: isFavorite\r\n    };\r\n    \r\n    return formattedQuestion;\r\n  } catch (error) {\r\n    console.error('Error getting complete question:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 添加收藏\r\nexport const addToFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('addToFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  const now = Date.now();\r\n  console.log(`Adding question ID ${questionId} to favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否已收藏\r\n      const existingIndex = favorites.findIndex(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      if (existingIndex >= 0) {\r\n        console.log(`Question ${questionId} already in favorites`);\r\n        return true;\r\n      }\r\n      \r\n      // 添加新收藏\r\n      favorites.push({\r\n        id: `fav_${questionId}_${now}`,\r\n        questionId: questionId.toString(),\r\n        dateAdded: now,\r\n        timestamp: now\r\n      });\r\n      \r\n      console.log(`Saving favorites with new item: ${favorites.length} items total`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(favorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to add to favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 检查是否已收藏\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 如果未收藏，则添加\r\n              tx.executeSql(\r\n                'INSERT INTO favorites (questionId, timestamp) VALUES (?, ?);',\r\n                [questionId.toString(), now],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            } else {\r\n              // 已收藏，直接返回成功\r\n              resolve(true);\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 移除收藏\r\nexport const removeFromFavorites = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeFromFavorites: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Removing question ID ${questionId} from favorites`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 过滤掉指定的收藏\r\n      const updatedFavorites = favorites.filter(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = fId !== qId;\r\n        if (!result) {\r\n          console.log(`Found favorite to remove: ${fId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated favorites: from ${favorites.length} to ${updatedFavorites.length}`);\r\n      await AsyncStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove from favorites in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          () => resolve(true),\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 检查是否已收藏\r\nexport const isQuestionFavorited = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('isQuestionFavorited: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      \r\n      // 检查是否存在匹配的收藏\r\n      const found = favorites.some(f => {\r\n        const fId = f.questionId?.toString() || f.id?.toString() || '';\r\n        const qId = questionId.toString();\r\n        return fId === qId;\r\n      });\r\n      \r\n      console.log(`Question ${questionId} is${found ? '' : ' not'} favorited`);\r\n      return found;\r\n    } catch (error) {\r\n      console.error('Failed to check favorite status in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'SELECT * FROM favorites WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            resolve(rows.length > 0);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有收藏题目\r\nexport const getFavoriteQuestions = async () => {\r\n  console.log('Getting favorite questions');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 1. 获取收藏列表\r\n      const storedFavorites = await AsyncStorage.getItem('favorites');\r\n      const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n      console.log(`Found ${favorites.length} favorites in storage`);\r\n      \r\n      // 没有收藏，直接返回空数组\r\n      if (favorites.length === 0) {\r\n        return [];\r\n      }\r\n      \r\n      // 2. 加载所有题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets();\r\n      console.log(`Loaded ${allQuestions.length} questions to match with favorites`);\r\n      \r\n      // 3. 匹配收藏的题目\r\n      const favoriteQuestions = [];\r\n      \r\n      for (const favorite of favorites) {\r\n        const questionId = favorite.questionId || favorite.id;\r\n        if (!questionId) continue;\r\n        \r\n        // 查找对应的题目\r\n        const question = allQuestions.find(q => {\r\n          return q.id && q.id.toString() === questionId.toString();\r\n        });\r\n        \r\n        if (question) {\r\n          // 处理日期\r\n          let dateAdded;\r\n          try {\r\n            dateAdded = new Date(favorite.dateAdded || favorite.timestamp || Date.now());\r\n          } catch (e) {\r\n            dateAdded = new Date();\r\n          }\r\n          \r\n          favoriteQuestions.push({\r\n            ...question,\r\n            id: question.id,\r\n            question: question.question,\r\n            category: question.category,\r\n            dateAdded: dateAdded,\r\n            timestamp: favorite.timestamp || Date.now()\r\n          });\r\n        }\r\n      }\r\n      \r\n      console.log(`Returning ${favoriteQuestions.length} matched favorite questions`);\r\n      return favoriteQuestions;\r\n    } catch (error) {\r\n      console.error('Failed to get favorite questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT q.*, f.timestamp as dateAdded \r\n          FROM questions q\r\n          INNER JOIN favorites f ON q.id = f.questionId\r\n          ORDER BY f.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const questions = rows._array.map(item => {\r\n              // 转换日期\r\n              let dateAdded;\r\n              try {\r\n                dateAdded = new Date(item.dateAdded);\r\n              } catch (e) {\r\n                dateAdded = new Date();\r\n              }\r\n              \r\n              return {\r\n                ...item,\r\n                options: item.options ? JSON.parse(item.options) : [],\r\n                dateAdded: dateAdded\r\n              };\r\n            });\r\n            resolve(questions);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录错题\r\nexport const recordMistake = async (questionId, userAnswer) => {\r\n  const now = new Date().toISOString();\r\n  const mistakeId = `mistake_${questionId}_${Date.now()}`;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      \r\n      // 检查是否已存在该错题\r\n      const existingIndex = mistakes.findIndex(m => m.questionId === questionId);\r\n      \r\n      if (existingIndex >= 0) {\r\n        // 更新已有错题记录\r\n        mistakes[existingIndex].attempts += 1;\r\n        mistakes[existingIndex].lastAttempt = now;\r\n        mistakes[existingIndex].userAnswer = userAnswer;\r\n      } else {\r\n        // 添加新错题记录\r\n        mistakes.push({\r\n          id: mistakeId,\r\n          questionId,\r\n          attempts: 1,\r\n          lastAttempt: now,\r\n          userAnswer,\r\n          timestamp: Date.now()\r\n        });\r\n      }\r\n      \r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(mistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 检查是否已存在该错题\r\n        tx.executeSql(\r\n          'SELECT * FROM mistakes WHERE questionId = ?;',\r\n          [questionId],\r\n          (_, { rows }) => {\r\n            if (rows.length === 0) {\r\n              // 添加新错题记录\r\n              tx.executeSql(\r\n                'INSERT INTO mistakes (id, questionId, attempts, lastAttempt, userAnswer) VALUES (?, ?, ?, ?, ?);',\r\n                [mistakeId, questionId, 1, now, userAnswer],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            } else {\r\n              // 更新已有错题记录\r\n              tx.executeSql(\r\n                'UPDATE mistakes SET attempts = attempts + 1, lastAttempt = ?, userAnswer = ? WHERE questionId = ?;',\r\n                [now, userAnswer, questionId],\r\n                () => resolve(true),\r\n                (_, error) => {\r\n                  reject(error);\r\n                  return false;\r\n                }\r\n              );\r\n            }\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 将getMistakes函数定义放在前面，确保正确导出\r\nexport const getMistakes = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const mistakesData = await AsyncStorage.getItem('mistakes');\r\n      return mistakesData ? JSON.parse(mistakesData) : [];\r\n    } catch (error) {\r\n      console.error('Failed to get mistake questions from web storage:', error);\r\n      return [];\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `SELECT m.questionId, m.userAnswer, m.timestamp FROM mistakes m \r\n           ORDER BY m.timestamp DESC;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            resolve(rows._array);\r\n          },\r\n          (_, error) => {\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取错题记录 (保留此函数作为兼容)\r\nexport const getMistakeQuestions = getMistakes;\r\n\r\n/**\r\n * 删除单个错题记录\r\n * @param {string} questionId - 题目ID\r\n * @returns {Promise}\r\n */\r\nexport const removeMistake = async (questionId) => {\r\n  if (!questionId) {\r\n    console.error('removeMistake: No questionId provided');\r\n    return false;\r\n  }\r\n  \r\n  console.log(`Attempting to remove mistake with ID: ${questionId}`);\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Current mistakes count: ${mistakes.length}`);\r\n      \r\n      // 过滤掉指定的错题\r\n      const updatedMistakes = mistakes.filter(m => {\r\n        // 确保正确比较字符串形式的ID\r\n        const mId = m.questionId?.toString() || '';\r\n        const qId = questionId.toString();\r\n        const result = mId !== qId;\r\n        if (!result) {\r\n          console.log(`Found mistake to remove: ${mId} = ${qId}`);\r\n        }\r\n        return result;\r\n      });\r\n      \r\n      console.log(`Updated mistakes count: ${updatedMistakes.length}`);\r\n      \r\n      // 更新存储\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify(updatedMistakes));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to remove mistake in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM mistakes WHERE questionId = ?;',\r\n          [questionId.toString()],\r\n          (_, { rowsAffected }) => {\r\n            console.log(`Removed ${rowsAffected} mistake records for ID: ${questionId}`);\r\n            resolve(rowsAffected > 0);\r\n          },\r\n          (_, error) => {\r\n            console.error(`SQL error removing mistake ${questionId}:`, error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * 清空所有错题记录\r\n * @returns {Promise}\r\n */\r\nexport const clearMistakes = async () => {\r\n  console.log('清空所有错题记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有错题数量以便记录\r\n      const storedMistakes = await AsyncStorage.getItem('mistakes');\r\n      const mistakes = storedMistakes ? JSON.parse(storedMistakes) : [];\r\n      console.log(`Clearing ${mistakes.length} mistakes from web storage`);\r\n      \r\n      // 清空错题\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      \r\n      // 验证是否成功清空\r\n      const afterClear = await AsyncStorage.getItem('mistakes');\r\n      const afterMistakes = afterClear ? JSON.parse(afterClear) : null;\r\n      console.log('After clear:', afterMistakes);\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes in web storage:', error);\r\n      throw error; // 抛出错误以便上层处理\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前错题数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM mistakes;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} mistakes from database`);\r\n          \r\n          // 然后清空错题表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM mistakes;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} mistake records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing mistakes:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有数据（用于重置应用）\r\nexport const resetDatabase = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      // 保留题目数据，但清空收藏和错题记录\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to reset web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        // 清空收藏和错题表\r\n        tx.executeSql('DELETE FROM favorites;');\r\n        tx.executeSql('DELETE FROM mistakes;');\r\n      }, error => {\r\n        console.error('Error resetting database:', error);\r\n        reject(error);\r\n      }, () => {\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 记录学习进度\r\nexport const recordStudyProgress = async (data) => {\r\n  const { questionsAnswered, correctCount, examType, date = new Date().toISOString() } = data;\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有进度记录\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      let progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 添加新记录\r\n      progress.push({\r\n        id: Date.now().toString(),\r\n        date,\r\n        questionsAnswered,\r\n        correctCount,\r\n        examType,\r\n        accuracy: questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0\r\n      });\r\n      \r\n      // 保存更新后的进度记录\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify(progress));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to record study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 检查表是否存在，不存在则创建\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `CREATE TABLE IF NOT EXISTS study_progress (\r\n            id TEXT PRIMARY KEY,\r\n            date TEXT,\r\n            questionsAnswered INTEGER,\r\n            correctCount INTEGER,\r\n            examType TEXT,\r\n            accuracy REAL\r\n          );`\r\n        );\r\n      }, error => {\r\n        console.error('Error creating study_progress table:', error);\r\n        reject(error);\r\n      }, () => {\r\n        // 插入新记录\r\n        db.transaction(tx => {\r\n          const id = Date.now().toString();\r\n          const accuracy = questionsAnswered > 0 ? (correctCount / questionsAnswered) : 0;\r\n          \r\n          tx.executeSql(\r\n            `INSERT INTO study_progress (id, date, questionsAnswered, correctCount, examType, accuracy)\r\n            VALUES (?, ?, ?, ?, ?, ?);`,\r\n            [id, date, questionsAnswered, correctCount, examType, accuracy],\r\n            (_, result) => {\r\n              resolve(true);\r\n            },\r\n            (_, error) => {\r\n              console.error('Error inserting study progress:', error);\r\n              reject(error);\r\n              return false;\r\n            }\r\n          );\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取学习进度统计\r\nexport const getStudyProgressStats = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      const progressData = await AsyncStorage.getItem('studyProgress');\r\n      const progress = progressData ? JSON.parse(progressData) : [];\r\n      \r\n      // 获取考试记录\r\n      const examResultsData = await AsyncStorage.getItem('examResults');\r\n      const examResults = examResultsData ? JSON.parse(examResultsData) : [];\r\n      \r\n      // 计算总计数据\r\n      const totalExams = examResults.length;\r\n      const totalQuestions = examResults.reduce((sum, item) => sum + (item.totalQuestions || 0), 0);\r\n      const totalCorrect = examResults.reduce((sum, item) => sum + (item.correctCount || 0), 0);\r\n      const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n      \r\n      return {\r\n        totalExams,\r\n        totalQuestions,\r\n        totalCorrect,\r\n        averageAccuracy,\r\n        progressHistory: progress.slice(-7) // 最近7条记录\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to get study progress from web storage:', error);\r\n      return {\r\n        totalExams: 0,\r\n        totalQuestions: 0,\r\n        totalCorrect: 0,\r\n        averageAccuracy: 0,\r\n        progressHistory: []\r\n      };\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        // 获取考试记录总计\r\n        tx.executeSql(\r\n          `SELECT \r\n            COUNT(*) as totalExams,\r\n            SUM(totalQuestions) as totalQuestions,\r\n            SUM(correctCount) as totalCorrect\r\n          FROM exam_results;`,\r\n          [],\r\n          (_, { rows }) => {\r\n            const stats = rows._array[0];\r\n            const totalExams = stats.totalExams || 0;\r\n            const totalQuestions = stats.totalQuestions || 0;\r\n            const totalCorrect = stats.totalCorrect || 0;\r\n            const averageAccuracy = totalQuestions > 0 ? (totalCorrect / totalQuestions) : 0;\r\n            \r\n            // 获取最近的7条学习记录\r\n            tx.executeSql(\r\n              `SELECT * FROM study_progress ORDER BY date DESC LIMIT 7;`,\r\n              [],\r\n              (_, { rows }) => {\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: rows._array\r\n                });\r\n              },\r\n              (_, error) => {\r\n                console.error('Error getting study progress history:', error);\r\n                resolve({\r\n                  totalExams,\r\n                  totalQuestions,\r\n                  totalCorrect,\r\n                  averageAccuracy,\r\n                  progressHistory: []\r\n                });\r\n              }\r\n            );\r\n          },\r\n          (_, error) => {\r\n            console.error('Error getting study stats:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清除学习进度记录\r\nexport const clearStudyProgress = async () => {\r\n  if (isWeb) {\r\n    try {\r\n      await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear study progress in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          'DELETE FROM study_progress;',\r\n          [],\r\n          (_, result) => {\r\n            resolve(true);\r\n          },\r\n          (_, error) => {\r\n            console.error('Error clearing study progress:', error);\r\n            reject(error);\r\n            return false;\r\n          }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 保存考试结果\r\nexport const saveExamResult = (examResult) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // 获取现有的考试结果\r\n        let examResults = [];\r\n        try {\r\n          const storedResults = await AsyncStorage.getItem('examResults');\r\n          if (storedResults) {\r\n            examResults = JSON.parse(storedResults);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing exam results:', error);\r\n        }\r\n        \r\n        // 添加新的考试结果\r\n        const newExamResult = {\r\n          ...examResult,\r\n          id: Date.now() // 生成唯一ID\r\n        };\r\n        examResults.push(newExamResult);\r\n        \r\n        // 保存更新后的结果\r\n        await AsyncStorage.setItem('examResults', JSON.stringify(examResults));\r\n        \r\n        // 更新学习进度\r\n        await updateStudyProgress(\r\n          examResult.answeredQuestions,\r\n          examResult.correctCount,\r\n          examResult.timeSpent\r\n        );\r\n        \r\n        resolve({ insertId: Date.now() });\r\n      } catch (error) {\r\n        console.error('Failed to save exam result to web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const {\r\n        date,\r\n        score,\r\n        timeSpent,\r\n        totalQuestions,\r\n        correctCount,\r\n        incorrectCount,\r\n        answeredQuestions,\r\n        unansweredQuestions,\r\n        isPassed,\r\n        questionResults\r\n      } = examResult;\r\n      \r\n      // 将详细题目结果序列化为JSON字符串\r\n      const detailsJson = JSON.stringify(questionResults || {});\r\n      \r\n      const db = getDatabase();\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `INSERT INTO exam_results (\r\n            date, score, timeSpent, totalQuestions, correctCount, \r\n            incorrectCount, answeredQuestions, unansweredQuestions, \r\n            isPassed, details\r\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`,\r\n          [\r\n            date, \r\n            score, \r\n            timeSpent, \r\n            totalQuestions, \r\n            correctCount, \r\n            incorrectCount, \r\n            answeredQuestions, \r\n            unansweredQuestions, \r\n            isPassed ? 1 : 0, \r\n            detailsJson\r\n          ],\r\n          (_, result) => {\r\n            // 同时更新学习进度表\r\n            updateStudyProgress(\r\n              answeredQuestions, \r\n              correctCount,\r\n              timeSpent\r\n            );\r\n            resolve(result);\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 获取所有考试记录\r\nexport const getExamResults = () => {\r\n  const db = getDatabase();\r\n  return new Promise((resolve, reject) => {\r\n    db.transaction(tx => {\r\n      tx.executeSql(\r\n        'SELECT * FROM exam_results ORDER BY date DESC',\r\n        [],\r\n        (_, { rows }) => {\r\n          // 将结果转换为JavaScript对象\r\n          const results = rows._array.map(row => ({\r\n            ...row,\r\n            isPassed: row.isPassed === 1,\r\n            details: JSON.parse(row.details || '{}')\r\n          }));\r\n          resolve(results);\r\n        },\r\n        (_, error) => { reject(error); }\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\n// 更新学习进度\r\nexport const updateStudyProgress = (questionsAnswered, correctAnswers, timeSpent) => {\r\n  if (isWeb) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n        \r\n        // 获取现有的学习进度\r\n        let studyProgress = [];\r\n        try {\r\n          const storedProgress = await AsyncStorage.getItem('studyProgress');\r\n          if (storedProgress) {\r\n            studyProgress = JSON.parse(storedProgress);\r\n          }\r\n        } catch (error) {\r\n          console.warn('Failed to retrieve existing study progress:', error);\r\n        }\r\n        \r\n        // 查找当天的记录\r\n        const todayIndex = studyProgress.findIndex(item => item.date === date);\r\n        \r\n        if (todayIndex >= 0) {\r\n          // 更新现有记录\r\n          studyProgress[todayIndex].questionsAnswered += questionsAnswered;\r\n          studyProgress[todayIndex].correctAnswers += correctAnswers;\r\n          studyProgress[todayIndex].timeSpent += timeSpent;\r\n        } else {\r\n          // 添加新记录\r\n          studyProgress.push({\r\n            date,\r\n            questionsAnswered,\r\n            correctAnswers,\r\n            timeSpent,\r\n            id: Date.now()\r\n          });\r\n        }\r\n        \r\n        // 保存更新后的进度\r\n        await AsyncStorage.setItem('studyProgress', JSON.stringify(studyProgress));\r\n        resolve({ rowsAffected: 1 });\r\n      } catch (error) {\r\n        console.error('Failed to update study progress in web storage:', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  } else {\r\n    const db = getDatabase();\r\n    return new Promise((resolve, reject) => {\r\n      const date = new Date().toISOString().split('T')[0]; // YYYY-MM-DD\r\n      \r\n      // 首先尝试更新当天的记录\r\n      db.transaction(tx => {\r\n        tx.executeSql(\r\n          `UPDATE study_progress SET \r\n            questionsAnswered = questionsAnswered + ?,\r\n            correctAnswers = correctAnswers + ?,\r\n            timeSpent = timeSpent + ?\r\n            WHERE date = ?`,\r\n          [questionsAnswered, correctAnswers, timeSpent, date],\r\n          (_, result) => {\r\n            // 如果没有更新任何记录，则插入新记录\r\n            if (result.rowsAffected === 0) {\r\n              tx.executeSql(\r\n                `INSERT INTO study_progress (\r\n                  date, questionsAnswered, correctAnswers, timeSpent\r\n                ) VALUES (?, ?, ?, ?)`,\r\n                [date, questionsAnswered, correctAnswers, timeSpent],\r\n                (_, insertResult) => { resolve(insertResult); },\r\n                (_, error) => { reject(error); }\r\n              );\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          (_, error) => { reject(error); }\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// 清空所有考试记录\r\nexport const clearExamHistory = async () => {\r\n  console.log('清空所有考试历史记录');\r\n  \r\n  if (isWeb) {\r\n    try {\r\n      // 获取现有考试记录以便记录日志\r\n      const storedResults = await AsyncStorage.getItem('examResults');\r\n      const examResults = storedResults ? JSON.parse(storedResults) : [];\r\n      console.log(`Clearing ${examResults.length} exam results from web storage`);\r\n      \r\n      // 清空考试记录\r\n      await AsyncStorage.setItem('examResults', JSON.stringify([]));\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history in web storage:', error);\r\n      return false;\r\n    }\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      const db = getDatabase();\r\n      \r\n      // 首先获取当前记录数量\r\n      db.transaction(tx => {\r\n        tx.executeSql('SELECT COUNT(*) as count FROM exam_results;', [], (_, { rows }) => {\r\n          const count = rows._array[0].count;\r\n          console.log(`Clearing ${count} exam records from database`);\r\n          \r\n          // 然后清空表\r\n          db.transaction(innerTx => {\r\n            innerTx.executeSql(\r\n              'DELETE FROM exam_results;',\r\n              [],\r\n              (_, { rowsAffected }) => {\r\n                console.log(`Deleted ${rowsAffected} exam records`);\r\n                resolve(true);\r\n              },\r\n              (_, error) => {\r\n                console.error('Error clearing exam history:', error);\r\n                reject(error);\r\n                return false;\r\n              }\r\n            );\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n}; ","import { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\nimport assetDataService from '../utils/assetDataService';\nimport { recordMistake, saveExamResult, updateStudyProgress } from '../utils/database';\nimport { getImageProps } from '../utils/styleUtils';\n\n// 获取设备尺寸\nconst { width, height } = Dimensions.get('window');\nconst isSmallDevice = width < 375;\nconst isMediumDevice = width >= 375 && width < 768;\n\n// 响应式尺寸工具函数\nconst responsiveWidth = percentage => (width * percentage) / 100;\nconst responsiveHeight = percentage => (height * percentage) / 100;\nconst responsiveFontSize = size => {\n  const baseFactor = Math.min(width, height) / 375;\n  // 针对小屏幕设备额外缩小字体\n  const scaleFactor = isSmallDevice ? baseFactor * 0.85 : \n                      isMediumDevice ? baseFactor * 0.9 : baseFactor;\n  return Math.round(size * scaleFactor);\n};\n\n// 考试配置\nconst EXAM_CONFIG = {\n  TOTAL_QUESTIONS: 20,           // 考试总题数\n  TIME_LIMIT: 45 * 60,           // 考试时间限制（秒）\n  PASS_SCORE_PERCENTAGE: 70,     // 通过分数线(百分比)\n};\n\nconst ExamScreen = ({ navigation }) => {\n  const { t, i18n } = useTranslation();\n  \n  // 状态管理\n  const [loading, setLoading] = useState(true);\n  const [examStarted, setExamStarted] = useState(false);\n  const [examFinished, setExamFinished] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [remainingTime, setRemainingTime] = useState(EXAM_CONFIG.TIME_LIMIT);\n  const [results, setResults] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\n  const timerRef = useRef(null);\n\n  // 加载题目\n  useEffect(() => {\n    const loadQuestions = async () => {\n      try {\n        setLoading(true);\n        \n        // 加载所有题目数据，使用当前语言\n        const allQuestions = await assetDataService.loadAllQuestionSets(currentLanguage);\n        \n        // 获取所有类别\n        const allCategories = await assetDataService.getAllCategories();\n        \n        // 构建类别选项\n        const categoryItems = [\n          { id: 'all', title: '所有题目' },\n          ...allCategories.map(cat => ({\n            id: cat,\n            title: assetDataService.getChineseCategoryName(cat)\n          }))\n        ];\n        \n        setCategories(categoryItems);\n        setQuestions(allQuestions);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error loading exam questions:', error);\n        setLoading(false);\n      }\n    };\n    \n    loadQuestions();\n    \n    // 组件卸载时清除定时器\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [currentLanguage]); // 添加currentLanguage作为依赖，当语言改变时重新加载题目\n\n  // 处理语言切换\n  const handleLanguageChange = async (language) => {\n    // 更新当前语言\n    setCurrentLanguage(language);\n    i18n.changeLanguage(language);\n    \n    // 如果正在考试中，仅重新加载当前题目的翻译\n    if (examStarted && !examFinished) {\n      try {\n        setLoading(true);\n        \n        // 获取当前考试题目的翻译版本\n        const updatedQuestions = questions.map(q => {\n          // 使用assetDataService获取对应语言的题目\n          if (q.translations && q.translations[language]) {\n            const translation = q.translations[language];\n            return {\n              ...q,\n              question: translation.question,\n              answers: translation.answers,\n              options: translation.answers.map((ans, idx) => ({\n                id: String.fromCharCode(65 + idx), // A, B, C...\n                text: ans.text,\n                isCorrect: ans.correct\n              }))\n            };\n          }\n          // 如果没有对应语言的翻译，保持原样\n          return q;\n        });\n        \n        setQuestions(updatedQuestions);\n      } catch (error) {\n        console.error('Error updating question translations:', error);\n        Alert.alert(\n          '语言切换失败',\n          '更新题目翻译时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      // 如果不在考试中，重新加载所有题目\n      try {\n        setLoading(true);\n        const allQuestions = await assetDataService.loadAllQuestionSets(language);\n        setQuestions(allQuestions);\n      } catch (error) {\n        console.error('Error loading questions for new language:', error);\n        Alert.alert(\n          '加载失败',\n          '加载新语言的题目时出现错误，请重试。',\n          [{ text: '确定', style: 'cancel' }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  \n  // 开始考试\n  const startExam = async () => {\n    // 根据类别筛选题目\n    let filteredQuestions = questions;\n    if (selectedCategory !== 'all') {\n      filteredQuestions = questions.filter(q => q.category === selectedCategory);\n    }\n    \n    // 随机选择题目\n    const shuffled = [...filteredQuestions].sort(() => 0.5 - Math.random());\n    const selected = shuffled.slice(0, EXAM_CONFIG.TOTAL_QUESTIONS);\n    \n    // 格式化题目数据\n    const formattedQuestions = selected.map((q, index) => ({\n      ...q,\n      examId: index + 1,\n      options: q.answers.map((ans, idx) => ({\n        id: String.fromCharCode(65 + idx), // A, B, C...\n        text: ans.text,\n        isCorrect: ans.correct\n      }))\n    }));\n    \n    // 如果题目不足，提示错误\n    if (formattedQuestions.length < EXAM_CONFIG.TOTAL_QUESTIONS) {\n      Alert.alert(\n        '题目不足',\n        `当前类别下只有 ${formattedQuestions.length} 道题目，无法开始考试。`,\n        [{ text: '确定', style: 'cancel' }]\n      );\n      return;\n    }\n    \n    // 初始化考试\n    setQuestions(formattedQuestions);\n    setCurrentIndex(0);\n      setAnswers({});\n    setRemainingTime(EXAM_CONFIG.TIME_LIMIT);\n    setExamStarted(true);\n      setExamFinished(false);\n    \n    // 开始计时器\n    timerRef.current = setInterval(() => {\n      setRemainingTime(prev => {\n        if (prev <= 1) {\n          // 时间到，结束考试\n          clearInterval(timerRef.current);\n          finishExam();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n\n  // 选择答案\n  const selectAnswer = (questionId, optionId) => {\n    const newAnswers = {\n      ...answers,\n      [questionId]: optionId\n    };\n    setAnswers(newAnswers);\n  };\n\n  // 完成考试\n  const finishExam = async () => {\n    try {\n      console.log('Finishing exam...');\n      \n      if (!questions || questions.length === 0) {\n        console.error('No questions available');\n        Alert.alert('错误', '没有加载到题目数据，无法提交考试');\n        return;\n      }\n      \n      // 先设置状态，立即开始转换到结果界面\n      setExamFinished(true);\n      setExamStarted(false);\n      \n      // 停止计时\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        console.log('Timer stopped');\n      }\n      \n      // 计算结果\n      const answeredQuestions = Object.keys(answers).length;\n      let correctCount = 0;\n      let mistakesCount = 0;\n      const questionResults = {};\n      \n      // 创建一个批量处理错题的数组\n      const mistakesToRecord = [];\n      \n      questions.forEach((question, index) => {\n        if (!question || !question.id) {\n          console.warn(`Invalid question at index ${index}:`, question);\n          return;\n        }\n        \n        const userAnswer = answers[question.id];\n        let correctAnswer = 'A'; // 默认值\n        \n        // 检查题目选项是否存在\n        if (question.options && Array.isArray(question.options)) {\n          const correctOption = question.options.find(opt => opt.isCorrect);\n          if (correctOption) {\n            correctAnswer = correctOption.id;\n          } else {\n            console.warn(`No correct answer found for question ${question.id}`);\n          }\n        } else {\n          console.warn(`Question ${question.id} has invalid options`);\n        }\n        \n        const isCorrect = userAnswer === correctAnswer;\n        \n        if (isCorrect) {\n          correctCount++;\n        } else if (userAnswer) {\n          // 添加到错题列表，稍后批量处理\n          mistakesCount++;\n          mistakesToRecord.push({\n            id: question.id,\n            userAnswer: userAnswer\n          });\n        }\n        \n        questionResults[question.id] = {\n          userAnswer,\n          correctAnswer,\n          isCorrect\n        };\n      });\n      \n      // 记录错题\n      if (mistakesToRecord.length > 0) {\n        console.log(`Recording ${mistakesToRecord.length} mistakes...`);\n        try {\n          // 使用Promise.all批量处理所有错题\n          const mistakePromises = mistakesToRecord.map(mistake => \n            recordMistake(mistake.id, mistake.userAnswer)\n              .catch(e => console.error(`Failed to record mistake for question ${mistake.id}:`, e))\n          );\n          \n          // 等待所有错题记录完成\n          await Promise.all(mistakePromises);\n          console.log('All mistakes recorded successfully');\n        } catch (e) {\n          console.error('Error batch recording mistakes:', e);\n        }\n      }\n      \n      const score = questions.length > 0 ? (correctCount / questions.length) * 100 : 0;\n      const timeSpent = EXAM_CONFIG.TIME_LIMIT - remainingTime;\n      const isPassed = score >= EXAM_CONFIG.PASS_SCORE_PERCENTAGE;\n      \n      // 保存结果\n      const examResult = {\n        date: new Date().toISOString(),\n      score,\n        timeSpent,\n        totalQuestions: questions.length,\n        correctCount,\n        incorrectCount: mistakesCount,\n        answeredQuestions,\n        unansweredQuestions: questions.length - answeredQuestions,\n        isPassed,\n        questionResults\n      };\n      \n      console.log('Exam result calculated');\n      \n      // 设置结果状态\n      setResults(examResult);\n      \n      // 保存到数据库\n      try {\n        await saveExamResult(examResult);\n        console.log('Exam result saved to database');\n      } catch (error) {\n        console.error('Failed to save exam result:', error);\n        // 即使保存失败也继续显示结果\n      }\n      \n      // 更新学习进度\n      try {\n        await updateStudyProgress(answeredQuestions, correctCount, timeSpent);\n        console.log('Study progress updated');\n      } catch (error) {\n        console.error('Failed to update study progress:', error);\n      }\n        \n      console.log('Exam finished successfully, showing results');\n    } catch (error) {\n      console.error('Error in finishExam:', error);\n      Alert.alert(\n        '错误',\n        '提交考试结果时发生错误，请重试: ' + error.message,\n        [{ text: '确定', style: 'default' }]\n      );\n    }\n  };\n\n  // 返回首页\n  const goToHome = () => {\n    // 导航到首页并传递考试结果参数\n    if (results) {\n      navigation.navigate('Home', {\n        examCompleted: true,\n        examResults: {\n          score: Math.round(results.score),\n          correctCount: results.correctCount,\n          incorrectCount: results.incorrectCount,\n          date: new Date().toISOString()\n        }\n      });\n    } else {\n      navigation.navigate('Home');\n    }\n  };\n\n  // 查看错题\n  const viewMistakes = () => {\n    navigation.navigate('Mistakes');\n  };\n\n  // 重新考试\n  const restartExam = () => {\n    setExamStarted(false);\n    setExamFinished(false);\n    setAnswers({});\n    setResults(null);\n  };\n\n  // 格式化时间\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // 渲染当前题目\n  const renderCurrentQuestion = () => {\n    const question = questions[currentIndex];\n    if (!question) return null;\n    \n    const userAnswer = answers[question.id];\n    \n    return (\n      <View style={styles.questionContainer}>\n        <View style={styles.questionHeader}>\n          <Text style={styles.questionNumber}>\n            题目 {currentIndex + 1}/{questions.length}\n            </Text>\n            <View style={styles.timerContainer}>\n            <Ionicons name=\"time-outline\" size={responsiveFontSize(18)} color=\"#f57c00\" />\n            <Text style={styles.timerText}>{formatTime(remainingTime)}</Text>\n            </View>\n          </View>\n          \n        {/* 添加语言切换器 */}\n        <QuestionLanguageSwitcher \n          currentLanguage={currentLanguage} \n          onChangeLanguage={handleLanguageChange} \n        />\n        \n        <ScrollView style={styles.questionScrollView} showsVerticalScrollIndicator={true}>\n          <Text style={styles.questionText}>{question.question}</Text>\n          \n          {question.signalImage && (\n            <View style={styles.imageContainer}>\n              <Image \n                source={question.signalImage} \n                style={styles.questionImage}\n                {...getImageProps()}\n              />\n            </View>\n          )}\n          \n          <View style={styles.optionsContainer}>\n            {question.options.map((option) => (\n              <TouchableOpacity\n                key={option.id}\n                style={[\n                  styles.optionButton,\n                  userAnswer === option.id && styles.selectedOption,\n                  examFinished && option.isCorrect && styles.correctOption,\n                  examFinished && userAnswer === option.id && !option.isCorrect && styles.incorrectOption\n                ]}\n                onPress={() => !examFinished && selectAnswer(question.id, option.id)}\n                disabled={examFinished}\n              >\n                <Text style={styles.optionLetter}>{option.id}</Text>\n                <Text style={styles.optionText}>{option.text}</Text>\n                \n                {examFinished && (\n                  option.isCorrect ? (\n                    <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(20)} color=\"#4caf50\" style={styles.resultIcon} />\n                  ) : (\n                    userAnswer === option.id && (\n                      <Ionicons name=\"close-circle\" size={responsiveFontSize(20)} color=\"#f44336\" style={styles.resultIcon} />\n                    )\n                  )\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n          \n          <View style={styles.navigationContainer}>\n            <TouchableOpacity\n              style={[styles.navButton, currentIndex === 0 && styles.disabledButton]} \n              onPress={() => {\n                if (currentIndex > 0) setCurrentIndex(currentIndex - 1);\n              }}\n              disabled={currentIndex === 0}\n            >\n              <Ionicons name=\"chevron-back\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              <Text style={styles.navButtonText}>\n                上一题\n              </Text>\n            </TouchableOpacity>\n            \n            {currentIndex < questions.length - 1 ? (\n              <TouchableOpacity\n                style={styles.navButton} \n                onPress={() => setCurrentIndex(currentIndex + 1)}\n              >\n                <Text style={styles.navButtonText}>下一题</Text>\n                <Ionicons name=\"chevron-forward\" size={responsiveFontSize(22)} color=\"#4c669f\" />\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity\n                style={[styles.navButton, styles.submitButton]} \n                onPress={finishExam}\n              >\n                <Text style={styles.submitButtonText}>交卷</Text>\n                <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(22)} color=\"#fff\" />\n              </TouchableOpacity>\n            )}\n          </View>\n          \n          {/* 添加足够的底部间距，确保按钮完全可见 */}\n          <View style={{ height: 100 }} />\n        </ScrollView>\n        \n        <View style={styles.progressContainer}>\n          <FlatList\n            horizontal\n            data={questions}\n            keyExtractor={(item) => item.id.toString()}\n            renderItem={({ item, index }) => (\n              <TouchableOpacity \n                style={[\n                  styles.progressItem, \n                  index === currentIndex && styles.activeProgressItem,\n                  answers[item.id] && styles.answeredProgressItem\n                ]}\n                onPress={() => setCurrentIndex(index)}\n              >\n                <Text \n                  style={[\n                    styles.progressItemText,\n                    index === currentIndex && styles.activeProgressItemText,\n                    answers[item.id] && styles.answeredProgressItemText\n                  ]}\n                >\n                  {index + 1}\n                </Text>\n              </TouchableOpacity>\n            )}\n            showsHorizontalScrollIndicator={false}\n            contentContainerStyle={styles.progressList}\n          />\n        </View>\n      </View>\n    );\n  };\n  \n  // 渲染考试结果\n  const renderExamResults = () => {\n    if (!results) {\n      console.error('No results available to render');\n    return (\n        <View style={styles.errorContainer}>\n          <Ionicons name=\"alert-circle\" size={responsiveFontSize(50)} color=\"#F44336\" />\n          <Text style={styles.errorText}>考试结果加载失败</Text>\n          <TouchableOpacity style={styles.actionButton} onPress={goToHome}>\n            <Text style={styles.actionButtonText}>返回首页</Text>\n          </TouchableOpacity>\n      </View>\n    );\n  }\n    \n    const {\n      score,\n      timeSpent,\n      totalQuestions,\n      correctCount,\n      incorrectCount,\n      answeredQuestions,\n      unansweredQuestions,\n      isPassed\n    } = results;\n    \n    console.log('Rendering exam results:', { score, isPassed });\n  \n  return (\n      <ScrollView style={styles.resultsScrollView} contentContainerStyle={styles.resultsContent}>\n        <View style={styles.examFinishedBanner}>\n          <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(30)} color=\"#fff\" />\n          <Text style={styles.examFinishedText}>考试已完成</Text>\n        </View>\n        \n        <View style={styles.resultHeader}>\n          <LinearGradient\n            colors={isPassed ? ['#43a047', '#2e7d32'] : ['#e53935', '#c62828']}\n            style={styles.resultBanner}\n          >\n            <Text style={styles.resultText}>\n              {isPassed ? '考试通过' : '考试未通过'}\n            </Text>\n            <View style={styles.scoreCircle}>\n              <Text style={styles.scoreValue}>{Math.round(score)}%</Text>\n            </View>\n          </LinearGradient>\n          \n          <View style={styles.resultStats}>\n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{formatTime(timeSpent)}</Text>\n                <Text style={styles.statLabel}>耗时</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{totalQuestions}</Text>\n                <Text style={styles.statLabel}>总题数</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={styles.statValue}>{answeredQuestions}</Text>\n                <Text style={styles.statLabel}>已答题</Text>\n              </View>\n            </View>\n            \n            <View style={styles.statsRow}>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#4CAF50' }]}>{correctCount}</Text>\n                <Text style={styles.statLabel}>答对</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#F44336' }]}>{incorrectCount}</Text>\n                <Text style={styles.statLabel}>答错</Text>\n              </View>\n              <View style={styles.statItem}>\n                <Text style={[styles.statValue, { color: '#FFC107' }]}>{unansweredQuestions}</Text>\n                <Text style={styles.statLabel}>未答</Text>\n              </View>\n            </View>\n          </View>\n            </View>\n            \n        <View style={styles.resultMessage}>\n          <Text style={styles.messageText}>\n            {isPassed \n              ? '恭喜您通过了考试！您可以查看错题，继续练习提高成绩。' \n              : '很遗憾，您未通过考试。建议查看错题，继续练习，再次尝试。'}\n          </Text>\n        </View>\n        \n        {incorrectCount > 0 && (\n          <View style={styles.mistakesInfoCard}>\n            <View style={styles.mistakesInfoHeader}>\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(22)} color=\"#1976D2\" />\n              <Text style={styles.mistakesInfoTitle}>错题已自动收录</Text>\n            </View>\n            <Text style={styles.mistakesInfoText}>\n              本次考试中的 {incorrectCount} 道错题已被自动收录到错题本，您可以随时通过\"错题本\"进行复习和练习。\n            </Text>\n          </View>\n        )}\n        \n        <View style={styles.resultActions}>\n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={viewMistakes}\n              >\n            <Ionicons name=\"alert-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\n            <Text style={styles.actionButtonText}>查看错题</Text>\n              </TouchableOpacity>\n          \n              <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide]} \n            onPress={restartExam}\n          >\n            <Ionicons name=\"refresh\" size={responsiveFontSize(20)} color=\"#4CAF50\" />\n            <Text style={styles.actionButtonText}>再考一次</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity \n            style={[styles.actionButton, styles.actionButtonWide, styles.primaryButton]} \n            onPress={goToHome}\n          >\n            <Ionicons name=\"home\" size={responsiveFontSize(20)} color=\"#fff\" />\n            <Text style={[styles.actionButtonText, { color: '#fff' }]}>返回首页</Text>\n              </TouchableOpacity>\n            </View>\n      </ScrollView>\n    );\n  };\n\n  // 渲染类别选择\n  const renderCategoryItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.categoryButton,\n        selectedCategory === item.id && styles.categoryButtonActive\n      ]}\n      onPress={() => setSelectedCategory(item.id)}\n    >\n      <Text \n        style={[\n          styles.categoryButtonText,\n          selectedCategory === item.id && styles.categoryButtonTextActive\n        ]}\n      >\n        {item.title}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  // 渲染考试准备界面\n  const renderExamPreparation = () => {\n    return (\n      <View style={styles.prepContainer}>\n        <View style={styles.examInfoCard}>\n          <Text style={styles.examTitle}>驾照理论考试</Text>\n          <Text style={styles.examDescription}>\n            本次考试共{EXAM_CONFIG.TOTAL_QUESTIONS}道题，时间限制{Math.floor(EXAM_CONFIG.TIME_LIMIT / 60)}分钟，\n            通过分数线为{EXAM_CONFIG.PASS_SCORE_PERCENTAGE}%。请选择考试类别，准备好后点击\"开始考试\"按钮。\n          </Text>\n          \n          <View style={styles.categoriesContainer}>\n            <Text style={styles.sectionTitle}>选择考试类别</Text>\n            <FlatList\n              horizontal\n              data={categories}\n              renderItem={renderCategoryItem}\n              keyExtractor={(item) => item.id}\n              showsHorizontalScrollIndicator={false}\n              contentContainerStyle={styles.categoriesList}\n            />\n          </View>\n          \n          <View style={styles.examRules}>\n            <Text style={styles.ruleTitle}>考试须知：</Text>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>题目为随机选择，每次考试题目不同</Text>\n        </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>可任意切换题目顺序作答</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>达到时间限制后将自动交卷</Text>\n            </View>\n            <View style={styles.ruleItem}>\n              <Ionicons name=\"checkmark\" size={responsiveFontSize(16)} color=\"#4CAF50\" />\n              <Text style={styles.ruleText}>考试记录将被保存，可在首页查看</Text>\n            </View>\n          </View>\n        </View>\n        \n        <TouchableOpacity \n          style={styles.startButton}\n          onPress={startExam}\n        >\n          <Text style={styles.startButtonText}>开始考试</Text>\n          <Ionicons name=\"arrow-forward-circle\" size={responsiveFontSize(20)} color=\"#fff\" />\n        </TouchableOpacity>\n    </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\n        <Text style={styles.loadingText}>加载考试中...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\n      \n      {!examStarted && !examFinished && renderExamPreparation()}\n      {examStarted && !examFinished && renderCurrentQuestion()}\n      {examFinished && renderExamResults()}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  prepContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n    justifyContent: 'center',\n  },\n  examInfoCard: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    padding: responsiveWidth(5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examTitle: {\n    fontSize: responsiveFontSize(20),\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: responsiveHeight(2),\n  },\n  examDescription: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n    marginBottom: responsiveHeight(3),\n    lineHeight: responsiveFontSize(20),\n    textAlign: 'center',\n  },\n  categoriesContainer: {\n    marginVertical: responsiveHeight(2),\n  },\n  sectionTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  categoriesList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  categoryButton: {\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    marginRight: responsiveWidth(2),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  categoryButtonActive: {\n    backgroundColor: '#4c669f',\n  },\n  categoryButtonText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  categoryButtonTextActive: {\n    color: '#fff',\n    fontWeight: '500',\n  },\n  examRules: {\n    marginTop: responsiveHeight(2),\n  },\n  ruleTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginBottom: responsiveHeight(1.5),\n  },\n  ruleItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1),\n  },\n  ruleText: {\n    fontSize: responsiveFontSize(14),\n    color: '#555',\n    marginLeft: responsiveWidth(2),\n  },\n  startButton: {\n    backgroundColor: '#4CAF50',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: responsiveHeight(1.8),\n    borderRadius: 10,\n    marginTop: responsiveHeight(4),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    marginRight: responsiveWidth(2),\n  },\n  // 考试界面样式\n  questionContainer: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  questionHeader: {\n    backgroundColor: '#4c669f',\n    padding: responsiveWidth(4),\n    paddingTop: Platform.OS === 'android' ? (StatusBar.currentHeight + responsiveHeight(1)) : responsiveHeight(1),\n    paddingBottom: responsiveHeight(2),\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  questionNumber: {\n    color: '#fff',\n    fontSize: responsiveFontSize(15),\n    fontWeight: 'bold',\n  },\n  timerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255,255,255,0.2)',\n    paddingHorizontal: responsiveWidth(3),\n    paddingVertical: responsiveHeight(0.5),\n    borderRadius: 20,\n  },\n  timerText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(1),\n    fontSize: responsiveFontSize(14),\n  },\n  questionText: {\n    fontSize: responsiveFontSize(16),\n    color: '#333',\n    fontWeight: '500',\n    lineHeight: responsiveFontSize(24),\n    padding: responsiveWidth(4),\n  },\n  imageContainer: {\n    alignItems: 'center',\n    marginBottom: responsiveHeight(2),\n    backgroundColor: '#f9f9f9',\n    margin: responsiveWidth(4),\n    padding: responsiveWidth(2),\n    borderRadius: 8,\n  },\n  questionImage: {\n    width: responsiveWidth(65),\n    height: responsiveWidth(65),\n  },\n  optionsContainer: {\n    padding: responsiveWidth(4),\n    paddingTop: 0,\n  },\n  optionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveWidth(3.5),\n    borderRadius: 10,\n    marginBottom: responsiveHeight(1.5),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  selectedOption: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n    borderWidth: 1,\n  },\n  correctOption: {\n    backgroundColor: '#d3f2d3',\n    borderColor: '#4caf50',\n    borderWidth: 1,\n  },\n  incorrectOption: {\n    backgroundColor: '#f2d3d3',\n    borderColor: '#f44336',\n    borderWidth: 1,\n  },\n  optionLetter: {\n    fontSize: responsiveFontSize(14),\n    fontWeight: 'bold',\n    color: '#666',\n    marginRight: responsiveWidth(3),\n  },\n  optionText: {\n    fontSize: responsiveFontSize(15),\n    color: '#333',\n    flex: 1,\n    lineHeight: responsiveFontSize(22),\n  },\n  resultIcon: {\n    marginLeft: responsiveWidth(2),\n  },\n  navigationContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: responsiveWidth(4),\n    paddingTop: responsiveHeight(2),\n  },\n  navButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: responsiveWidth(4),\n    paddingVertical: responsiveHeight(1),\n    borderRadius: 20,\n    backgroundColor: '#f0f0f0',\n  },\n  disabledButton: {\n    backgroundColor: '#f5f5f5',\n  },\n  navButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n  },\n  disabledButtonText: {\n    color: '#ccc',\n  },\n  submitButton: {\n    backgroundColor: '#4CAF50',\n    paddingHorizontal: responsiveWidth(5),\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginRight: responsiveWidth(2),\n  },\n  progressContainer: {\n    paddingHorizontal: responsiveWidth(5),\n    paddingBottom: responsiveHeight(2),\n  },\n  progressList: {\n    paddingVertical: responsiveHeight(1),\n  },\n  progressItem: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n    borderRadius: responsiveWidth(5),\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: responsiveWidth(2),\n    borderWidth: 1,\n    borderColor: '#ddd',\n  },\n  activeProgressItem: {\n    backgroundColor: '#4c669f',\n    borderColor: '#3b5998',\n  },\n  answeredProgressItem: {\n    backgroundColor: '#e3f2fd',\n    borderColor: '#4c669f',\n  },\n  progressItemText: {\n    fontSize: responsiveFontSize(12),\n    fontWeight: '500',\n    color: '#666',\n  },\n  activeProgressItemText: {\n    color: '#fff',\n  },\n  answeredProgressItemText: {\n    color: '#4c669f',\n  },\n  // 结果页样式\n  resultsContainer: {\n    flex: 1,\n    padding: responsiveWidth(5),\n  },\n  resultsScrollView: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  resultsContent: {\n    padding: responsiveWidth(5),\n    paddingBottom: responsiveHeight(5),\n  },\n  resultHeader: {\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    overflow: 'hidden',\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  resultBanner: {\n    padding: responsiveHeight(3),\n    alignItems: 'center',\n  },\n  resultText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n    marginBottom: responsiveHeight(2),\n    textAlign: 'center',\n  },\n  scoreCircle: {\n    width: responsiveWidth(25),\n    height: responsiveWidth(25),\n    borderRadius: responsiveWidth(12.5),\n    backgroundColor: 'rgba(255,255,255,0.3)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreValue: {\n    color: '#fff',\n    fontSize: responsiveFontSize(24),\n    fontWeight: 'bold',\n  },\n  resultStats: {\n    padding: responsiveWidth(5),\n  },\n  statsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: responsiveHeight(2),\n  },\n  statItem: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  statValue: {\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    color: '#333',\n  },\n  statLabel: {\n    fontSize: responsiveFontSize(12),\n    color: '#666',\n    marginTop: responsiveHeight(0.5),\n  },\n  resultMessage: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  messageText: {\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n    textAlign: 'center',\n    lineHeight: responsiveFontSize(24),\n  },\n  resultActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n    padding: responsiveHeight(1.5),\n    borderRadius: 10,\n    margin: responsiveWidth(1),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n    minWidth: responsiveWidth(28),\n  },\n  actionButtonWide: {\n    minWidth: responsiveWidth(42),\n    marginVertical: responsiveHeight(1),\n  },\n  actionButtonText: {\n    color: '#4c669f',\n    fontSize: responsiveFontSize(14),\n    fontWeight: '500',\n    marginLeft: responsiveWidth(2),\n  },\n  questionScrollView: {\n    flex: 1,\n    width: '100%',\n    paddingHorizontal: responsiveWidth(4),\n    marginBottom: 10,\n  },\n  bottomPadding: {\n    height: responsiveHeight(2),\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(16),\n    color: '#666',\n  },\n  mistakesInfoCard: {\n    padding: responsiveWidth(5),\n    backgroundColor: '#fff',\n    borderRadius: 15,\n    marginBottom: responsiveHeight(3),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 2\n      },\n      web: {\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  mistakesInfoHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: responsiveHeight(1.5),\n  },\n  mistakesInfoTitle: {\n    fontSize: responsiveFontSize(16),\n    fontWeight: 'bold',\n    color: '#333',\n    marginLeft: responsiveWidth(2),\n  },\n  mistakesInfoText: {\n    fontSize: responsiveFontSize(14),\n    color: '#666',\n  },\n  primaryButton: {\n    backgroundColor: '#4CAF50',\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      },\n      android: {\n        elevation: 4\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n      }\n    }),\n  },\n  examFinishedBanner: {\n    padding: responsiveHeight(2),\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#4c669f',\n    borderRadius: 10,\n    marginBottom: responsiveHeight(2),\n    ...Platform.select({\n      ios: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      },\n      android: {\n        elevation: 3\n      },\n      web: {\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.1)'\n      }\n    }),\n  },\n  examFinishedText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(18),\n    fontWeight: 'bold',\n    marginLeft: responsiveWidth(2),\n  },\n});\n\nexport default ExamScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, FlatList, SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { getFavoriteQuestions, removeFromFavorites } from '../utils/database';\r\n\r\n// 模拟收藏数据\r\nconst DUMMY_FAVORITES = [\r\n  {\r\n    id: '1',\r\n    category: '交通规则',\r\n    question: '在捷克，汽车应该在道路的哪一侧行驶？',\r\n    dateAdded: new Date('2023-05-10')\r\n  },\r\n  {\r\n    id: '5',\r\n    category: '交通标志',\r\n    question: '红色三角形内有感叹号的标志表示什么？',\r\n    dateAdded: new Date('2023-05-15')\r\n  },\r\n  {\r\n    id: '9',\r\n    category: '优先通行权',\r\n    question: '在没有交通信号灯的十字路口，谁有优先通行权？',\r\n    dateAdded: new Date('2023-05-20')\r\n  }\r\n];\r\n\r\nconst FavoritesScreen = () => {\r\n  const { t } = useTranslation();\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  // 加载收藏数据的函数\r\n  const loadFavorites = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Loading favorites...');\r\n      const data = await getFavoriteQuestions();\r\n      console.log(`Loaded ${data.length} favorite items`);\r\n      \r\n      // 处理日期格式\r\n      const processedData = data.map(item => {\r\n        // 确保dateAdded是Date对象\r\n        let dateAdded;\r\n        try {\r\n          dateAdded = item.dateAdded instanceof Date ? \r\n            item.dateAdded : \r\n            new Date(item.dateAdded || item.timestamp || Date.now());\r\n        } catch (e) {\r\n          console.error('Error parsing date:', e);\r\n          dateAdded = new Date();\r\n        }\r\n        \r\n        return {\r\n          ...item,\r\n          dateAdded: dateAdded\r\n        };\r\n      });\r\n      \r\n      setFavorites(processedData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error);\r\n      setLoading(false);\r\n      setFavorites([]); // 出错时设置为空数组\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadFavorites();\r\n    \r\n    // 添加监听器，以便在从问题详情页返回时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadFavorites);\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  // 进入/退出编辑模式\r\n  const toggleEditMode = () => {\r\n    setIsEditing(!isEditing);\r\n    setSelectedItems([]);\r\n  };\r\n  \r\n  // 选择/取消选择项目\r\n  const toggleSelectItem = (id) => {\r\n    if (selectedItems.includes(id)) {\r\n      setSelectedItems(selectedItems.filter(itemId => itemId !== id));\r\n    } else {\r\n      setSelectedItems([...selectedItems, id]);\r\n    }\r\n  };\r\n  \r\n  // 删除选中的收藏\r\n  const deleteSelected = async () => {\r\n    try {\r\n      // 从收藏列表中移除选中项目\r\n      for (const itemId of selectedItems) {\r\n        await removeFromFavorites(itemId);\r\n      }\r\n      // 重新加载收藏数据\r\n      await loadFavorites();\r\n      setSelectedItems([]);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Failed to delete selected favorites:', error);\r\n    }\r\n  };\r\n  \r\n  // 全选/取消全选\r\n  const toggleSelectAll = () => {\r\n    if (selectedItems.length === favorites.length) {\r\n      setSelectedItems([]);\r\n    } else {\r\n      setSelectedItems(favorites.map(item => item.id));\r\n    }\r\n  };\r\n\r\n  const handleQuestionPress = (question) => {\r\n    navigation.navigate('QuestionDetail', { questionId: question.id });\r\n  };\r\n\r\n  const renderFavoriteItem = ({ item }) => {\r\n    // 确保日期格式化正确\r\n    let dateString = '';\r\n    try {\r\n      dateString = item.dateAdded instanceof Date ? \r\n        item.dateAdded.toLocaleDateString() : \r\n        new Date(item.dateAdded || Date.now()).toLocaleDateString();\r\n    } catch (e) {\r\n      console.error('Error formatting date:', e);\r\n      dateString = new Date().toLocaleDateString();\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.favoriteItem,\r\n          isEditing && selectedItems.includes(item.id) && styles.selectedItem\r\n        ]}\r\n        onPress={() => {\r\n          if (isEditing) {\r\n            toggleSelectItem(item.id);\r\n          } else {\r\n            handleQuestionPress(item);\r\n          }\r\n        }}\r\n        onLongPress={toggleEditMode}\r\n      >\r\n        {isEditing && (\r\n          <TouchableOpacity \r\n            style={styles.checkboxContainer} \r\n            onPress={() => toggleSelectItem(item.id)}\r\n          >\r\n            <Ionicons \r\n              name={selectedItems.includes(item.id) ? \"checkbox\" : \"square-outline\"} \r\n              size={24} \r\n              color={selectedItems.includes(item.id) ? \"#0066cc\" : \"#ccc\"} \r\n            />\r\n          </TouchableOpacity>\r\n        )}\r\n        <View style={styles.favoriteContent}>\r\n          <View style={styles.favoriteHeader}>\r\n            <Text style={styles.favoriteCategory}>{item.category}</Text>\r\n            <Text style={styles.favoriteDate}>{dateString}</Text>\r\n          </View>\r\n          <Text style={styles.favoriteQuestion}>{item.question}</Text>\r\n          <View style={styles.favoriteActions}>\r\n            <TouchableOpacity \r\n              style={styles.viewButton}\r\n              onPress={() => handleQuestionPress(item)}\r\n            >\r\n              <Text style={styles.viewButtonText}>查看详情</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#2196F3\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View>\r\n          <Text style={styles.title}>{t('favorites.title')}</Text>\r\n          <Text style={styles.subtitle}>已收藏 {favorites.length} 个题目</Text>\r\n        </View>\r\n        {favorites.length > 0 && (\r\n          <View style={styles.headerButtons}>\r\n            {isEditing ? (\r\n              <>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleSelectAll}\r\n                >\r\n                  <Text style={styles.headerButtonText}>\r\n                    {selectedItems.length === favorites.length ? '取消全选' : '全选'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={[styles.headerButton, styles.deleteButton]} \r\n                  onPress={deleteSelected}\r\n                  disabled={selectedItems.length === 0}\r\n                >\r\n                  <Text style={[styles.headerButtonText, styles.deleteButtonText]}>\r\n                    删除\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity \r\n                  style={styles.headerButton} \r\n                  onPress={toggleEditMode}\r\n                >\r\n                  <Text style={styles.headerButtonText}>取消</Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            ) : (\r\n              <TouchableOpacity \r\n                style={styles.headerButton} \r\n                onPress={toggleEditMode}\r\n              >\r\n                <Text style={styles.headerButtonText}>编辑</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n        )}\r\n      </View>\r\n\r\n      {favorites.length > 0 ? (\r\n        <FlatList\r\n          data={favorites}\r\n          renderItem={renderFavoriteItem}\r\n          keyExtractor={(item) => item.id?.toString() || Math.random().toString()}\r\n          contentContainerStyle={styles.listContainer}\r\n        />\r\n      ) : (\r\n        <View style={styles.emptyContainer}>\r\n          <Ionicons name=\"heart-outline\" size={80} color=\"#bdbdbd\" />\r\n          <Text style={styles.emptyText}>{t('favorites.noFavorites')}</Text>\r\n        </View>\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  subtitle: {\r\n    fontSize: 15,\r\n    color: '#666',\r\n  },\r\n  headerButtons: {\r\n    flexDirection: 'row',\r\n  },\r\n  headerButton: {\r\n    marginLeft: 10,\r\n    padding: 5,\r\n  },\r\n  headerButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 15,\r\n  },\r\n  deleteButton: {\r\n    marginHorizontal: 10,\r\n  },\r\n  deleteButtonText: {\r\n    color: '#F44336',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  favoriteItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 8,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 2,\r\n    elevation: 1,\r\n  },\r\n  selectedItem: {\r\n    backgroundColor: '#f0f8ff',\r\n  },\r\n  checkboxContainer: {\r\n    marginRight: 10,\r\n    justifyContent: 'center',\r\n  },\r\n  favoriteContent: {\r\n    flex: 1,\r\n    marginRight: 8,\r\n  },\r\n  favoriteHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 8,\r\n  },\r\n  favoriteCategory: {\r\n    color: '#0066cc',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  favoriteDate: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n  },\r\n  favoriteQuestion: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  favoriteActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f8ff',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n  },\r\n  viewButtonText: {\r\n    color: '#0066cc',\r\n    fontWeight: '500',\r\n    fontSize: 14,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 32,\r\n  },\r\n  emptyText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default FavoritesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Dimensions, Image, Platform, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { getFavoriteQuestions, getMistakes, getStudyProgressStats } from '../utils/database';\r\nimport { createShadow } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n// 计算响应式尺寸\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375; // 基于iPhone 8尺寸计算比例\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n  // 确保所有hooks在顶层，并且顺序固定\r\n  const { t } = useTranslation();\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    averageAccuracy: 0\r\n  });\r\n  const [favoritesCount, setFavoritesCount] = useState(0);\r\n  const [mistakesCount, setMistakesCount] = useState(0);\r\n\r\n  // 主要功能入口 - 不使用t函数的方式定义，避免hooks依赖问题\r\n  const features = [\r\n    {\r\n      id: 'browse',\r\n      icon: 'list',\r\n      screen: 'Browse',\r\n      color: '#4286f4'\r\n    },\r\n    {\r\n      id: 'exam',\r\n      icon: 'school',\r\n      screen: 'Exam',\r\n      color: '#2ecc71'\r\n    },\r\n    {\r\n      id: 'favorites',\r\n      icon: 'heart',\r\n      screen: 'Favorites',\r\n      color: '#e74c3c',\r\n      badge: favoritesCount\r\n    },\r\n    {\r\n      id: 'mistakes',\r\n      icon: 'close-circle',\r\n      screen: 'Mistakes',\r\n      color: '#f39c12',\r\n      badge: mistakesCount\r\n    }\r\n  ];\r\n\r\n  // 加载学习统计数据\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    \r\n    const loadStats = async () => {\r\n      try {\r\n        const progressStats = await getStudyProgressStats();\r\n        if (isMounted) {\r\n          setStats({\r\n            totalExams: progressStats.totalExams,\r\n            totalQuestions: progressStats.totalQuestions,\r\n            averageAccuracy: progressStats.averageAccuracy\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load study stats:', error);\r\n      }\r\n    };\r\n    \r\n    const loadFavoritesCount = async () => {\r\n      try {\r\n        const favorites = await getFavoriteQuestions();\r\n        if (isMounted) {\r\n          setFavoritesCount(favorites.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load favorites count:', error);\r\n      }\r\n    };\r\n    \r\n    const loadMistakesCount = async () => {\r\n      try {\r\n        const mistakes = await getMistakes();\r\n        if (isMounted) {\r\n          setMistakesCount(mistakes.length);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load mistakes count:', error);\r\n      }\r\n    };\r\n    \r\n    // 调用函数\r\n    loadStats();\r\n    loadFavoritesCount();\r\n    loadMistakesCount();\r\n\r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', () => {\r\n      loadStats();\r\n      loadFavoritesCount();\r\n      loadMistakesCount();\r\n    });\r\n\r\n    // 清理函数\r\n    return () => {\r\n      isMounted = false;\r\n      unsubscribe();\r\n    };\r\n  }, [navigation]); // 稳定的依赖数组\r\n  \r\n  // 检查是否从考试页面返回并带有考试结果\r\n  useEffect(() => {\r\n    const checkExamResults = () => {\r\n      const route = navigation.getState().routes.find(r => r.name === 'Home');\r\n      if (route?.params?.examCompleted) {\r\n        const examResults = route.params.examResults;\r\n        \r\n        // 显示成绩通知\r\n        setTimeout(() => {\r\n          Alert.alert(\r\n            '考试已完成',\r\n            `您的考试成绩: ${examResults.score}%\\n` +\r\n            `答对: ${examResults.correctCount} 题\\n` +\r\n            `答错: ${examResults.incorrectCount} 题\\n\\n` +\r\n            `${examResults.incorrectCount > 0 ? \r\n              '所有错题已自动收录至错题本，可随时复习。' : \r\n              '恭喜您全部答对！'}`,\r\n            [\r\n              { text: '我知道了', style: 'default' },\r\n              { \r\n                text: examResults.incorrectCount > 0 ? '查看错题' : '继续练习', \r\n                onPress: () => examResults.incorrectCount > 0 ? \r\n                  navigation.navigate('Mistakes') : \r\n                  navigation.navigate('Browse'),\r\n                style: 'default'\r\n              }\r\n            ]\r\n          );\r\n        }, 500);\r\n        \r\n        // 清除参数，避免重复显示\r\n        navigation.setParams({ examCompleted: undefined, examResults: undefined });\r\n      }\r\n    };\r\n    \r\n    checkExamResults();\r\n  }, [navigation]);\r\n\r\n  const getFeatureTitle = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseTopic');\r\n      case 'exam': return t('home.startExam');\r\n      case 'favorites': return t('home.favorites');\r\n      case 'mistakes': return t('home.reviewMistakes');\r\n      default: return '';\r\n    }\r\n  };\r\n  \r\n  const getFeatureDescription = (id) => {\r\n    switch (id) {\r\n      case 'browse': return t('home.browseDescription');\r\n      case 'exam': return t('home.examDescription');\r\n      case 'favorites': return t('home.favoritesDescription');\r\n      case 'mistakes': return t('home.mistakesDescription');\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        {/* 顶部头部区域 */}\r\n        <LinearGradient\r\n          colors={['#4c669f', '#3b5998', '#192f6a']}\r\n          style={styles.headerGradient}\r\n        >\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>{t('home.title')}</Text>\r\n            <Text style={styles.subtitle}>{t('home.subtitle')}</Text>\r\n            <Image \r\n              source={require('../../assets/images/react-logo.png')} \r\n              style={styles.headerImage} \r\n              resizeMode=\"contain\"\r\n            />\r\n          </View>\r\n        </LinearGradient>\r\n\r\n        {/* 功能卡片区 */}\r\n        <View style={styles.featuresContainer}>\r\n          <Text style={styles.sectionTitle}>主要功能</Text>\r\n          <View style={styles.featuresGrid}>\r\n            {features.map((feature) => (\r\n              <TouchableOpacity\r\n                key={feature.id}\r\n                style={[styles.featureCard, { backgroundColor: feature.color }]}\r\n                onPress={() => navigation.navigate(feature.screen)}\r\n                activeOpacity={0.8}\r\n              >\r\n                <View style={styles.featureIconContainer}>\r\n                  <Ionicons name={feature.icon} size={responsiveFontSize(28)} color=\"#fff\" />\r\n                  {feature.badge > 0 && (\r\n                    <View style={styles.badgeContainer}>\r\n                      <Text style={styles.badgeText}>{feature.badge}</Text>\r\n                    </View>\r\n                  )}\r\n                </View>\r\n                <Text style={styles.featureTitle}>\r\n                  {getFeatureTitle(feature.id)}\r\n                </Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        </View>\r\n\r\n        {/* 统计数据卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>{t('home.studyStats')}</Text>\r\n          <TouchableOpacity\r\n            style={styles.statsCard}\r\n            onPress={() => navigation.navigate('StudyProgress')}\r\n            activeOpacity={0.7}\r\n          >\r\n            <View style={styles.statsContent}>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n                <Text style={styles.statLabel}>{t('home.examsTaken')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n                <Text style={styles.statLabel}>{t('home.questionsAnswered')}</Text>\r\n              </View>\r\n              <View style={styles.statDivider} />\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statValue}>\r\n                  {stats.averageAccuracy !== undefined && !isNaN(stats.averageAccuracy) \r\n                    ? `${Math.round(stats.averageAccuracy * 100)}%` \r\n                    : '0%'}\r\n                </Text>\r\n                <Text style={styles.statLabel}>{t('home.accuracy')}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.statsFooter}>\r\n              <Text style={styles.viewMoreText}>查看详细统计</Text>\r\n              <Ionicons name=\"chevron-forward\" size={responsiveFontSize(18)} color=\"#4c669f\" />\r\n            </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* 考试信息卡片 */}\r\n        <View style={styles.cardSection}>\r\n          <Text style={styles.sectionTitle}>考试须知</Text>\r\n          <View style={styles.infoCard}>\r\n            <View style={styles.infoHeader}>\r\n              <Ionicons name=\"information-circle\" size={responsiveFontSize(24)} color=\"#4c669f\" />\r\n              <Text style={styles.infoTitle}>{t('exam.examInfo')}</Text>\r\n            </View>\r\n            <Text style={styles.infoText}>\r\n              • {t('exam.examInfoLine1')}{\"\\n\"}\r\n              • {t('exam.examInfoLine2')}{\"\\n\"}\r\n              • {t('exam.examInfoLine3')}{\"\\n\"}\r\n              • {t('exam.examInfoLine4')}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight || 0 : 0,\r\n    paddingBottom: responsiveHeight(4),\r\n    borderBottomLeftRadius: 20,\r\n    borderBottomRightRadius: 20,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(28),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#e0e0e0',\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  headerImage: {\r\n    width: responsiveWidth(30),\r\n    height: responsiveHeight(10),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  sectionTitle: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    marginLeft: responsiveWidth(5),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  cardSection: {\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresContainer: {\r\n    padding: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  featuresGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    marginHorizontal: responsiveWidth(2),\r\n  },\r\n  featureCard: {\r\n    width: '48%',\r\n    height: responsiveHeight(15),\r\n    backgroundColor: '#4c669f',\r\n    borderRadius: 16,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(2),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  featureIconContainer: {\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  featureTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  statsCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  statsContent: {\r\n    flexDirection: 'row',\r\n    padding: responsiveWidth(4),\r\n  },\r\n  statItem: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  statValue: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#4c669f',\r\n    marginBottom: responsiveHeight(0.5),\r\n  },\r\n  statLabel: {\r\n    fontSize: responsiveFontSize(12),\r\n    color: '#666',\r\n  },\r\n  statDivider: {\r\n    width: 1,\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  statsFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingVertical: responsiveHeight(1.5),\r\n  },\r\n  viewMoreText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#4c669f',\r\n    marginRight: responsiveWidth(1),\r\n    fontWeight: '500',\r\n  },\r\n  infoCard: {\r\n    backgroundColor: '#fff',\r\n    margin: responsiveWidth(5),\r\n    padding: responsiveWidth(4),\r\n    borderRadius: 12,\r\n    ...createShadow({\r\n      offset: { width: 0, height: 2 },\r\n      opacity: 0.1,\r\n      radius: 4,\r\n      elevation: 3\r\n    }),\r\n  },\r\n  infoHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  infoTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  infoText: {\r\n    lineHeight: responsiveFontSize(20),\r\n    color: '#444',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  badgeContainer: {\r\n    position: 'absolute',\r\n    top: -8,\r\n    right: -8,\r\n    backgroundColor: '#e74c3c',\r\n    borderRadius: 12,\r\n    minWidth: 20,\r\n    minHeight: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 5,\r\n  },\r\n  badgeText: {\r\n    fontSize: responsiveFontSize(10),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Alert, Dimensions, FlatList, Image, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { clearMistakes, getMistakes, removeMistake } from '../utils/database';\r\nimport { getImageProps } from '../utils/styleUtils';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = percentage => (width * percentage) / 100;\r\nconst responsiveHeight = percentage => (height * percentage) / 100;\r\nconst responsiveFontSize = size => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst MistakesScreen = ({ navigation }) => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [mistakes, setMistakes] = useState([]);\r\n  const [allQuestions, setAllQuestions] = useState([]);\r\n  \r\n  // 加载错题数据\r\n  useEffect(() => {\r\n    const loadMistakes = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // 加载所有题目\r\n        const questions = await assetDataService.loadAllQuestionSets();\r\n        setAllQuestions(questions);\r\n        console.log('Loaded questions:', questions.length);\r\n        \r\n        // 加载错题记录\r\n        console.log('Fetching mistake records...');\r\n        const mistakeRecords = await getMistakes();\r\n        console.log('Mistake records loaded:', mistakeRecords ? mistakeRecords.length : 'none');\r\n        \r\n        if (!mistakeRecords || mistakeRecords.length === 0) {\r\n          console.log('No mistakes found');\r\n          setMistakes([]);\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // 合并错题记录和题目详情\r\n        const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n          if (!mistake || !mistake.questionId) {\r\n            console.warn('Invalid mistake record:', mistake);\r\n            return null;\r\n          }\r\n          \r\n          const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n          \r\n          if (questionDetail) {\r\n            return {\r\n              ...mistake,\r\n              question: questionDetail.question,\r\n              category: questionDetail.category,\r\n              chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n              answers: questionDetail.answers,\r\n              correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n                ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n                : 'A',\r\n              signalImage: questionDetail.signalImage,\r\n              date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n            };\r\n          }\r\n          console.warn('Could not find question details for mistake:', mistake.questionId);\r\n          return null;\r\n        }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n        \r\n        console.log('Processed mistakes with details:', mistakesWithDetails.length);\r\n        \r\n        // 按日期排序，最新的在前面\r\n        mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n        \r\n        setMistakes(mistakesWithDetails);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error loading mistakes:', error);\r\n        setLoading(false);\r\n        Alert.alert(\r\n          '加载错误',\r\n          '加载错题数据失败: ' + error.message,\r\n          [{ text: '确定', style: 'default' }]\r\n        );\r\n      }\r\n    };\r\n\r\n    loadMistakes();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新\r\n    const unsubscribe = navigation.addListener('focus', loadMistakes);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 删除单个错题\r\n  const handleRemoveMistake = (questionId) => {\r\n    if (!questionId) {\r\n      console.error('Missing questionId for removal');\r\n      return;\r\n    }\r\n    \r\n    Alert.alert(\r\n      '删除错题',\r\n      '确定要从错题列表中删除此题目吗？',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { \r\n          text: '确定', \r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true); // 添加loading状态\r\n              console.log(`Removing mistake with ID: ${questionId}`);\r\n              \r\n              // 执行删除操作\r\n              const result = await removeMistake(questionId);\r\n              console.log('Remove result:', result);\r\n              \r\n              // 如果成功删除，更新UI\r\n              if (result) {\r\n                // 直接从当前state中移除，避免重新加载全部数据\r\n                const updatedMistakes = mistakes.filter(m => \r\n                  m.questionId.toString() !== questionId.toString()\r\n                );\r\n                setMistakes(updatedMistakes);\r\n                console.log(`Updated mistakes in UI: ${updatedMistakes.length}`);\r\n              } else {\r\n                console.warn('Failed to remove mistake, reloading data...');\r\n                // 如果删除失败，尝试重新加载全部数据\r\n                const updatedMistakes = await getMistakes();\r\n                const mistakesWithDetails = await processMistakes(updatedMistakes);\r\n                setMistakes(mistakesWithDetails);\r\n              }\r\n            } catch (error) {\r\n              console.error('Error removing mistake:', error);\r\n              Alert.alert('错误', '删除错题失败，请稍后重试。');\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 添加处理错题数据的辅助函数\r\n  const processMistakes = async (mistakeRecords) => {\r\n    // 加载所有题目\r\n    const questions = await assetDataService.loadAllQuestionSets();\r\n    \r\n    // 合并错题记录和题目详情\r\n    const mistakesWithDetails = mistakeRecords.map(mistake => {\r\n      if (!mistake || !mistake.questionId) {\r\n        console.warn('Invalid mistake record:', mistake);\r\n        return null;\r\n      }\r\n      \r\n      const questionDetail = questions.find(q => q.id && q.id.toString() === mistake.questionId.toString());\r\n      \r\n      if (questionDetail) {\r\n        return {\r\n          ...mistake,\r\n          question: questionDetail.question,\r\n          category: questionDetail.category,\r\n          chineseCategory: assetDataService.getChineseCategoryName(questionDetail.category),\r\n          answers: questionDetail.answers,\r\n          correctAnswer: questionDetail.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + questionDetail.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          signalImage: questionDetail.signalImage,\r\n          date: new Date(mistake.timestamp || Date.now()).toLocaleDateString()\r\n        };\r\n      }\r\n      console.warn('Could not find question details for mistake:', mistake.questionId);\r\n      return null;\r\n    }).filter(m => m && m.question); // 过滤掉找不到详情的记录\r\n    \r\n    // 按日期排序，最新的在前面\r\n    mistakesWithDetails.sort((a, b) => (b.timestamp || 0) - (a.timestamp || 0));\r\n    \r\n    return mistakesWithDetails;\r\n  };\r\n\r\n  // 修改清空所有错题函数\r\n  const handleClearAllMistakes = () => {\r\n    if (mistakes.length === 0) {\r\n      console.log('No mistakes to clear');\r\n      return;\r\n    }\r\n    \r\n    Alert.alert(\r\n      '清空错题',\r\n      '确定要清空所有错题记录吗？此操作不可恢复。',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { \r\n          text: '确定', \r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true); // 添加加载状态\r\n              console.log('Clearing all mistakes');\r\n              \r\n              // 尝试清空错题\r\n              await clearMistakes();\r\n              console.log('All mistakes cleared');\r\n              \r\n              // 直接清空当前状态\r\n              setMistakes([]);\r\n              \r\n              // 用一个提示告知用户操作成功\r\n              Alert.alert('操作成功', '所有错题记录已清空');\r\n            } catch (error) {\r\n              console.error('Error clearing mistakes:', error);\r\n              \r\n              // 出错时尝试使用备用方法\r\n              try {\r\n                console.log('Trying alternative method to clear mistakes...');\r\n                await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n                setMistakes([]);\r\n                Alert.alert('操作成功', '所有错题记录已清空');\r\n              } catch (backupError) {\r\n                console.error('Backup clear method also failed:', backupError);\r\n                Alert.alert('错误', '清空错题失败，请稍后重试。');\r\n              }\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 查看错题详情\r\n  const handleViewMistakeDetail = (mistake) => {\r\n    navigation.navigate('QuestionDetail', { questionId: mistake.questionId });\r\n  };\r\n\r\n  // 渲染错题项\r\n  const renderMistakeItem = ({ item }) => {\r\n    // 找出用户选择的答案\r\n    const userAnswerIndex = item.userAnswer ? item.userAnswer.charCodeAt(0) - 65 : -1;\r\n    const userAnswerText = userAnswerIndex >= 0 && item.answers[userAnswerIndex] \r\n      ? item.answers[userAnswerIndex].text \r\n      : '未作答';\r\n    \r\n    // 找出正确答案\r\n    const correctAnswerIndex = item.answers.findIndex(ans => ans.correct);\r\n    const correctAnswerText = correctAnswerIndex >= 0 \r\n      ? `${String.fromCharCode(65 + correctAnswerIndex)}: ${item.answers[correctAnswerIndex].text}` \r\n      : '未知';\r\n    \r\n    return (\r\n      <View style={styles.mistakeItem}>\r\n        <View style={styles.mistakeHeader}>\r\n          <View style={styles.categoryBadge}>\r\n            <Text style={styles.categoryText}>{item.chineseCategory || item.category}</Text>\r\n          </View>\r\n          <Text style={styles.mistakeDate}>{item.date}</Text>\r\n        </View>\r\n        \r\n        <Text style={styles.mistakeQuestion}>{item.question}</Text>\r\n        \r\n        {item.signalImage && (\r\n          <View style={styles.imageContainer}>\r\n            <Image \r\n              source={item.signalImage}\r\n              {...getImageProps({\r\n                ...styles.questionImage,\r\n                resizeMode: \"contain\"\r\n              })}\r\n            />\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.answerContainer}>\r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.wrongBadge]}>\r\n              <Text style={styles.answerBadgeText}>您的答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{item.userAnswer}: {userAnswerText}</Text>\r\n          </View>\r\n          \r\n          <View style={styles.answerRow}>\r\n            <View style={[styles.answerBadge, styles.correctBadge]}>\r\n              <Text style={styles.answerBadgeText}>正确答案</Text>\r\n            </View>\r\n            <Text style={styles.answerText}>{correctAnswerText}</Text>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.mistakeActions}>\r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.viewButton]}\r\n            onPress={() => handleViewMistakeDetail(item)}\r\n          >\r\n            <Ionicons name=\"eye\" size={responsiveFontSize(16)} color=\"#4c669f\" />\r\n            <Text style={styles.viewButtonText}>查看详情</Text>\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity \r\n            style={[styles.actionButton, styles.deleteButton]}\r\n            onPress={() => handleRemoveMistake(item.questionId)}\r\n          >\r\n            <Ionicons name=\"trash-bin\" size={responsiveFontSize(16)} color=\"#e74c3c\" />\r\n            <Text style={styles.deleteButtonText}>移除</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n      \r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>错题本</Text>\r\n        <Text style={styles.subtitle}>共{mistakes.length}道错题</Text>\r\n        \r\n        {mistakes.length > 0 && (\r\n          <TouchableOpacity \r\n            style={styles.clearButton} \r\n            onPress={handleClearAllMistakes}\r\n          >\r\n            <Ionicons name=\"trash\" size={responsiveFontSize(18)} color=\"#e74c3c\" />\r\n            <Text style={styles.clearButtonText}>清空</Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      \r\n      {loading ? (\r\n        <View style={styles.loadingContainer}>\r\n          <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n          <Text style={styles.loadingText}>加载错题中...</Text>\r\n        </View>\r\n      ) : (\r\n        <FlatList\r\n          data={mistakes}\r\n          renderItem={renderMistakeItem}\r\n          keyExtractor={(item) => item.questionId.toString()}\r\n          contentContainerStyle={styles.mistakesList}\r\n          showsVerticalScrollIndicator={true}\r\n          ListEmptyComponent={() => (\r\n            <View style={styles.emptyContainer}>\r\n              <Ionicons name=\"checkmark-circle\" size={responsiveFontSize(80)} color=\"#e0e0e0\" />\r\n              <Text style={styles.emptyText}>您还没有错题记录</Text>\r\n              <Text style={styles.emptySubText}>答错的题目会自动记录在这里</Text>\r\n              \r\n              <TouchableOpacity \r\n                style={styles.startExamButton}\r\n                onPress={() => navigation.navigate('Exam')}\r\n              >\r\n                <Text style={styles.startExamText}>开始模拟考试</Text>\r\n                <Ionicons name=\"arrow-forward\" size={responsiveFontSize(16)} color=\"#fff\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  title: {\r\n    fontSize: responsiveFontSize(24),\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  subtitle: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#666',\r\n    marginLeft: responsiveWidth(2),\r\n    alignSelf: 'flex-end',\r\n  },\r\n  clearButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff0f0',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.5),\r\n    borderRadius: 20,\r\n  },\r\n  clearButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  mistakesList: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  mistakeItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  mistakeHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  categoryBadge: {\r\n    backgroundColor: '#eef2ff',\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.3),\r\n    borderRadius: 12,\r\n  },\r\n  categoryText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeDate: {\r\n    color: '#999',\r\n    fontSize: responsiveFontSize(12),\r\n  },\r\n  mistakeQuestion: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    marginBottom: responsiveHeight(1.5),\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1.5),\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(2),\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(40),\r\n    height: responsiveWidth(40),\r\n  },\r\n  answerContainer: {\r\n    backgroundColor: '#f9f9f9',\r\n    borderRadius: 8,\r\n    padding: responsiveWidth(3),\r\n    marginBottom: responsiveHeight(1.5),\r\n  },\r\n  answerRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  answerBadge: {\r\n    paddingHorizontal: responsiveWidth(2),\r\n    paddingVertical: responsiveHeight(0.2),\r\n    borderRadius: 12,\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  wrongBadge: {\r\n    backgroundColor: '#ffebee',\r\n  },\r\n  correctBadge: {\r\n    backgroundColor: '#e8f5e9',\r\n  },\r\n  answerBadgeText: {\r\n    fontSize: responsiveFontSize(11),\r\n    fontWeight: '500',\r\n  },\r\n  answerText: {\r\n    flex: 1,\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#444',\r\n  },\r\n  mistakeActions: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n    paddingTop: responsiveHeight(1.5),\r\n  },\r\n  actionButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: responsiveWidth(3),\r\n    paddingVertical: responsiveHeight(0.8),\r\n    borderRadius: 20,\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#f0f5ff',\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: '#fff0f0',\r\n  },\r\n  viewButtonText: {\r\n    color: '#4c669f',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  deleteButtonText: {\r\n    color: '#e74c3c',\r\n    fontSize: responsiveFontSize(14),\r\n    marginLeft: responsiveWidth(1),\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(5),\r\n    marginTop: responsiveHeight(10),\r\n  },\r\n  emptyText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#666',\r\n    marginTop: responsiveHeight(3),\r\n  },\r\n  emptySubText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#999',\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(5),\r\n    textAlign: 'center',\r\n  },\r\n  startExamButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 25,\r\n  },\r\n  startExamText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: '500',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default MistakesScreen; ","import { Ionicons } from '@expo/vector-icons';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Dimensions, Image, Platform, SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport QuestionLanguageSwitcher from '../components/QuestionLanguageSwitcher';\r\nimport assetDataService from '../utils/assetDataService';\r\nimport { addToFavorites, isQuestionFavorited, recordMistake, removeFromFavorites } from '../utils/database';\r\n\r\n// 获取设备尺寸\r\nconst { width, height } = Dimensions.get('window');\r\nconst responsiveWidth = (percentage) => (width * percentage) / 100;\r\nconst responsiveHeight = (percentage) => (height * percentage) / 100;\r\nconst responsiveFontSize = (size) => {\r\n  const scaleFactor = Math.min(width, height) / 375;\r\n  return Math.round(size * scaleFactor);\r\n};\r\n\r\nconst QuestionDetailScreen = ({ route, navigation }) => {\r\n  const { questionId } = route.params;\r\n  const { t, i18n } = useTranslation();\r\n  \r\n  const [question, setQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.language || 'zh');\r\n\r\n  // 语言切换处理函数\r\n  const handleLanguageChange = async (language) => {\r\n    setCurrentLanguage(language);\r\n    i18n.changeLanguage(language);\r\n    // 重新加载题目\r\n    await loadQuestion(language);\r\n  };\r\n\r\n  // 加载题目详情\r\n  const loadQuestion = async (language = currentLanguage) => {\r\n    try {\r\n      // 检查questionId是否存在\r\n      if (!questionId) {\r\n        console.error('Question ID is undefined');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // 首先尝试从asset数据中加载题目\r\n      const allQuestions = await assetDataService.loadAllQuestionSets(language);\r\n      const assetQuestion = allQuestions.find(q => q.id && q.id.toString() === questionId.toString());\r\n      \r\n      if (assetQuestion) {\r\n        // 转换题目格式以适应UI\r\n        const formattedQuestion = {\r\n          ...assetQuestion,\r\n          options: assetQuestion.answers.map((ans, index) => ({\r\n            id: String.fromCharCode(65 + index), // 转换为A, B, C...\r\n            text: ans.text,\r\n            isCorrect: ans.correct\r\n          })),\r\n          correctAnswer: assetQuestion.answers.findIndex(ans => ans.correct) >= 0 \r\n            ? String.fromCharCode(65 + assetQuestion.answers.findIndex(ans => ans.correct))\r\n            : 'A',\r\n          explanation: assetQuestion.explanation || '暂无解析',\r\n          category: assetDataService.getChineseCategoryName(assetQuestion.category)\r\n        };\r\n        \r\n        // 使用signalImage属性\r\n        if (assetQuestion.signalImage) {\r\n          formattedQuestion.signalImage = assetQuestion.signalImage;\r\n        }\r\n        \r\n        setQuestion(formattedQuestion);\r\n        \r\n        // 检查是否已收藏\r\n        const favoriteStatus = await isQuestionFavorited(questionId);\r\n        setIsFavorite(favoriteStatus);\r\n      } else {\r\n        // 如果在asset数据中找不到，则提示错误\r\n        console.error('Question not found in asset data:', questionId);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading question:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // 加载数据\r\n  useEffect(() => {\r\n    loadQuestion();\r\n  }, [questionId]);\r\n\r\n  // 选择答案\r\n  const selectOption = (optionId) => {\r\n    if (!showAnswer) {\r\n      setSelectedOption(optionId);\r\n    }\r\n  };\r\n\r\n  // 检查答案\r\n  const checkAnswer = () => {\r\n    if (selectedOption) {\r\n      setShowAnswer(true);\r\n      const isCorrect = selectedOption === question.correctAnswer;\r\n      setIsAnswerCorrect(isCorrect);\r\n      \r\n      // 如果回答错误，记录错题\r\n      if (!isCorrect) {\r\n        recordMistake(questionId, selectedOption);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 下一题\r\n  const nextQuestion = () => {\r\n    // 这里应该加载下一道题，这里简单模拟返回列表\r\n    navigation.goBack();\r\n  };\r\n\r\n  // 切换收藏状态\r\n  const toggleFavorite = async () => {\r\n    try {\r\n      if (isFavorite) {\r\n        await removeFromFavorites(question.id);\r\n      } else {\r\n        await addToFavorites(question.id);\r\n      }\r\n      setIsFavorite(!isFavorite);\r\n    } catch (error) {\r\n      console.error('Error toggling favorite:', error);\r\n    }\r\n  };\r\n\r\n  // 渲染选项\r\n  const renderOption = (option) => {\r\n    const isSelected = selectedOption === option.id;\r\n    const isCorrect = question.correctAnswer === option.id;\r\n    \r\n    let optionStyle = styles.option;\r\n    let textStyle = styles.optionText;\r\n    let iconName = 'ellipse-outline';\r\n    let iconColor = '#999';\r\n    \r\n    if (showAnswer) {\r\n      if (isCorrect) {\r\n        optionStyle = [styles.option, styles.correctOption];\r\n        textStyle = [styles.optionText, styles.correctOptionText];\r\n        iconName = 'checkmark-circle';\r\n        iconColor = '#4CAF50';\r\n      } else if (isSelected && !isCorrect) {\r\n        optionStyle = [styles.option, styles.incorrectOption];\r\n        textStyle = [styles.optionText, styles.incorrectOptionText];\r\n        iconName = 'close-circle';\r\n        iconColor = '#F44336';\r\n      }\r\n    } else if (isSelected) {\r\n      optionStyle = [styles.option, styles.selectedOption];\r\n      textStyle = [styles.optionText, styles.selectedOptionText];\r\n      iconName = 'radio-button-on';\r\n      iconColor = '#4c669f';\r\n    }\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={option.id} \r\n        style={optionStyle}\r\n        onPress={() => selectOption(option.id)}\r\n        disabled={showAnswer}\r\n        activeOpacity={0.8}\r\n      >\r\n        <Ionicons name={iconName} size={responsiveFontSize(24)} color={iconColor} style={styles.optionIcon} />\r\n        <Text style={textStyle}>\r\n          {option.id}. {option.text}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>加载题目中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (!question) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Ionicons name=\"alert-circle-outline\" size={responsiveFontSize(60)} color=\"#F44336\" />\r\n        <Text style={styles.errorText}>题目加载失败</Text>\r\n        <TouchableOpacity \r\n          style={styles.backButton} \r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Text style={styles.backButtonText}>返回上一页</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#4c669f\" />\r\n      \r\n      <LinearGradient\r\n        colors={['#4c669f', '#3b5998', '#192f6a']}\r\n        style={styles.headerGradient}\r\n      >\r\n        <View style={styles.header}>\r\n          <View style={styles.headerTop}>\r\n            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backBtn}>\r\n              <Ionicons name=\"arrow-back\" size={responsiveFontSize(22)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity onPress={toggleFavorite} style={styles.favoriteButton}>\r\n              <Ionicons \r\n                name={isFavorite ? 'heart' : 'heart-outline'} \r\n                size={responsiveFontSize(22)} \r\n                color={isFavorite ? '#ff6b6b' : '#fff'} \r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          \r\n          <View style={styles.headerInfo}>\r\n            <Text style={styles.categoryText}>{question.category}</Text>\r\n            <Text style={styles.questionIdText}>题目 #{question.id}</Text>\r\n          </View>\r\n        </View>\r\n      </LinearGradient>\r\n      \r\n      <ScrollView \r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={styles.scrollContent}\r\n      >\r\n        <View style={styles.languageSwitcherContainer}>\r\n          <QuestionLanguageSwitcher \r\n            currentLanguage={currentLanguage} \r\n            onChangeLanguage={handleLanguageChange}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.questionContainer}>\r\n          <Text style={styles.questionText}>{question.question}</Text>\r\n          \r\n          {question.signalImage && (\r\n            <View style={styles.imageContainer}>\r\n              <Image \r\n                source={question.signalImage} \r\n                style={styles.questionImage}\r\n                resizeMode=\"contain\"\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n        \r\n        <View style={styles.optionsContainer}>\r\n          {question.options.map(option => renderOption(option))}\r\n        </View>\r\n        \r\n        {showAnswer && (\r\n          <View style={styles.resultContainer}>\r\n            <View style={[\r\n              styles.resultBanner,\r\n              isAnswerCorrect ? styles.correctBanner : styles.incorrectBanner\r\n            ]}>\r\n              <Ionicons \r\n                name={isAnswerCorrect ? 'checkmark-circle' : 'close-circle'} \r\n                size={responsiveFontSize(24)} \r\n                color=\"#fff\" \r\n                style={styles.resultIcon}\r\n              />\r\n              <Text style={styles.resultText}>\r\n                {isAnswerCorrect ? '回答正确！' : '回答错误！'}\r\n              </Text>\r\n            </View>\r\n            \r\n            <View style={styles.explanationContainer}>\r\n              <View style={styles.explanationHeader}>\r\n                <Ionicons name=\"information-circle\" size={responsiveFontSize(20)} color=\"#F57C00\" />\r\n                <Text style={styles.explanationTitle}>解析</Text>\r\n              </View>\r\n              <Text style={styles.explanationText}>{question.explanation}</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!showAnswer ? (\r\n            <TouchableOpacity \r\n              style={[styles.button, !selectedOption && styles.buttonDisabled]} \r\n              onPress={checkAnswer}\r\n              disabled={!selectedOption}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>提交答案</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity \r\n              style={[styles.button, styles.nextButton]} \r\n              onPress={nextQuestion}\r\n              activeOpacity={0.7}\r\n            >\r\n              <Text style={styles.buttonText}>下一题</Text>\r\n              <Ionicons name=\"arrow-forward\" size={responsiveFontSize(18)} color=\"#fff\" />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  headerGradient: {\r\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\r\n  },\r\n  header: {\r\n    padding: responsiveWidth(5),\r\n  },\r\n  headerTop: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  backBtn: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  headerInfo: {\r\n    marginTop: responsiveHeight(1),\r\n  },\r\n  categoryText: {\r\n    fontSize: responsiveFontSize(14),\r\n    color: '#e0e0e0',\r\n  },\r\n  questionIdText: {\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    marginTop: responsiveWidth(1),\r\n  },\r\n  favoriteButton: {\r\n    padding: responsiveWidth(1),\r\n  },\r\n  scrollContent: {\r\n    paddingBottom: responsiveHeight(5),\r\n  },\r\n  languageSwitcherContainer: {\r\n    marginTop: responsiveHeight(1),\r\n    marginBottom: responsiveHeight(0.5),\r\n    alignItems: 'center',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: responsiveHeight(2),\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#666',\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: responsiveWidth(5),\r\n  },\r\n  errorText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#F44336',\r\n    marginTop: responsiveHeight(2),\r\n    marginBottom: responsiveHeight(3),\r\n  },\r\n  backButton: {\r\n    backgroundColor: '#4c669f',\r\n    paddingHorizontal: responsiveWidth(5),\r\n    paddingVertical: responsiveHeight(1),\r\n    borderRadius: 20,\r\n  },\r\n  backButtonText: {\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n    fontSize: responsiveFontSize(14),\r\n  },\r\n  questionContainer: {\r\n    padding: responsiveWidth(5),\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: responsiveFontSize(18),\r\n    color: '#333',\r\n    fontWeight: '500',\r\n    lineHeight: responsiveFontSize(26),\r\n  },\r\n  imageContainer: {\r\n    alignItems: 'center',\r\n    marginTop: responsiveHeight(2),\r\n    backgroundColor: '#f9f9f9',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 8,\r\n  },\r\n  questionImage: {\r\n    width: responsiveWidth(70),\r\n    height: responsiveWidth(70),\r\n  },\r\n  optionsContainer: {\r\n    padding: responsiveWidth(3),\r\n  },\r\n  option: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n    padding: responsiveWidth(4),\r\n    paddingVertical: responsiveHeight(1.5),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(1.5),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 1,\r\n    elevation: 1,\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#e3f2fd',\r\n    borderColor: '#4c669f',\r\n    borderWidth: 1,\r\n  },\r\n  correctOption: {\r\n    backgroundColor: '#e8f5e9',\r\n    borderColor: '#4CAF50',\r\n    borderWidth: 1,\r\n  },\r\n  incorrectOption: {\r\n    backgroundColor: '#ffebee',\r\n    borderColor: '#F44336',\r\n    borderWidth: 1,\r\n  },\r\n  optionIcon: {\r\n    marginRight: responsiveWidth(3),\r\n  },\r\n  optionText: {\r\n    fontSize: responsiveFontSize(16),\r\n    color: '#333',\r\n    flex: 1,\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  selectedOptionText: {\r\n    color: '#4c669f',\r\n    fontWeight: '500',\r\n  },\r\n  correctOptionText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectOptionText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  resultContainer: {\r\n    marginHorizontal: responsiveWidth(3),\r\n    marginTop: responsiveHeight(2),\r\n  },\r\n  resultBanner: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: responsiveWidth(3),\r\n    borderRadius: 10,\r\n    marginBottom: responsiveHeight(2),\r\n  },\r\n  correctBanner: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  incorrectBanner: {\r\n    backgroundColor: '#F44336',\r\n  },\r\n  resultIcon: {\r\n    marginRight: responsiveWidth(2),\r\n  },\r\n  resultText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(18),\r\n    fontWeight: 'bold',\r\n  },\r\n  explanationContainer: {\r\n    backgroundColor: '#fff8e1',\r\n    borderRadius: 10,\r\n    padding: responsiveWidth(4),\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  explanationHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: responsiveHeight(1),\r\n  },\r\n  explanationTitle: {\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    color: '#F57C00',\r\n    marginLeft: responsiveWidth(2),\r\n  },\r\n  explanationText: {\r\n    fontSize: responsiveFontSize(15),\r\n    color: '#5D4037',\r\n    lineHeight: responsiveFontSize(22),\r\n  },\r\n  buttonContainer: {\r\n    padding: responsiveWidth(5),\r\n    paddingTop: responsiveHeight(3),\r\n  },\r\n  button: {\r\n    backgroundColor: '#4c669f',\r\n    padding: responsiveHeight(1.8),\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  buttonDisabled: {\r\n    backgroundColor: '#B0BEC5',\r\n  },\r\n  nextButton: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: responsiveFontSize(16),\r\n    fontWeight: 'bold',\r\n    marginRight: responsiveWidth(2),\r\n  }\r\n});\r\n\r\nexport default QuestionDetailScreen; ","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { recordStudyProgress } from '../utils/database';\r\n\r\nexport default function ResultScreen({ route, navigation }) {\r\n  const { results, examType, timeSpent } = route.params;\r\n  \r\n  const [isPassed, setIsPassed] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [percentageScore, setPercentageScore] = useState(0);\r\n  \r\n  // 计算成绩\r\n  useEffect(() => {\r\n    if (results) {\r\n      const correctAnswers = results.filter(item => item.isCorrect).length;\r\n      const totalQuestions = results.length;\r\n      \r\n      const calculatedScore = Math.round(correctAnswers / totalQuestions * 100);\r\n      setScore(calculatedScore);\r\n      setPercentageScore(correctAnswers / totalQuestions);\r\n      \r\n      // 考试通过标准：80%以上\r\n      setIsPassed(calculatedScore >= 80);\r\n      \r\n      // 记录学习进度\r\n      recordStudyProgress({\r\n        questionsAnswered: totalQuestions,\r\n        correctCount: correctAnswers,\r\n        examType: examType || 'unknown'\r\n      }).catch(error => {\r\n        console.error('Failed to record study progress:', error);\r\n      });\r\n    }\r\n  }, [results, examType]);\r\n  \r\n  // 返回首页\r\n  const goToHome = () => {\r\n    navigation.navigate('Main');\r\n  };\r\n  \r\n  // 重新考试\r\n  const retryExam = () => {\r\n    navigation.navigate('Exam');\r\n  };\r\n  \r\n  // 查看错题\r\n  const viewMistakes = () => {\r\n    navigation.navigate('Mistakes');\r\n  };\r\n  \r\n  // 渲染得分圆环\r\n  const renderScoreCircle = () => {\r\n    return (\r\n      <View style={styles.scoreCircleContainer}>\r\n        <View style={[\r\n          styles.scoreCircle,\r\n          {borderColor: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          <Text style={[\r\n            styles.scoreText,\r\n            {color: isPassed ? '#4CAF50' : '#F44336'}\r\n          ]}>{score}%</Text>\r\n          <Text style={styles.scoreSubtext}>\r\n            {results.filter(item => item.isCorrect).length} / {results.length} 题正确\r\n          </Text>\r\n        </View>\r\n        <Text style={[\r\n          styles.resultText,\r\n          {color: isPassed ? '#4CAF50' : '#F44336'}\r\n        ]}>\r\n          {isPassed ? '恭喜，考试通过！' : '很遗憾，考试未通过'}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  // 渲染每题结果\r\n  const renderQuestionResult = ({ item, index }) => {\r\n    return (\r\n      <TouchableOpacity \r\n        style={styles.questionItem}\r\n        onPress={() => navigation.navigate('QuestionDetail', { questionId: item.questionId })}\r\n      >\r\n        <View style={styles.questionHeader}>\r\n          <Text style={styles.questionNumber}>题目 #{index + 1}</Text>\r\n          {item.isCorrect ? (\r\n            <View style={styles.correctBadge}>\r\n              <Ionicons name=\"checkmark\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>正确</Text>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.incorrectBadge}>\r\n              <Ionicons name=\"close\" size={16} color=\"#fff\" />\r\n              <Text style={styles.badgeText}>错误</Text>\r\n            </View>\r\n          )}\r\n        </View>\r\n        <Text style={styles.questionText} numberOfLines={2}>{item.question}</Text>\r\n        <View style={styles.answerInfo}>\r\n          <Text style={styles.answerLabel}>\r\n            您的回答: <Text style={item.isCorrect ? styles.correctText : styles.incorrectText}>{item.selectedOption}</Text>\r\n          </Text>\r\n          {!item.isCorrect && (\r\n            <Text style={styles.answerLabel}>\r\n              正确答案: <Text style={styles.correctText}>{item.correctOption}</Text>\r\n            </Text>\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n  \r\n  // 渲染统计信息\r\n  const renderStats = () => {\r\n    return (\r\n      <View style={styles.statsContainer}>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"time-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>用时</Text>\r\n          <Text style={styles.statValue}>\r\n            {Math.floor(timeSpent / 60)}分{timeSpent % 60}秒\r\n          </Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"checkmark-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>正确</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => item.isCorrect).length}</Text>\r\n        </View>\r\n        <View style={styles.statItem}>\r\n          <Ionicons name=\"close-circle-outline\" size={22} color=\"#666\" />\r\n          <Text style={styles.statLabel}>错误</Text>\r\n          <Text style={styles.statValue}>{results.filter(item => !item.isCorrect).length}</Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>考试结果</Text>\r\n          <Text style={styles.subtitle}>\r\n            {examType === 'full' ? '完整模拟考试' : examType === 'practice' ? '练习模式' : '快速测试'}\r\n          </Text>\r\n        </View>\r\n        \r\n        {renderScoreCircle()}\r\n        {renderStats()}\r\n        \r\n        <View style={styles.resultsContainer}>\r\n          <Text style={styles.sectionTitle}>题目详情</Text>\r\n          <FlatList\r\n            data={results}\r\n            renderItem={renderQuestionResult}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            scrollEnabled={false}\r\n          />\r\n        </View>\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          {!isPassed ? (\r\n            <TouchableOpacity style={styles.button} onPress={retryExam}>\r\n              <Ionicons name=\"reload\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>重新考试</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity style={styles.button} onPress={goToHome}>\r\n              <Ionicons name=\"home\" size={20} color=\"#fff\" style={styles.buttonIcon} />\r\n              <Text style={styles.buttonText}>返回首页</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          \r\n          {results.filter(item => !item.isCorrect).length > 0 && (\r\n            <TouchableOpacity style={[styles.button, styles.secondaryButton]} onPress={viewMistakes}>\r\n              <Ionicons name=\"list\" size={20} color=\"#0066cc\" style={styles.buttonIcon} />\r\n              <Text style={styles.secondaryButtonText}>查看错题</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  scoreCircleContainer: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  scoreCircle: {\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    borderWidth: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  scoreText: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n  },\r\n  scoreSubtext: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  resultText: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n  },\r\n  statsContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginHorizontal: 20,\r\n    justifyContent: 'space-between',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginVertical: 4,\r\n  },\r\n  statValue: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    marginHorizontal: 20,\r\n    marginTop: 25,\r\n  },\r\n  resultsContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  questionItem: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginHorizontal: 20,\r\n    marginBottom: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 2,\r\n    elevation: 2,\r\n  },\r\n  questionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  questionNumber: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  correctBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#4CAF50',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  incorrectBadge: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#F44336',\r\n    borderRadius: 12,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 2,\r\n    alignItems: 'center',\r\n  },\r\n  badgeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    marginLeft: 2,\r\n  },\r\n  questionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n    marginBottom: 10,\r\n  },\r\n  answerInfo: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#eee',\r\n    paddingTop: 10,\r\n  },\r\n  answerLabel: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    marginBottom: 3,\r\n  },\r\n  correctText: {\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n  },\r\n  incorrectText: {\r\n    color: '#F44336',\r\n    fontWeight: '500',\r\n  },\r\n  buttonContainer: {\r\n    padding: 20,\r\n    paddingTop: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: '#0066cc',\r\n    borderRadius: 10,\r\n    paddingVertical: 15,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  secondaryButton: {\r\n    backgroundColor: '#fff',\r\n    borderColor: '#0066cc',\r\n    borderWidth: 1,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 8,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  secondaryButtonText: {\r\n    color: '#0066cc',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  }\r\n}); ","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Alert } from 'react-native';\r\nimport assetDataService from './assetDataService';\r\n\r\n/**\r\n * 修复收藏数据结构问题\r\n * 会尝试重建收藏数据与题目之间的关联\r\n */\r\nexport const repairFavoritesData = async () => {\r\n  try {\r\n    console.log('开始修复收藏数据...');\r\n    \r\n    // 1. 获取现有收藏数据\r\n    const storedFavorites = await AsyncStorage.getItem('favorites');\r\n    const favorites = storedFavorites ? JSON.parse(storedFavorites) : [];\r\n    console.log('现有收藏数量:', favorites.length);\r\n    \r\n    // 2. 获取所有题目\r\n    const allQuestions = await assetDataService.loadAllQuestionSets();\r\n    console.log('题目总数:', allQuestions.length);\r\n    \r\n    // 3. 重新构建有效的收藏数据\r\n    const validFavorites = [];\r\n    let repaired = 0;\r\n    \r\n    for (const fav of favorites) {\r\n      const questionId = fav.questionId || fav.id;\r\n      \r\n      if (!questionId) continue;\r\n      \r\n      const question = allQuestions.find(q => \r\n        q.id && (q.id.toString() === questionId.toString())\r\n      );\r\n      \r\n      if (question) {\r\n        // 添加有效格式的收藏\r\n        validFavorites.push({\r\n          id: `fav_${question.id}_${Date.now()}`,\r\n          questionId: question.id.toString(),\r\n          dateAdded: fav.dateAdded || Date.now(),\r\n          timestamp: Date.now()\r\n        });\r\n        repaired++;\r\n      }\r\n    }\r\n    \r\n    // 4. 保存修复后的数据\r\n    await AsyncStorage.setItem('favorites', JSON.stringify(validFavorites));\r\n    console.log(`收藏数据修复完成，成功恢复 ${repaired} 个收藏`);\r\n    \r\n    return {\r\n      success: true,\r\n      message: `成功修复 ${repaired} 个收藏数据`\r\n    };\r\n  } catch (error) {\r\n    console.error('修复收藏数据失败:', error);\r\n    return {\r\n      success: false,\r\n      message: error.message \r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 修复错题本清空功能\r\n */\r\nexport const ensureCleanMistakes = async () => {\r\n  try {\r\n    console.log('尝试强制清空错题数据...');\r\n    \r\n    // 直接设置空数组到错题存储\r\n    await AsyncStorage.setItem('mistakes', JSON.stringify([]));\r\n    \r\n    return {\r\n      success: true,\r\n      message: '成功清空错题数据'\r\n    };\r\n  } catch (error) {\r\n    console.error('清空错题数据失败:', error);\r\n    return {\r\n      success: false, \r\n      message: error.message\r\n    };\r\n  }\r\n};\r\n\r\n/**\r\n * 一次性修复所有已知问题\r\n */\r\nexport const fixAllIssues = async () => {\r\n  try {\r\n    const results = [];\r\n    \r\n    // 1. 修复收藏功能\r\n    const favResult = await repairFavoritesData();\r\n    results.push(`收藏功能: ${favResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 2. 修复错题本\r\n    const mistakeResult = await ensureCleanMistakes();\r\n    results.push(`错题本: ${mistakeResult.success ? '已修复' : '修复失败'}`);\r\n    \r\n    // 3. 重置学习进度数据，修复NaN%问题\r\n    await AsyncStorage.setItem('studyProgress', JSON.stringify([]));\r\n    results.push('学习进度: 已重置');\r\n    \r\n    console.log('所有问题修复完成:', results);\r\n    \r\n    Alert.alert(\r\n      '修复完成',\r\n      results.join('\\n'),\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('修复问题失败:', error);\r\n    \r\n    Alert.alert(\r\n      '修复失败',\r\n      '修复应用问题时出错: ' + error.message,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n    \r\n    return false;\r\n  }\r\n}; ","/**\r\n * JSON修复工具\r\n * \r\n * 用于处理并修复驾考应用中题库JSON文件的格式问题\r\n */\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { Alert, Platform } from 'react-native';\r\n\r\n/**\r\n * 处理JSON解析错误并创建修复后的文件\r\n * @returns {Promise<boolean>} 是否成功修复\r\n */\r\nexport const fixJsonErrors = async () => {\r\n  try {\r\n    console.log('开始尝试修复JSON错误...');\r\n    \r\n    // 如果当前是Web环境，则使用不同的方法\r\n    if (Platform.OS === 'web') {\r\n      // 在Web环境中，我们可以通过存储一个标记来优先使用fixed版本的JSON\r\n      await AsyncStorage.setItem('useFixedJson', 'true');\r\n      console.log('已设置Web环境优先使用fixed版本的JSON');\r\n      return true;\r\n    }\r\n    \r\n    // 在原生环境中，我们可以直接复制修复后的文件\r\n    const hasFixedFiles = await checkAndCopyFixedFiles();\r\n    \r\n    if (hasFixedFiles) {\r\n      Alert.alert(\r\n        '修复完成',\r\n        '已成功修复JSON文件格式问题，应用将正常加载所有题目。'\r\n      );\r\n      return true;\r\n    } else {\r\n      Alert.alert(\r\n        '修复失败',\r\n        '无法找到修复后的JSON文件或复制过程中出现错误。'\r\n      );\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    console.error('修复JSON错误失败:', error);\r\n    Alert.alert(\r\n      '修复错误',\r\n      `尝试修复JSON文件时出错: ${error.message}`\r\n    );\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 检查并复制修复后的文件\r\n * @returns {Promise<boolean>} 是否成功复制\r\n */\r\nconst checkAndCopyFixedFiles = async () => {\r\n  try {\r\n    if (!FileSystem) {\r\n      console.log('FileSystem API不可用');\r\n      return false;\r\n    }\r\n    \r\n    // 获取数据目录\r\n    const dataDir = FileSystem.documentDirectory + 'assets/data/';\r\n    \r\n    // 创建目录（如果不存在）\r\n    await FileSystem.makeDirectoryAsync(dataDir, { intermediates: true }).catch(() => {});\r\n    \r\n    // 检查是否存在已修复的文件\r\n    const fixedFiles = [];\r\n    for (let i = 0; i <= 5; i++) {\r\n      const fixedFileName = `setofquestions${i}_fixed.json`;\r\n      const fixedFilePath = `${dataDir}${fixedFileName}`;\r\n      \r\n      try {\r\n        const info = await FileSystem.getInfoAsync(fixedFilePath);\r\n        if (info.exists) {\r\n          fixedFiles.push({\r\n            setNumber: i,\r\n            path: fixedFilePath\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(`检查修复文件 ${fixedFileName} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    console.log(`找到 ${fixedFiles.length} 个修复后的文件`);\r\n    \r\n    // 如果没有找到任何修复后的文件，返回失败\r\n    if (fixedFiles.length === 0) {\r\n      return false;\r\n    }\r\n    \r\n    // 复制修复后的文件\r\n    for (const file of fixedFiles) {\r\n      const originalFilePath = `${dataDir}setofquestions${file.setNumber}.json`;\r\n      \r\n      // 备份原始文件\r\n      const backupPath = `${dataDir}setofquestions${file.setNumber}_backup.json`;\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: originalFilePath,\r\n          to: backupPath\r\n        });\r\n        console.log(`已备份原始文件: ${originalFilePath} -> ${backupPath}`);\r\n      } catch (e) {\r\n        console.log(`备份文件 ${originalFilePath} 时出错:`, e);\r\n      }\r\n      \r\n      // 复制修复后的文件到原始位置\r\n      try {\r\n        await FileSystem.copyAsync({\r\n          from: file.path,\r\n          to: originalFilePath\r\n        });\r\n        console.log(`已复制修复文件: ${file.path} -> ${originalFilePath}`);\r\n      } catch (e) {\r\n        console.error(`复制修复文件到 ${originalFilePath} 时出错:`, e);\r\n      }\r\n    }\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('检查和复制修复文件时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 运行所有修复函数\r\n * @returns {Promise<boolean>} 是否所有修复都成功\r\n */\r\nexport const runAllFixes = async () => {\r\n  try {\r\n    console.log('开始运行所有修复...');\r\n    \r\n    // 修复JSON错误\r\n    const jsonFixResult = await fixJsonErrors();\r\n    console.log('JSON修复结果:', jsonFixResult);\r\n    \r\n    // 这里可以添加更多修复函数\r\n    // ...\r\n    \r\n    return jsonFixResult;\r\n  } catch (error) {\r\n    console.error('执行修复时出错:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default {\r\n  fixJsonErrors,\r\n  runAllFixes\r\n}; ","import { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Alert, Linking, SafeAreaView, ScrollView, StyleSheet, Switch, Text, TouchableOpacity, View } from 'react-native';\r\nimport { clearExamHistory, clearMistakes, clearStudyProgress, resetDatabase } from '../utils/database';\r\nimport { fixAllIssues } from '../utils/fixFavorites';\r\nimport { runAllFixes } from '../utils/fixJson';\r\n\r\n// 应用信息\r\nconst APP_INFO = {\r\n  version: '1.0.0',\r\n  author: '驾考团队',\r\n  copyright: '© 2025 捷克驾考宝典',\r\n  website: 'https://driving.example.com'\r\n};\r\n\r\n// 支持的语言\r\nconst LANGUAGES = [\r\n  { code: 'zh', name: '中文', flag: '🇨🇳' },\r\n  { code: 'en', name: 'English', flag: '🇬🇧' },\r\n  { code: 'cs', name: 'Čeština', flag: '🇨🇿' },\r\n  { code: 'es', name: 'Español', flag: '🇪🇸' },\r\n];\r\n\r\nconst SettingsScreen = ({ navigation }) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language);\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\r\n  const [darkModeEnabled, setDarkModeEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // 加载用户语言设置\r\n    const loadLanguageSettings = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('user-language');\r\n        if (savedLanguage) {\r\n          setSelectedLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language settings:', error);\r\n      }\r\n    };\r\n\r\n    loadLanguageSettings();\r\n  }, []);\r\n\r\n  // 加载设置\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      try {\r\n        const notificationsValue = await AsyncStorage.getItem('notificationsEnabled');\r\n        setNotificationsEnabled(notificationsValue === 'true');\r\n        \r\n        const darkModeValue = await AsyncStorage.getItem('darkModeEnabled');\r\n        setDarkModeEnabled(darkModeValue === 'true');\r\n      } catch (error) {\r\n        console.error('Failed to load settings', error);\r\n      }\r\n    };\r\n    \r\n    loadSettings();\r\n  }, []);\r\n\r\n  // 更改语言\r\n  const changeLanguage = async (langCode) => {\r\n    try {\r\n      await AsyncStorage.setItem('user-language', langCode);\r\n      i18n.changeLanguage(langCode);\r\n      setSelectedLanguage(langCode);\r\n      \r\n      // 提示用户需要重启应用\r\n      Alert.alert(\r\n        '语言已更改',\r\n        '请重启应用以完成语言切换',\r\n        [{ text: '确定', style: 'default' }]\r\n      );\r\n    } catch (error) {\r\n      console.error('Error saving language setting:', error);\r\n    }\r\n  };\r\n\r\n  // 切换通知\r\n  const toggleNotifications = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('notificationsEnabled', value.toString());\r\n      setNotificationsEnabled(value);\r\n      \r\n      if (value) {\r\n        Alert.alert('通知已启用', '你将会收到每日学习提醒');\r\n      } else {\r\n        Alert.alert('通知已禁用', '你将不会收到学习提醒');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save notification setting', error);\r\n    }\r\n  };\r\n  \r\n  // 切换暗黑模式\r\n  const toggleDarkMode = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem('darkModeEnabled', value.toString());\r\n      setDarkModeEnabled(value);\r\n      \r\n      Alert.alert(\r\n        value ? '暗黑模式已启用' : '暗黑模式已禁用',\r\n        value ? '界面将切换为暗色主题，重启应用后生效' : '界面将切换为亮色主题，重启应用后生效'\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to save dark mode setting', error);\r\n    }\r\n  };\r\n\r\n  // 清除收藏数据\r\n  const clearFavorites = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('favorites', JSON.stringify([]));\r\n      Alert.alert('收藏已清空', '所有收藏记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear favorites:', error);\r\n      Alert.alert('操作失败', '清空收藏记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除错题记录\r\n  const clearMistakeRecords = async () => {\r\n    try {\r\n      await clearMistakes();\r\n      Alert.alert('错题已清空', '所有错题记录已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear mistakes:', error);\r\n      Alert.alert('操作失败', '清空错题记录失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  // 清除考试历史\r\n  const clearExamRecords = async () => {\r\n    try {\r\n      await clearExamHistory();\r\n      await clearStudyProgress();\r\n      Alert.alert('考试记录已清空', '所有考试历史和学习进度已被清除');\r\n    } catch (error) {\r\n      console.error('Failed to clear exam history:', error);\r\n      Alert.alert('操作失败', '清空考试记录失败，请稍后重试');\r\n    }\r\n  };\r\n\r\n  // 重置所有数据\r\n  const handleResetData = () => {\r\n    Alert.alert(\r\n      t('settings.resetData'),\r\n      t('settings.resetConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              // 重置所有数据库\r\n              await resetDatabase();\r\n              // 清空学习进度和考试记录\r\n              await clearStudyProgress();\r\n              await clearExamHistory();\r\n              \r\n              Alert.alert(t('common.success'), '应用数据已重置，重启应用后生效');\r\n            } catch (error) {\r\n              console.error('Error resetting data:', error);\r\n              Alert.alert(t('common.error'), error.message);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 显示应用信息\r\n  const showAppInfo = () => {\r\n    Alert.alert(\r\n      '应用信息',\r\n      `捷克驾考宝典\\n版本: ${APP_INFO.version}\\n${APP_INFO.copyright}\\n\\n这是一款帮助用户备考捷克驾照考试的应用。提供模拟考试、题库浏览、错题收集等功能。`,\r\n      [{ text: '确定', style: 'default' }]\r\n    );\r\n  };\r\n  \r\n  // 前往评分\r\n  const goToRating = () => {\r\n    Alert.alert(\r\n      '评分应用',\r\n      '感谢您的使用！您的评分和反馈是我们改进的动力。',\r\n      [\r\n        { text: '稍后再说', style: 'cancel' },\r\n        { text: '去评分', onPress: () => {\r\n          // 这里应替换为实际应用商店链接\r\n          Linking.openURL('https://play.google.com/store');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n  \r\n  // 查看隐私政策\r\n  const viewPrivacyPolicy = () => {\r\n    Alert.alert(\r\n      '隐私政策',\r\n      '我们重视用户隐私。应用收集的所有数据仅用于提升使用体验，不会与第三方共享。详见完整隐私政策。',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        { text: '查看完整政策', onPress: () => {\r\n          // 这里替换为实际政策网址\r\n          Linking.openURL('https://example.com/privacy');\r\n        }}\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 添加修复应用功能\r\n  const handleFixApp = () => {\r\n    Alert.alert(\r\n      '应用修复',\r\n      '此功能将尝试修复应用中的已知问题，包括收藏、错题和JSON数据等。是否继续？',\r\n      [\r\n        { text: '取消', style: 'cancel' },\r\n        {\r\n          text: '确定',\r\n          style: 'default',\r\n          onPress: async () => {\r\n            try {\r\n              // 运行全部修复\r\n              await Promise.all([\r\n                fixAllIssues(), // 修复收藏和错题\r\n                runAllFixes()   // 修复JSON错误\r\n              ]);\r\n              \r\n              // 通知用户\r\n              Alert.alert('修复完成', '应用已完成所有可能的修复，建议重启应用以确保所有更改生效。');\r\n            } catch (error) {\r\n              console.error('修复应用时出错:', error);\r\n              Alert.alert('修复失败', `修复过程中出现错误: ${error.message}`);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 渲染语言选项\r\n  const renderLanguageOption = (language) => {\r\n    const isSelected = selectedLanguage === language.code;\r\n    \r\n    return (\r\n      <TouchableOpacity \r\n        key={language.code} \r\n        style={[styles.settingOption, isSelected && styles.selectedOption]}\r\n        onPress={() => changeLanguage(language.code)}\r\n      >\r\n        <View style={styles.languageInfo}>\r\n          <Text style={styles.languageFlag}>{language.flag}</Text>\r\n          <Text style={styles.languageName}>{language.name}</Text>\r\n        </View>\r\n        {isSelected && <Ionicons name=\"checkmark-circle\" size={24} color=\"#2196F3\" />}\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('settings.title')}</Text>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>{t('settings.language')}</Text>\r\n          <View style={styles.sectionContent}>\r\n            {LANGUAGES.map(language => renderLanguageOption(language))}\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>应用设置</Text>\r\n          <View style={styles.sectionContent}>\r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"notifications-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>每日提醒</Text>\r\n                  <Text style={styles.settingDescription}>接收每日学习提醒</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={notificationsEnabled}\r\n                onValueChange={toggleNotifications}\r\n                trackColor={{ false: '#d9d9d9', true: '#4CAF50' }}\r\n                thumbColor={notificationsEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n            \r\n            <View style={styles.settingItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"moon-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <View>\r\n                  <Text style={styles.settingTitle}>暗黑模式</Text>\r\n                  <Text style={styles.settingDescription}>使用夜间模式保护眼睛</Text>\r\n                </View>\r\n              </View>\r\n              <Switch \r\n                value={darkModeEnabled}\r\n                onValueChange={toggleDarkMode}\r\n                trackColor={{ false: '#d9d9d9', true: '#0066cc' }}\r\n                thumbColor={darkModeEnabled ? '#fff' : '#f4f3f4'}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>关于</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"information-circle-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>应用信息</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"star-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>评分应用</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={styles.optionItem}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"lock-closed-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>隐私政策</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n            \r\n            <View style={styles.versionInfo}>\r\n              <Text style={styles.versionText}>捷克驾考宝典 v1.0.0</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.section}>\r\n          <Text style={styles.sectionTitle}>开发者选项</Text>\r\n          <View style={styles.sectionContent}>\r\n            <TouchableOpacity style={styles.optionItem} onPress={handleFixApp}>\r\n              <View style={styles.settingInfo}>\r\n                <Ionicons name=\"construct-outline\" size={24} color=\"#555\" style={styles.settingIcon} />\r\n                <Text style={styles.settingTitle}>修复应用问题</Text>\r\n              </View>\r\n              <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        \r\n        <View style={styles.dangerSection}>\r\n          <TouchableOpacity style={styles.dangerButton} onPress={handleResetData}>\r\n            <Text style={styles.dangerButtonText}>{t('settings.resetData')}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 32,\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n    backgroundColor: '#fff',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2196F3',\r\n  },\r\n  section: {\r\n    backgroundColor: '#fff',\r\n    marginTop: 20,\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f0f0f0',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    margin: 16,\r\n  },\r\n  sectionContent: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#f0f0f0',\r\n  },\r\n  settingOption: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: '#E3F2FD',\r\n  },\r\n  optionText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  infoLabel: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  infoValue: {\r\n    fontSize: 16,\r\n    color: '#757575',\r\n  },\r\n  dangerSection: {\r\n    padding: 16,\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  dangerButton: {\r\n    backgroundColor: '#F44336',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n  },\r\n  dangerButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  languageInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  languageFlag: {\r\n    fontSize: 22,\r\n    marginRight: 15,\r\n  },\r\n  languageName: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  settingInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  settingIcon: {\r\n    marginRight: 15,\r\n  },\r\n  settingTitle: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  settingDescription: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    marginTop: 3,\r\n  },\r\n  versionInfo: {\r\n    alignItems: 'center',\r\n    paddingVertical: 20,\r\n  },\r\n  versionText: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n  }\r\n});\r\n\r\nexport default SettingsScreen; ","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\r\nimport { BarChart, LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width - 40;\r\n\r\nexport const AccuracyLineChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 检查数据并确保至少有一个有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.accuracy === 'number'\r\n  );\r\n  \r\n  // 如果没有足够数据，显示提示信息\r\n  if (validProgress.length < 1) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.notEnoughData')}</Text>\r\n        <Text style={styles.noDataSubtext}>至少需要2次考试记录才能显示趋势图</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近7条记录\r\n  const recentProgress = validProgress.slice(0, 7).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保accuracy值有效\r\n  const accuracyData = recentProgress.map(record => {\r\n    // 处理无效值的情况\r\n    if (record.accuracy === undefined || record.accuracy === null || isNaN(record.accuracy)) {\r\n      return 0;\r\n    }\r\n    return Math.round(record.accuracy * 100);\r\n  });\r\n  \r\n  // 如果只有一条记录，复制一份以便显示图表\r\n  if (accuracyData.length === 1) {\r\n    labels.push('#2');\r\n    accuracyData.push(accuracyData[0]);\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: accuracyData,  // 已经确保是有效数字\r\n        color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n        strokeWidth: 2\r\n      }\r\n    ],\r\n    legend: [t('progress.accuracy')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 102, 204, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    propsForDots: {\r\n      r: '6',\r\n      strokeWidth: '2',\r\n      stroke: '#0066cc'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.accuracyTrend')}</Text>\r\n      <LineChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        bezier\r\n        style={styles.chart}\r\n        yAxisSuffix=\"%\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport const QuestionCountBarChart = ({ progressHistory = [] }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  // 过滤有效记录\r\n  const validProgress = progressHistory.filter(\r\n    record => record && typeof record.questionsAnswered === 'number'\r\n  );\r\n  \r\n  // 如果没有数据，显示占位符\r\n  if (validProgress.length === 0) {\r\n    return (\r\n      <View style={styles.noDataContainer}>\r\n        <Text style={styles.noDataText}>{t('progress.noData')}</Text>\r\n        <Text style={styles.noDataSubtext}>完成考试后会显示题目统计</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 准备数据 - 最多显示最近5条记录\r\n  const recentProgress = validProgress.slice(0, 5).reverse();\r\n  const labels = recentProgress.map((record, index) => `#${index + 1}`);\r\n  \r\n  // 确保数据有效\r\n  const questionCounts = recentProgress.map(record => {\r\n    const count = record.questionsAnswered;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n  \r\n  const correctCounts = recentProgress.map(record => {\r\n    const count = record.correctCount;\r\n    return count !== undefined && !isNaN(count) ? count : 0;\r\n  });\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        data: questionCounts,\r\n        color: (opacity = 1) => `rgba(31, 97, 141, ${opacity})`,\r\n      },\r\n      {\r\n        data: correctCounts,\r\n        color: (opacity = 1) => `rgba(46, 204, 113, ${opacity})`,\r\n      }\r\n    ],\r\n    legend: [t('progress.totalQuestions'), t('progress.correct')]\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: '#ffffff',\r\n    backgroundGradientFrom: '#ffffff',\r\n    backgroundGradientTo: '#ffffff',\r\n    decimalPlaces: 0,\r\n    color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 16\r\n    },\r\n    barPercentage: 0.7\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chartContainer}>\r\n      <Text style={styles.chartTitle}>{t('progress.questionStats')}</Text>\r\n      <BarChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        style={styles.chart}\r\n        fromZero\r\n        showValuesOnTopOfBars\r\n        withInnerLines={false}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  chartContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  chart: {\r\n    marginVertical: 8,\r\n    borderRadius: 10\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10\r\n  },\r\n  noDataContainer: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n    height: 220,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  noDataText: {\r\n    color: '#666',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginBottom: 8\r\n  },\r\n  noDataSubtext: {\r\n    color: '#999',\r\n    fontSize: 14,\r\n    textAlign: 'center'\r\n  }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n    ActivityIndicator,\r\n    Alert,\r\n    ScrollView,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    View\r\n} from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { AccuracyLineChart, QuestionCountBarChart } from '../components/ProgressChart';\r\nimport { clearExamHistory, clearStudyProgress, getStudyProgressStats } from '../utils/database';\r\n\r\nexport default function StudyProgressScreen({ navigation }) {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState({\r\n    totalExams: 0,\r\n    totalQuestions: 0,\r\n    totalCorrect: 0,\r\n    averageAccuracy: 0,\r\n    progressHistory: []\r\n  });\r\n\r\n  // 加载学习进度数据\r\n  useEffect(() => {\r\n    loadProgressData();\r\n    \r\n    // 添加导航监听器，返回此页面时刷新数据\r\n    const unsubscribe = navigation.addListener('focus', loadProgressData);\r\n    return () => unsubscribe();\r\n  }, [navigation]);\r\n\r\n  // 加载进度数据\r\n  const loadProgressData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const progressStats = await getStudyProgressStats();\r\n      console.log('Loaded progress stats:', progressStats);\r\n      setStats(progressStats);\r\n    } catch (error) {\r\n      console.error('Failed to load progress data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 清除学习记录和考试历史\r\n  const handleClearProgress = () => {\r\n    Alert.alert(\r\n      t('settings.resetConfirm'),\r\n      t('progress.clearProgressConfirm'),\r\n      [\r\n        {\r\n          text: t('common.cancel'),\r\n          style: 'cancel'\r\n        },\r\n        {\r\n          text: t('common.confirm'),\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              setLoading(true);\r\n              // 清空学习进度\r\n              await clearStudyProgress();\r\n              // 清空考试历史\r\n              await clearExamHistory();\r\n              // 重新加载数据\r\n              await loadProgressData();\r\n              Alert.alert(t('common.success'), t('progress.clearProgressSuccess'));\r\n            } catch (error) {\r\n              console.error('Failed to clear progress:', error);\r\n              Alert.alert(t('common.error'), t('progress.clearProgressError'));\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  // 格式化日期\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n  };\r\n\r\n  // 格式化正确率显示\r\n  const formatAccuracy = (accuracy) => {\r\n    if (accuracy === undefined || accuracy === null || isNaN(accuracy)) {\r\n      return '0%';\r\n    }\r\n    return `${Math.round(accuracy * 100)}%`;\r\n  };\r\n\r\n  // 渲染进度历史记录\r\n  const renderProgressHistory = () => {\r\n    if (stats.progressHistory.length === 0) {\r\n      return (\r\n        <View style={styles.emptyState}>\r\n          <Ionicons name=\"bar-chart-outline\" size={60} color=\"#ccc\" />\r\n          <Text style={styles.emptyStateText}>{t('progress.noHistory')}</Text>\r\n          <Text style={styles.emptyStateSubtext}>{t('progress.startExam')}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <View style={styles.historyContainer}>\r\n        {stats.progressHistory.map((item, index) => {\r\n          // 确保正确率值有效\r\n          const accuracy = item.accuracy !== undefined && !isNaN(item.accuracy) \r\n            ? item.accuracy \r\n            : 0;\r\n            \r\n          return (\r\n            <View key={item.id || index} style={styles.historyItem}>\r\n              <View style={styles.historyHeader}>\r\n                <Text style={styles.historyDate}>{formatDate(item.date)}</Text>\r\n                <View style={[\r\n                  styles.examTypeBadge,\r\n                  { backgroundColor: getExamTypeColor(item.examType) }\r\n                ]}>\r\n                  <Text style={styles.examTypeText}>{getExamTypeLabel(item.examType)}</Text>\r\n                </View>\r\n              </View>\r\n              <View style={styles.historyStats}>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.questionsAnswered || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.questions')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{item.correctCount || 0}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.correct')}</Text>\r\n                </View>\r\n                <View style={styles.historyStat}>\r\n                  <Text style={styles.historyStatValue}>{formatAccuracy(accuracy)}</Text>\r\n                  <Text style={styles.historyStatLabel}>{t('progress.accuracy')}</Text>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  // 获取考试类型颜色\r\n  const getExamTypeColor = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return '#4CAF50';\r\n      case 'practice':\r\n        return '#2196F3';\r\n      case 'quick':\r\n        return '#FF9800';\r\n      case 'custom':\r\n        return '#9C27B0';\r\n      default:\r\n        return '#757575';\r\n    }\r\n  };\r\n\r\n  // 获取考试类型标签\r\n  const getExamTypeLabel = (examType) => {\r\n    switch (examType) {\r\n      case 'full':\r\n        return t('exam.fullExam');\r\n      case 'practice':\r\n        return t('exam.practiceMode');\r\n      case 'quick':\r\n        return t('exam.quickTest');\r\n      case 'custom':\r\n        return t('exam.customExam');\r\n      default:\r\n        return t('exam.exam');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={styles.loadingText}>{t('common.loading')}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{t('progress.title')}</Text>\r\n        </View>\r\n\r\n        <View style={styles.statsOverviewContainer}>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"school-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalExams}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalExams')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"help-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{stats.totalQuestions}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.totalQuestions')}</Text>\r\n          </View>\r\n          <View style={styles.statCard}>\r\n            <Ionicons name=\"checkmark-circle-outline\" size={24} color=\"#0066cc\" />\r\n            <Text style={styles.statValue}>{formatAccuracy(stats.averageAccuracy)}</Text>\r\n            <Text style={styles.statLabel}>{t('progress.averageAccuracy')}</Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* 准确率趋势图 */}\r\n        {stats.progressHistory.length > 0 && (\r\n          <View style={styles.chartsContainer}>\r\n            <AccuracyLineChart progressHistory={stats.progressHistory} />\r\n            <QuestionCountBarChart progressHistory={stats.progressHistory} />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.sectionContainer}>\r\n          <View style={styles.sectionHeader}>\r\n            <Text style={styles.sectionTitle}>{t('progress.recentActivity')}</Text>\r\n            {stats.progressHistory.length > 0 && (\r\n              <TouchableOpacity onPress={handleClearProgress}>\r\n                <Text style={styles.clearButton}>{t('progress.clearHistory')}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          {renderProgressHistory()}\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginBottom: 5,\r\n  },\r\n  statsOverviewContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 15,\r\n    marginBottom: 20,\r\n  },\r\n  statCard: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  statValue: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#0066cc',\r\n    marginVertical: 5,\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  chartsContainer: {\r\n    paddingHorizontal: 20,\r\n    marginBottom: 15,\r\n  },\r\n  sectionContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    margin: 15,\r\n    padding: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3,\r\n    elevation: 3,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  clearButton: {\r\n    color: '#F44336',\r\n    fontSize: 14,\r\n  },\r\n  emptyState: {\r\n    alignItems: 'center',\r\n    padding: 30,\r\n  },\r\n  emptyStateText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginTop: 10,\r\n    color: '#666',\r\n  },\r\n  emptyStateSubtext: {\r\n    fontSize: 14,\r\n    color: '#999',\r\n    textAlign: 'center',\r\n    marginTop: 5,\r\n  },\r\n  historyContainer: {\r\n    marginBottom: 10,\r\n  },\r\n  historyItem: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#eee',\r\n    paddingVertical: 12,\r\n  },\r\n  historyHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  historyDate: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n  },\r\n  examTypeBadge: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 3,\r\n    borderRadius: 12,\r\n  },\r\n  examTypeText: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  historyStats: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  historyStat: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  historyStatValue: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  historyStatLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  }\r\n}); ","import { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ActivityIndicator, Text, View } from 'react-native';\r\nimport initI18n from '../i18n/i18n';\r\n\r\n// 导入屏幕\r\nimport BrowseScreen from '../screens/BrowseScreen';\r\nimport ExamScreen from '../screens/ExamScreen';\r\nimport FavoritesScreen from '../screens/FavoritesScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport MistakesScreen from '../screens/MistakesScreen';\r\nimport QuestionDetailScreen from '../screens/QuestionDetailScreen';\r\nimport ResultScreen from '../screens/ResultScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport StudyProgressScreen from '../screens/StudyProgressScreen';\r\n\r\n// 创建导航器\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\n// 主标签导航\r\nfunction MainTabNavigator() {\r\n  const { t } = useTranslation();\r\n  \r\n  // 配置屏幕选项的函数，避免依赖问题\r\n  const getScreenOptions = () => {\r\n    return ({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        let iconName;\r\n\r\n        if (route.name === 'Home') {\r\n          iconName = focused ? 'home' : 'home-outline';\r\n        } else if (route.name === 'Browse') {\r\n          iconName = focused ? 'list' : 'list-outline';\r\n        } else if (route.name === 'Exam') {\r\n          iconName = focused ? 'school' : 'school-outline';\r\n        } else if (route.name === 'Favorites') {\r\n          iconName = focused ? 'heart' : 'heart-outline';\r\n        } else if (route.name === 'Mistakes') {\r\n          iconName = focused ? 'close-circle' : 'close-circle-outline';\r\n        } else if (route.name === 'Settings') {\r\n          iconName = focused ? 'settings' : 'settings-outline';\r\n        }\r\n\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n      tabBarActiveTintColor: '#0066cc',\r\n      tabBarInactiveTintColor: 'gray',\r\n      headerShown: false\r\n    });\r\n  };\r\n  \r\n  // 获取屏幕标签文本的函数\r\n  const getTabLabel = (key) => {\r\n    return t(`navigation.${key.toLowerCase()}`);\r\n  };\r\n  \r\n  return (\r\n    <Tab.Navigator \r\n      screenOptions={getScreenOptions()}\r\n      style={{ pointerEvents: 'auto' }}\r\n    >\r\n      <Tab.Screen \r\n        name=\"Home\" \r\n        component={HomeScreen} \r\n        options={{ tabBarLabel: getTabLabel('home') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Browse\" \r\n        component={BrowseScreen} \r\n        options={{ tabBarLabel: getTabLabel('browse') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Exam\" \r\n        component={ExamScreen} \r\n        options={{ tabBarLabel: getTabLabel('exam') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Favorites\" \r\n        component={FavoritesScreen} \r\n        options={{ tabBarLabel: getTabLabel('favorites') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Mistakes\" \r\n        component={MistakesScreen} \r\n        options={{ tabBarLabel: getTabLabel('mistakes') }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreen} \r\n        options={{ tabBarLabel: getTabLabel('settings') }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// 应用导航器\r\nexport default function AppNavigator() {\r\n  const [isI18nInitialized, setIsI18nInitialized] = useState(false);\r\n  \r\n  // 初始化i18n\r\n  useEffect(() => {\r\n    const setupI18n = async () => {\r\n      try {\r\n        await initI18n();\r\n        setIsI18nInitialized(true);\r\n      } catch (error) {\r\n        console.error('Failed to initialize i18n:', error);\r\n      }\r\n    };\r\n    \r\n    setupI18n();\r\n  }, []);\r\n  \r\n  // 显示加载状态\r\n  if (!isI18nInitialized) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size=\"large\" color=\"#0066cc\" />\r\n        <Text style={{ marginTop: 20, fontSize: 16, color: '#666' }}>加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  return <RootNavigator />;\r\n}\r\n\r\n// 将根导航器拆分为单独的组件\r\nfunction RootNavigator() {\r\n  const { t } = useTranslation();\r\n  \r\n  // 获取屏幕标题的函数\r\n  const getScreenTitle = (key) => {\r\n    return t(`navigation.${key}`);\r\n  };\r\n  \r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: true,\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n        headerTintColor: '#0066cc',\r\n      }}\r\n    >\r\n      <Stack.Screen \r\n        name=\"Main\" \r\n        component={MainTabNavigator} \r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"QuestionDetail\" \r\n        component={QuestionDetailScreen} \r\n        options={{ title: getScreenTitle('question_detail') }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"ExamResult\" \r\n        component={ResultScreen} \r\n        options={{ \r\n          title: getScreenTitle('exam_result'),\r\n          headerBackVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"StudyProgress\" \r\n        component={StudyProgressScreen} \r\n        options={{ title: getScreenTitle('study_progress') }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n} ","import { NavigationContainer } from '@react-navigation/native';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, StatusBar, StyleSheet, Text, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n// 导入本地组件\r\nimport initI18n, { isI18nInitialized } from './src/i18n/i18n';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { initDatabase } from './src/utils/database';\r\n\r\n// 保持启动画面可见直到我们准备好渲染\r\nSplashScreen.preventAutoHideAsync().catch(() => {});\r\n\r\nexport default function App() {\r\n  // 状态管理\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n  const [initError, setInitError] = useState(null);\r\n\r\n  // 初始化应用\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        console.log('App initializing...');\r\n        \r\n        // 初始化国际化\r\n        if (!isI18nInitialized()) {\r\n          await initI18n();\r\n          console.log('i18n initialized');\r\n        }\r\n        \r\n        // 初始化数据库\r\n        await initDatabase();\r\n        console.log('Database initialized');\r\n        \r\n        // 预加载其他任何资源或数据...\r\n      } catch (error) {\r\n        console.error('Error during app initialization:', error);\r\n        setInitError(error);\r\n      } finally {\r\n        setAppIsReady(true);\r\n        await SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  // 渲染发生错误的界面\r\n  if (initError) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.errorText}>应用初始化失败</Text>\r\n        <Text style={styles.errorDetails}>{initError.message}</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染加载界面\r\n  if (!appIsReady) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <ActivityIndicator size=\"large\" color=\"#4c669f\" />\r\n        <Text style={styles.loadingText}>应用加载中...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // 渲染主应用\r\n  return (\r\n    <SafeAreaProvider>\r\n      <NavigationContainer>\r\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\r\n        <AppNavigator />\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#f8f9fa',\r\n    padding: 20,\r\n  },\r\n  loadingText: {\r\n    marginTop: 16,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  errorText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#e74c3c',\r\n    marginBottom: 12,\r\n  },\r\n  errorDetails: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"232\":\"d40c0fe6\",\"643\":\"20411701\",\"757\":\"c251cf27\",\"778\":\"58e65c94\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/cz-driver/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [34], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["navigation","home","browse","exam","favorites","mistakes","settings","question_detail","exam_result","title","subtitle","startExam","examDescription","browseTopic","browseDescription","reviewMistakes","mistakesDescription","favoritesDescription","studyStats","examsTaken","questionsAnswered","accuracy","allQuestions","search","categories","traffic_signs","traffic_rules","priority","parking","speed_limits","highway","penalties","general","noQuestionsFound","start","description","timeLimit","questionCount","timeRemaining","submit","next","previous","finishExam","chooseMode","customExam","cancel","examPreparation","examInfo","question","selectAnswer","checkAnswer","correct","incorrect","explanation","nextQuestion","loading","result","passed","failed","score","requiredToPass","reviewIncorrect","retakeExam","backToHome","examDetails","yourAnswer","correctAnswer","viewExplanation","timeSpent","correctCount","incorrectCount","noFavorites","browseToAdd","browseCatalog","removeFavorite","addFavorite","edit","delete","selectAll","deselectAll","favoritesCount","viewDetails","noMistakes","practiceToContinue","startPractice","mistakesCount","sortNewest","sortOldest","clearAll","clearConfirm","language","about","version","resetData","resetConfirm","resetSuccess","languages","en","zh","cs","es","appSettings","dailyReminder","reminderDescription","darkMode","darkModeDescription","appInfo","rateApp","privacyPolicy","appVersion","common","error","confirm","save","done","yes","no","study_progress","examInfoLine1","examInfoLine2","examInfoLine3","examInfoLine4","fullExam","practiceMode","quickTest","progress","totalExams","totalQuestions","averageAccuracy","recentActivity","noHistory","clearHistory","clearProgressConfirm","clearProgressSuccess","clearProgressError","questions","accuracyTrend","questionStats","notEnoughData","noData","success","isInitialized","initI18n","_ref","_asyncToGenerator","userLanguage","storedLanguage","AsyncStorage","getItem","console","i18n","initReactI18next","init","resources","translation","lng","fallbackLng","interpolation","escapeValue","compatibilityJSON","log","apply","arguments","isI18nInitialized","styles","StyleSheet","create","container","flexDirection","justifyContent","alignItems","marginVertical","paddingHorizontal","backgroundColor","borderRadius","alignSelf","languageButton","paddingVertical","marginHorizontal","activeLanguageButton","languageText","fontSize","color","activeLanguageText","fontWeight","currentLanguage","onChangeLanguage","useTranslation","t","_jsx","View","style","children","code","name","icon","map","lang","TouchableOpacity","onPress","Text","trafficSignalImages","require","imageAssets","getQuestionTranslation","length","undefined","Error","translations","answers","Array","isArray","_objectSpread","ans","text","warn","id","message","hasError","loadQuestionSet","setNumber","questionSet","default","translatedQuestion","options","idx","String","fromCharCode","isCorrect","picture","signalMatch","match","signalId","parseInt","signalImage","includes","imageMatch","imageNumber","Math","random","toString","substr","category","loadAllQuestionSets","_ref2","sets","errors","set","push","_toConsumableArray","e","join","backupQuestions","backupError","getQuestionsByCategory","_ref3","filter","q","_x","getAllCategories","_ref4","from","Set","getTrafficSignalImage","getChineseCategoryName","createShadow","_ref$offset","offset","width","height","_ref$opacity","opacity","_ref$radius","radius","_ref$elevation","elevation","boxShadow","getImageProps","imageStyle","resizeMode","tintColor","imageProps","_objectWithoutProperties","_excluded","_Dimensions$get","Dimensions","get","responsiveWidth","percentage","responsiveHeight","responsiveFontSize","size","scaleFactor","min","round","flex","loadingContainer","loadingText","marginTop","header","padding","borderBottomWidth","borderBottomColor","searchContainer","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","searchIcon","marginRight","searchInput","clearButton","sectionTitle","marginLeft","marginBottom","categoriesContainer","paddingTop","paddingBottom","categoriesList","categoryButton","categoryButtonActive","categoryButtonText","categoryButtonTextActive","resultsContainer","resultCount","questionsList","questionCard","questionHeader","categoryBadge","categoryLabel","questionId","questionText","lineHeight","imageContainer","questionImage","cardFooter","borderTopWidth","borderTopColor","iconButton","footerRight","viewButton","viewButtonText","emptyContainer","emptyText","textAlign","resetButton","resetButtonText","errorContainer","errorTitle","errorMessage","retryButton","retryButtonText","idContainer","_useTranslation","useNavigation","_useState","useState","_useState2","_slicedToArray","setLoading","_useState3","_useState4","setQuestions","_useState5","_useState6","setCategories","_useState7","_useState8","selectedCategory","setSelectedCategory","_useState9","_useState0","searchQuery","setSearchQuery","_useState1","_useState10","setCurrentLanguage","_useState11","_useState12","setError","fetchData","assetDataService","allCategories","formattedCategories","concat","cat","categoryError","handleLanguageChange","changeLanguage","useEffect","handleQuestionPress","Alert","alert","navigate","_jsxs","ActivityIndicator","Ionicons","filteredQuestions","filtered","query","toLowerCase","getFilteredQuestions","SafeAreaView","StatusBar","barStyle","QuestionLanguageSwitcher","TextInput","placeholder","value","onChangeText","placeholderTextColor","FlatList","horizontal","data","renderItem","item","keyExtractor","showsHorizontalScrollIndicator","contentContainerStyle","activeOpacity","Image","source","_item$id","showsVerticalScrollIndicator","ListEmptyComponent","imageUrl","difficulty","isWeb","Platform","OS","getDatabase","SQLite","initDatabase","setItem","JSON","stringify","db","transaction","tx","executeSql","checkAndInsertInitialData","_","rows","_array","count","insertMockData","forEach","getAllQuestions","Promise","resolve","reject","parse","storedQuestions","addToFavorites","_ref5","params","_ref6","_ref7","sort","slice","_ref8","_ref9","find","_ref0","isFavorite","isQuestionFavorited","index","_ref1","now","Date","_ref10","storedFavorites","findIndex","f","_f$questionId","_f$id","dateAdded","timestamp","_x4","removeFromFavorites","_ref11","updatedFavorites","_f$questionId2","_f$id2","fId","qId","_x5","_ref12","_ref13","found","some","_f$questionId3","_f$id3","_x6","getFavoriteQuestions","_ref14","_ref15","favoriteQuestions","_loop","favorite","recordMistake","_ref16","userAnswer","toISOString","mistakeId","_ref17","storedMistakes","existingIndex","m","attempts","lastAttempt","_x7","_x8","getMistakes","_ref18","_ref19","mistakesData","removeMistake","_ref20","_ref21","rowsAffected","updatedMistakes","_m$questionId","mId","_x9","clearMistakes","_ref22","_ref23","innerTx","_ref24","afterClear","afterMistakes","resetDatabase","_ref25","recordStudyProgress","_ref26","examType","_data$date","date","progressData","_x0","getStudyProgressStats","_ref27","_ref28","stats","totalCorrect","_ref29","progressHistory","examResultsData","examResults","reduce","sum","clearStudyProgress","_ref30","updateStudyProgress","correctAnswers","_ref33","split","studyProgress","storedProgress","todayIndex","_x11","_x12","insertResult","clearExamHistory","_ref34","_ref35","_ref36","storedResults","isSmallDevice","isMediumDevice","baseFactor","EXAM_CONFIG","prepContainer","examInfoCard","select","ios","android","web","examTitle","examRules","ruleTitle","ruleItem","ruleText","startButton","startButtonText","questionContainer","currentHeight","questionNumber","timerContainer","timerText","optionsContainer","optionButton","selectedOption","borderColor","borderWidth","correctOption","incorrectOption","optionLetter","optionText","resultIcon","navigationContainer","navButton","disabledButton","navButtonText","disabledButtonText","submitButton","submitButtonText","progressContainer","progressList","progressItem","activeProgressItem","answeredProgressItem","progressItemText","activeProgressItemText","answeredProgressItemText","resultsScrollView","resultsContent","resultHeader","overflow","resultBanner","resultText","scoreCircle","scoreValue","resultStats","statsRow","statItem","statValue","statLabel","resultMessage","messageText","resultActions","flexWrap","actionButton","minWidth","actionButtonWide","actionButtonText","questionScrollView","bottomPadding","errorText","mistakesInfoCard","mistakesInfoHeader","mistakesInfoTitle","mistakesInfoText","primaryButton","examFinishedBanner","examFinishedText","examStarted","setExamStarted","examFinished","setExamFinished","currentIndex","setCurrentIndex","setAnswers","remainingTime","setRemainingTime","_useState13","_useState14","results","setResults","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","timerRef","useRef","loadQuestions","categoryItems","current","clearInterval","updatedQuestions","formattedQuestions","examId","setInterval","prev","answeredQuestions","Object","keys","questionResults","mistakesToRecord","opt","mistakePromises","mistake","catch","all","isPassed","examResult","unansweredQuestions","_ref31","newExamResult","insertId","_x1","_x10","detailsJson","saveExamResult","goToHome","examCompleted","viewMistakes","restartExam","formatTime","seconds","secs","floor","padStart","renderCategoryItem","ScrollView","option","optionId","newAnswers","_defineProperty","disabled","renderCurrentQuestion","LinearGradient","colors","renderExamResults","headerButtons","headerButton","headerButtonText","deleteButton","deleteButtonText","listContainer","favoriteItem","selectedItem","checkboxContainer","favoriteContent","favoriteHeader","favoriteCategory","favoriteDate","favoriteQuestion","favoriteActions","setFavorites","isEditing","setIsEditing","selectedItems","setSelectedItems","loadFavorites","processedData","addListener","toggleEditMode","toggleSelectItem","itemId","deleteSelected","_Fragment","dateString","toLocaleDateString","onLongPress","HomeScreen","setStats","setFavoritesCount","setMistakesCount","features","screen","badge","isMounted","loadStats","progressStats","loadFavoritesCount","loadMistakesCount","unsubscribe","_route$params","route","getState","routes","r","setTimeout","setParams","checkExamResults","getFeatureTitle","scrollContent","headerGradient","headerImage","featuresContainer","featuresGrid","feature","featureCard","featureIconContainer","badgeContainer","badgeText","featureTitle","cardSection","statsCard","statsContent","statDivider","isNaN","statsFooter","viewMoreText","infoCard","infoHeader","infoTitle","infoText","borderBottomLeftRadius","borderBottomRightRadius","position","top","right","minHeight","clearButtonText","mistakesList","mistakeItem","mistakeHeader","categoryText","mistakeDate","mistakeQuestion","answerContainer","answerRow","answerBadge","wrongBadge","correctBadge","answerBadgeText","answerText","mistakeActions","emptySubText","startExamButton","startExamText","setMistakes","setAllQuestions","loadMistakes","mistakeRecords","mistakesWithDetails","questionDetail","chineseCategory","a","b","processMistakes","_onPress2","userAnswerIndex","charCodeAt","userAnswerText","correctAnswerIndex","correctAnswerText","_onPress","headerTop","backBtn","headerInfo","questionIdText","favoriteButton","languageSwitcherContainer","backButton","backButtonText","optionIcon","selectedOptionText","correctOptionText","incorrectOptionText","resultContainer","correctBanner","incorrectBanner","explanationContainer","explanationHeader","explanationTitle","explanationText","buttonContainer","button","buttonDisabled","nextButton","buttonText","setQuestion","setSelectedOption","showAnswer","setShowAnswer","setIsFavorite","isAnswerCorrect","setIsAnswerCorrect","loadQuestion","assetQuestion","formattedQuestion","favoriteStatus","toggleFavorite","renderOption","isSelected","optionStyle","textStyle","iconName","iconColor","goBack","ResultScreen","setIsPassed","setScore","setPercentageScore","calculatedScore","scoreCircleContainer","scoreText","scoreSubtext","statsContainer","questionItem","incorrectBadge","numberOfLines","answerInfo","answerLabel","correctText","incorrectText","scrollEnabled","buttonIcon","secondaryButton","secondaryButtonText","repairFavoritesData","validFavorites","repaired","fav","ensureCleanMistakes","fixAllIssues","favResult","mistakeResult","fixJsonErrors","checkAndCopyFixedFiles","FileSystem","dataDir","documentDirectory","makeDirectoryAsync","intermediates","fixedFiles","i","fixedFileName","fixedFilePath","getInfoAsync","exists","path","file","originalFilePath","backupPath","copyAsync","to","runAllFixes","jsonFixResult","LANGUAGES","flag","scrollContainer","section","sectionContent","settingOption","infoRow","infoLabel","infoValue","dangerSection","dangerButton","dangerButtonText","languageInfo","languageFlag","languageName","settingItem","settingInfo","settingIcon","settingTitle","settingDescription","versionInfo","versionText","selectedLanguage","setSelectedLanguage","notificationsEnabled","setNotificationsEnabled","darkModeEnabled","setDarkModeEnabled","loadLanguageSettings","savedLanguage","loadSettings","notificationsValue","darkModeValue","langCode","toggleNotifications","_x2","toggleDarkMode","_x3","renderLanguageOption","Switch","onValueChange","trackColor","false","true","thumbColor","optionItem","screenWidth","AccuracyLineChart","_ref$progressHistory","validProgress","record","noDataContainer","noDataText","noDataSubtext","recentProgress","reverse","labels","accuracyData","datasets","strokeWidth","legend","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","propsForDots","stroke","chartContainer","chartTitle","LineChart","bezier","chart","yAxisSuffix","QuestionCountBarChart","_ref2$progressHistory","barPercentage","BarChart","fromZero","showValuesOnTopOfBars","withInnerLines","StudyProgressScreen","loadProgressData","formatDate","getFullYear","getMonth","getDate","formatAccuracy","getExamTypeColor","getExamTypeLabel","statsOverviewContainer","statCard","chartsContainer","sectionContainer","sectionHeader","emptyState","emptyStateText","emptyStateSubtext","historyContainer","historyItem","historyHeader","historyDate","examTypeBadge","examTypeText","historyStats","historyStat","historyStatValue","historyStatLabel","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","MainTabNavigator","getTabLabel","key","Navigator","screenOptions","tabBarIcon","focused","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","pointerEvents","Screen","component","tabBarLabel","BrowseScreen","ExamScreen","FavoritesScreen","MistakesScreen","SettingsScreen","AppNavigator","setIsI18nInitialized","setupI18n","RootNavigator","getScreenTitle","headerTitleStyle","headerTintColor","QuestionDetailScreen","headerBackVisible","App","appIsReady","setAppIsReady","initError","setInitError","_prepare","SplashScreen","prepare","errorDetails","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","mode","this","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","chunkId","promises","u","miniCssF","g","globalThis","Function","window","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","type","target","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}